{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n\n//   useEffect(()=>{ listUsers().then(setUsers); },[]);\n\n//   const create = async () => {\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName(''); setEmail('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"users-title\">\n//         <h2 id=\"users-title\">Users</h2>\n//         <div className=\"form-row\"><label>Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Email<input value={email} onChange={e=>setEmail(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Role<select value={role} onChange={e=>setRole(e.target.value)}><option>Admin</option><option>Manager</option><option>Developer</option><option>Reporter</option></select></label></div>\n//         <button className=\"btn\" onClick={create}><FiUserPlus style={{verticalAlign:'middle',marginRight:6}} /> Create user</button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"users-list-title\">\n//         <h2 id=\"users-list-title\">All users</h2>\n//         <table className=\"table\" role=\"table\" aria-label=\"Users table\">\n//           <thead><tr><th>Name</th><th>Email</th><th>Role</th></tr></thead>\n//           <tbody>{users.map(u=>(<tr key={u.id}><td>{u.name}</td><td>{u.email}</td><td>{u.role}</td></tr>))}</tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\n// for responsive is ok\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser({ id, ...editForm });\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     console.log(\"Saving user:\", id, editForm);\n//     await updateUser(id, editForm);   // ✅ fixed: send id + patch separately\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* keep your CSS-in-JSX here */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       }</style>\n\n//     </div>\n\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser(id, editForm);\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* ✅ Corrected CSS */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: white; /* fixed */\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n////////////////////////////////////////////////////////////////////////////////////\n\n// import React, { useEffect, useState } from 'react';\n// // Import the new mockApi that uses localStorage\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi'; \n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload } from 'react-icons/fi';\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     role: 'Developer', \n//     department: 'Engineering',\n//     active: true, \n//     language: 'English', \n//     mobileNumber: '', \n//     dateFormat: 'YYYY-MM-DD', \n//     passwordResetNeeded: false, \n//     profileFile: null, // Note: This is client-side state for the file input\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser); \n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({}); \n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [error, setError] = useState(null); \n\n//   // Destructure for easier use in the creation form\n//   const {\n//     firstName, lastName, email, role, department, active, language, mobileNumber, dateFormat, passwordResetNeeded, profileFile\n//   } = newUserForm;\n\n//   // --- Initial Data Fetch (Pulls from LocalStorage via mockApi) ---\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         // Since mockApi is now responsible for normalization, we just set the data\n//         setUsers(data); \n//       } catch (err) {\n//         console.error('Failed to load users:', err);\n//         setError('Failed to load users');\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   // --- Form Handlers ---\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setEditForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   // --- CRUD Operations ---\n//   const create = async () => {\n//     if (!firstName.trim() || !lastName.trim() || !email.trim()) {\n//       setError('First Name, Last Name, and Email are required.');\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: `${firstName.trim()} ${lastName.trim()}`,\n//         // For mock persistence, store file metadata only\n//         profileFile: profileFile ? { name: profileFile.name, size: profileFile.size } : null \n//       };\n\n//       await addUser(newUser);\n//       // Re-fetch the updated list from mockApi (which contains localStorage data)\n//       const updatedUsers = await listUsers(); \n//       setUsers(updatedUsers); \n//       setNewUserForm(defaultNewUser); \n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to add user:', err);\n//       setError('Failed to add user');\n//     }\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     // Set edit form with the complete user object structure\n//     setEditForm({ ...u }); \n//     setError(null);\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({});\n//     setError(null);\n//   };\n\n//   const saveEdit = async (id) => {\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\n//         setError('First Name, Last Name, and Email cannot be empty.');\n//         return;\n//     }\n//     try {\n//         const updatedUser = {\n//             ...editForm,\n//             name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\n//             // Handle file update if a new file was selected during edit (for mock, we ignore the actual file)\n//             profileFile: editForm.profileFile && editForm.profileFile.name ? \n//                            { name: editForm.profileFile.name, size: editForm.profileFile.size } : \n//                            editForm.profileFile\n//         };\n\n//         await updateUser(updatedUser);\n//         const updatedUsers = await listUsers();\n//         setUsers(updatedUsers); \n//         cancelEdit();\n//         setError(null);\n//     } catch (err) {\n//       console.error('Failed to update user:', err);\n//       setError('User not found or failed to update');\n//     }\n//   };\n\n//   const remove = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers); \n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to delete user:', err);\n//       setError('User not found or failed to delete');\n//     }\n//   };\n\n//   // --- Filtering and Styling ---\n//   const filteredUsers = users.filter(user => {\n//     const searchLower = searchTerm.toLowerCase();\n//     return (\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\n//       (user.department && user.department.toLowerCase().includes(searchLower))\n//     );\n//   });\n\n//   const getRoleColor = (roleOrDepartment) => {\n//     const colors = {\n//       'admin': 'role-admin',\n//       'manager': 'role-manager',\n//       'developer': 'role-developer',\n//       'reporter': 'role-reporter',\n//       'engineering': 'role-developer', // Reusing color\n//       'sales': 'role-sales',\n//       'hr': 'role-hr',\n//       'marketing': 'role-marketing'\n//     };\n//     return colors[roleOrDepartment.toLowerCase()] || '';\n//   };\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\n//         {error && <p className=\"error-message\">{error}</p>}\n//       </div>\n\n//       {/* --- */}\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid-expanded\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">First Name *</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"firstName\"\n//                 value={firstName}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"First Name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Last Name *</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"lastName\"\n//                 value={lastName}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Last Name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address *</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"email\"\n//                 value={email}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Email Address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Mobile Number</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"mobileNumber\"\n//                 value={mobileNumber}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Mobile Number\"\n//                 type=\"tel\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" name=\"role\" value={role} onChange={handleNewUserChange}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Department</label>\n//               <select className=\"modern-select\" name=\"department\" value={department} onChange={handleNewUserChange}>\n//                 <option>Engineering</option>\n//                 <option>Sales</option>\n//                 <option>HR</option>\n//                 <option>Marketing</option>\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Preferred Language</label>\n//               <select className=\"modern-select\" name=\"language\" value={language} onChange={handleNewUserChange}>\n//                 <option>English</option>\n//                 <option>Spanish</option>\n//                 <option>French</option>\n//                 <option>German</option>\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Date Format</label>\n//               <select className=\"modern-select\" name=\"dateFormat\" value={dateFormat} onChange={handleNewUserChange}>\n//                 <option>YYYY-MM-DD</option>\n//                 <option>MM/DD/YYYY</option>\n//                 <option>DD/MM/YYYY</option>\n//               </select>\n//             </div>\n\n//             <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">User Status</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"active\"\n//                   checked={active}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">{active ? 'Active' : 'Inactive'}</span>\n//               </label>\n//             </div>\n\n//             <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">Password Reset</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"passwordResetNeeded\"\n//                   checked={passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">Reset on next login</span>\n//               </label>\n//             </div>\n\n//             <div className=\"input-group file-group\">\n//               <label className=\"input-label\">Profile Picture</label>\n//               <label htmlFor=\"profileFile\" className=\"file-upload-btn\">\n//                 <FiUpload className=\"btn-icon\" />\n//                 {profileFile ? profileFile.name : 'Choose File'}\n//               </label>\n//               <input\n//                 id=\"profileFile\"\n//                 type=\"file\"\n//                 name=\"profileFile\"\n//                 onChange={handleNewUserChange}\n//                 accept=\"image/*\"\n//               />\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">\n//               Team Members ({filteredUsers.length})\n//             </h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Department</th>\n//                   <th>Role</th>\n//                   <th>Active</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             name=\"firstName\"\n//                             value={editForm.firstName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"First Name\"\n//                           />\n//                           <input\n//                             className=\"edit-input\"\n//                             name=\"lastName\"\n//                             value={editForm.lastName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"Last Name\"\n//                             style={{marginTop: '5px'}}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             name=\"email\"\n//                             value={editForm.email || ''}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                             <select\n//                                 className=\"edit-select\"\n//                                 name=\"department\"\n//                                 value={editForm.department || defaultNewUser.department}\n//                                 onChange={handleEditChange}\n//                             >\n//                                 <option>Engineering</option>\n//                                 <option>Sales</option>\n//                                 <option>HR</option>\n//                                 <option>Marketing</option>\n//                             </select>\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             name=\"role\"\n//                             value={editForm.role || defaultNewUser.role}\n//                             onChange={handleEditChange}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                             <input\n//                                 type=\"checkbox\"\n//                                 name=\"active\"\n//                                 checked={editForm.active || false}\n//                                 onChange={handleEditChange}\n//                             />\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\n//                                 {u.profileFile && '📁'}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                             <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\n//                                 {u.department}\n//                             </span>\n//                         </td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                             <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`} title={u.active ? 'Active' : 'Inactive'}></span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       <style jsx>{`\n//         /* Existing Styles */\n//         .users-container {\n//           min-height: 100vh;\n//           background: #f7f9fd; /* Lighter background */\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: #2d3748;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.8;\n//           color: #4a5568;\n//         }\n\n//         .error-message {\n//             color: #e53e3e;\n//             background: #fed7d7;\n//             padding: 8px 15px;\n//             border-radius: 8px;\n//             margin-top: 15px;\n//             display: inline-block;\n//             font-weight: 500;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 450px 1fr; /* Increased form size */\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05); /* Lighter shadow */\n//         }\n\n//         .users-form-card,\n//         .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         /* NEW/UPDATED Styles */\n//         .form-grid-expanded {\n//           display: grid;\n//           grid-template-columns: 1fr 1fr; /* Two columns for a denser form */\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         /* Checkbox and File Upload Styles */\n//         .checkbox-group {\n//             grid-column: span 1;\n//         }\n\n//         .checkbox-label {\n//             display: flex;\n//             align-items: center;\n//             font-weight: 400;\n//             color: #4a5568;\n//             cursor: pointer;\n//             padding: 10px;\n//             background: #edf2f7;\n//             border-radius: 8px;\n//         }\n\n//         .checkbox-label input[type=\"checkbox\"] {\n//             margin-right: 10px;\n//             width: 18px;\n//             height: 18px;\n//             accent-color: #667eea;\n//         }\n\n//         .file-group input[type=\"file\"] {\n//           display: none;\n//         }\n\n//         .file-upload-btn {\n//           padding: 12px 16px;\n//           border: 2px solid #667eea;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 500;\n//           color: #667eea;\n//           background: #ebf4ff;\n//           cursor: pointer;\n//           transition: background-color 0.2s;\n//           display: flex;\n//           align-items: center;\n//           justify-content: flex-start;\n//         }\n\n//         .file-upload-btn:hover {\n//           background: #d4e3ff;\n//         }\n\n//         .file-upload-btn .btn-icon {\n//           margin-right: 8px;\n//           font-size: 1.2rem;\n//         }\n//         /* End New Styles */\n\n//         .modern-input,\n//         .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//           width: 100%;\n//           box-sizing: border-box;\n//         }\n\n//         .modern-input:focus,\n//         .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           grid-column: 1 / -1; /* Make button span both columns */\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 800px; /* Increased min-width for new columns */\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .file-indicator {\n//             font-size: 1.1em;\n//             cursor: help;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//           flex-shrink: 0;\n//         }\n\n//         /* New Status Dot */\n//         .status-dot {\n//             height: 10px;\n//             width: 10px;\n//             border-radius: 50%;\n//             display: inline-block;\n//             margin-right: 5px;\n//         }\n\n//         .status-active {\n//             background-color: #48bb78; /* Green */\n//         }\n\n//         .status-inactive {\n//             background-color: #e53e3e; /* Red */\n//         }\n//         /* End New Status Dot */\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//           white-space: nowrap; /* Prevents wrapping */\n//         }\n\n//         .role-admin {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .role-manager {\n//           background: #feebc8;\n//           color: #d69e2e;\n//         }\n\n//         .role-developer, .role-engineering {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .role-reporter {\n//           background: #e9d8fd;\n//           color: #6b46c1;\n//         }\n\n//         /* New Department Badges */\n//         .role-sales {\n//             background: #bee3f8;\n//             color: #2c5282;\n//         }\n\n//         .role-hr {\n//             background: #fff0f5;\n//             color: #d53f8c;\n//         }\n\n//         .role-marketing {\n//             background: #faf089;\n//             color: #744210;\n//         }\n//         /* End New Department Badges */\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit,\n//         .btn-delete,\n//         .btn-success,\n//         .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input,\n//         .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//           box-sizing: border-box;\n//         }\n\n//         .edit-input:focus,\n//         .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         /* Media Queries */\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card,\n//           .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .form-grid-expanded {\n//               grid-template-columns: 1fr; /* Single column layout for small screens */\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.85rem;\n//             min-width: 600px;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 10px 6px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: row; /* Keep action buttons inline on smaller screens */\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//             align-items: flex-start;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 1rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/users/Users.js"],"sourcesContent":["\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listUsers, addUser } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiUserPlus } from 'react-icons/fi';\r\n\r\n// export default function Users() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [role, setRole] = useState('Developer');\r\n\r\n//   useEffect(()=>{ listUsers().then(setUsers); },[]);\r\n\r\n//   const create = async () => {\r\n//     const u = { id: uuidv4(), name, email, role };\r\n//     await addUser(u);\r\n//     setUsers(await listUsers());\r\n//     setName(''); setEmail('');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"grid\">\r\n//       <div className=\"card\" aria-labelledby=\"users-title\">\r\n//         <h2 id=\"users-title\">Users</h2>\r\n//         <div className=\"form-row\"><label>Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\r\n//         <div className=\"form-row\"><label>Email<input value={email} onChange={e=>setEmail(e.target.value)} /></label></div>\r\n//         <div className=\"form-row\"><label>Role<select value={role} onChange={e=>setRole(e.target.value)}><option>Admin</option><option>Manager</option><option>Developer</option><option>Reporter</option></select></label></div>\r\n//         <button className=\"btn\" onClick={create}><FiUserPlus style={{verticalAlign:'middle',marginRight:6}} /> Create user</button>\r\n//       </div>\r\n//       <div className=\"card\" aria-labelledby=\"users-list-title\">\r\n//         <h2 id=\"users-list-title\">All users</h2>\r\n//         <table className=\"table\" role=\"table\" aria-label=\"Users table\">\r\n//           <thead><tr><th>Name</th><th>Email</th><th>Role</th></tr></thead>\r\n//           <tbody>{users.map(u=>(<tr key={u.id}><td>{u.name}</td><td>{u.email}</td><td>{u.role}</td></tr>))}</tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for responsive is ok\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\r\n\r\n// export default function Users() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [role, setRole] = useState('Developer');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     listUsers().then(setUsers);\r\n//   }, []);\r\n\r\n//   const create = async () => {\r\n//     if (!name || !email) return;\r\n//     const u = { id: uuidv4(), name, email, role };\r\n//     await addUser(u);\r\n//     setUsers(await listUsers());\r\n//     setName('');\r\n//     setEmail('');\r\n//   };\r\n\r\n//   const startEdit = (u) => {\r\n//     setEditingId(u.id);\r\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditForm({ name: '', email: '', role: '' });\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     await updateUser({ id, ...editForm });\r\n//     setUsers(await listUsers());\r\n//     cancelEdit();\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     await deleteUser(id);\r\n//     setUsers(await listUsers());\r\n//   };\r\n\r\n//   const filteredUsers = users.filter(user =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"users-container\">\r\n//       {/* Header Section */}\r\n//       <div className=\"users-header\">\r\n//         <h1 className=\"users-title\">User Management</h1>\r\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\r\n//       </div>\r\n\r\n//       <div className=\"users-grid\">\r\n//         {/* User creation form */}\r\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-form-title\" className=\"card-title\">\r\n//               <FiUserPlus className=\"icon-spacing\" />\r\n//               Add New User\r\n//             </h2>\r\n//           </div>\r\n          \r\n//           <div className=\"form-grid\">\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Full Name</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={name} \r\n//                 onChange={e => setName(e.target.value)}\r\n//                 placeholder=\"Enter full name\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Email Address</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={email} \r\n//                 onChange={e => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter email address\"\r\n//                 type=\"email\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Role</label>\r\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\r\n//                 <option>Admin</option>\r\n//                 <option>Manager</option>\r\n//                 <option>Developer</option>\r\n//                 <option>Reporter</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <button className=\"create-btn\" onClick={create}>\r\n//             <FiUserPlus className=\"btn-icon\" />\r\n//             Create User\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* User list section */}\r\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\r\n//             <div className=\"search-container\">\r\n//               <FiSearch className=\"search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"search-input\"\r\n//                 placeholder=\"Search users...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"table-container\">\r\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Email</th>\r\n//                   <th>Role</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredUsers.map(u => (\r\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\r\n//                     {editingId === u.id ? (\r\n//                       <>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.name}\r\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.email}\r\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <select\r\n//                             className=\"edit-select\"\r\n//                             value={editForm.role}\r\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\r\n//                           >\r\n//                             <option>Admin</option>\r\n//                             <option>Manager</option>\r\n//                             <option>Developer</option>\r\n//                             <option>Reporter</option>\r\n//                           </select>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\r\n//                               <FiCheck />\r\n//                             </button>\r\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\r\n//                               <FiX />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <td>\r\n//                           <div className=\"user-info\">\r\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\r\n//                             <span>{u.name}</span>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>{u.email}</td>\r\n//                         <td>\r\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\r\n//                             {u.role}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\r\n//                               <FiEdit2 />\r\n//                             </button>\r\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\r\n//                               <FiTrash2 />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     )}\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n            \r\n//             {filteredUsers.length === 0 && (\r\n//               <div className=\"empty-state\">\r\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <style jsx>{`\r\n//         .users-container {\r\n//           min-height: 100vh;\r\n//           background: \"white\";\r\n//           padding: 20px;\r\n//         }\r\n\r\n//         .users-header {\r\n//           text-align: center;\r\n//           margin-bottom: 40px;\r\n//           color: white;\r\n//         }\r\n\r\n//         .users-title {\r\n//           font-size: 2.5rem;\r\n//           font-weight: 700;\r\n//           margin-bottom: 8px;\r\n//         }\r\n\r\n//         .users-subtitle {\r\n//           font-size: 1.1rem;\r\n//           opacity: 0.9;\r\n//         }\r\n\r\n//         .users-grid {\r\n//           display: grid;\r\n//           grid-template-columns: 1fr;\r\n//           gap: 30px;\r\n//           max-width: 1400px;\r\n//           margin: 0 auto;\r\n//         }\r\n\r\n//         @media (min-width: 1024px) {\r\n//           .users-grid {\r\n//             grid-template-columns: 400px 1fr;\r\n//           }\r\n//         }\r\n\r\n//         .glassmorphism {\r\n//           background: rgba(255, 255, 255, 0.95);\r\n//           backdrop-filter: blur(10px);\r\n//           border-radius: 20px;\r\n//           border: 1px solid rgba(255, 255, 255, 0.2);\r\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n//         }\r\n\r\n//         .users-form-card, .users-list-card {\r\n//           padding: 30px;\r\n//         }\r\n\r\n//         .card-header {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           align-items: center;\r\n//           margin-bottom: 30px;\r\n//           flex-wrap: wrap;\r\n//           gap: 15px;\r\n//         }\r\n\r\n//         .card-title {\r\n//           font-size: 1.5rem;\r\n//           font-weight: 600;\r\n//           color: #2d3748;\r\n//           display: flex;\r\n//           align-items: center;\r\n//         }\r\n\r\n//         .icon-spacing {\r\n//           margin-right: 10px;\r\n//         }\r\n\r\n//         .form-grid {\r\n//           display: grid;\r\n//           gap: 20px;\r\n//           margin-bottom: 30px;\r\n//         }\r\n\r\n//         .input-group {\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//         }\r\n\r\n//         .input-label {\r\n//           font-weight: 500;\r\n//           margin-bottom: 8px;\r\n//           color: #4a5568;\r\n//         }\r\n\r\n//         .modern-input, .modern-select {\r\n//           padding: 12px 16px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           transition: all 0.3s ease;\r\n//           background: white;\r\n//         }\r\n\r\n//         .modern-input:focus, .modern-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .create-btn {\r\n//           width: 100%;\r\n//           padding: 14px;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           color: white;\r\n//           border: none;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           font-weight: 600;\r\n//           cursor: pointer;\r\n//           transition: transform 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .create-btn:hover {\r\n//           transform: translateY(-2px);\r\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n//         }\r\n\r\n//         .btn-icon {\r\n//           margin-right: 8px;\r\n//         }\r\n\r\n//         .search-container {\r\n//           position: relative;\r\n//           min-width: 250px;\r\n//         }\r\n\r\n//         .search-input {\r\n//           padding: 12px 16px 12px 40px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           width: 100%;\r\n//           transition: all 0.3s ease;\r\n//         }\r\n\r\n//         .search-input:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .search-icon {\r\n//           position: absolute;\r\n//           left: 12px;\r\n//           top: 50%;\r\n//           transform: translateY(-50%);\r\n//           color: #a0aec0;\r\n//         }\r\n\r\n//         .table-container {\r\n//           overflow-x: auto;\r\n//           border-radius: 10px;\r\n//         }\r\n\r\n//         .modern-table {\r\n//           width: 100%;\r\n//           border-collapse: collapse;\r\n//           min-width: 600px;\r\n//         }\r\n\r\n//         .modern-table th {\r\n//           background: #f7fafc;\r\n//           padding: 16px;\r\n//           text-align: left;\r\n//           font-weight: 600;\r\n//           color: #4a5568;\r\n//           border-bottom: 2px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table td {\r\n//           padding: 16px;\r\n//           border-bottom: 1px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table tr:hover {\r\n//           background: #f7fafc;\r\n//         }\r\n\r\n//         .editing-row {\r\n//           background: #fff9e6 !important;\r\n//         }\r\n\r\n//         .user-info {\r\n//           display: flex;\r\n//           align-items: center;\r\n//           gap: 12px;\r\n//         }\r\n\r\n//         .avatar {\r\n//           width: 40px;\r\n//           height: 40px;\r\n//           border-radius: 50%;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//           color: white;\r\n//           font-weight: 600;\r\n//           font-size: 1.1rem;\r\n//         }\r\n\r\n//         .role-badge {\r\n//           padding: 6px 12px;\r\n//           border-radius: 20px;\r\n//           font-size: 0.85rem;\r\n//           font-weight: 500;\r\n//         }\r\n\r\n//         .role-admin { background: #fed7d7; color: #c53030; }\r\n//         .role-manager { background: #feebc8; color: #d69e2e; }\r\n//         .role-developer { background: #c6f6d5; color: #276749; }\r\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\r\n\r\n//         .action-buttons {\r\n//           display: flex;\r\n//           gap: 8px;\r\n//         }\r\n\r\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\r\n//           padding: 8px;\r\n//           border: none;\r\n//           border-radius: 8px;\r\n//           cursor: pointer;\r\n//           transition: all 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .btn-edit {\r\n//           background: #e6fffa;\r\n//           color: #234e52;\r\n//         }\r\n\r\n//         .btn-edit:hover {\r\n//           background: #b2f5ea;\r\n//         }\r\n\r\n//         .btn-delete {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-delete:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .btn-success {\r\n//           background: #c6f6d5;\r\n//           color: #276749;\r\n//         }\r\n\r\n//         .btn-success:hover {\r\n//           background: #9ae6b4;\r\n//         }\r\n\r\n//         .btn-cancel {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-cancel:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .edit-input, .edit-select {\r\n//           padding: 8px 12px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 6px;\r\n//           width: 100%;\r\n//           font-size: 0.9rem;\r\n//         }\r\n\r\n//         .edit-input:focus, .edit-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//         }\r\n\r\n//         .empty-state {\r\n//           text-align: center;\r\n//           padding: 40px;\r\n//           color: #a0aec0;\r\n//           font-style: italic;\r\n//         }\r\n\r\n//         @media (max-width: 768px) {\r\n//           .users-container {\r\n//             padding: 10px;\r\n//           }\r\n\r\n//           .users-title {\r\n//             font-size: 2rem;\r\n//           }\r\n\r\n//           .users-form-card, .users-list-card {\r\n//             padding: 20px;\r\n//           }\r\n\r\n//           .card-header {\r\n//             flex-direction: column;\r\n//             align-items: stretch;\r\n//           }\r\n\r\n//           .search-container {\r\n//             min-width: auto;\r\n//           }\r\n\r\n//           .modern-table {\r\n//             font-size: 0.9rem;\r\n//           }\r\n\r\n//           .modern-table th,\r\n//           .modern-table td {\r\n//             padding: 12px 8px;\r\n//           }\r\n\r\n//           .action-buttons {\r\n//             flex-direction: column;\r\n//           }\r\n//         }\r\n\r\n//         @media (max-width: 480px) {\r\n//           .users-title {\r\n//             font-size: 1.75rem;\r\n//           }\r\n\r\n//           .card-title {\r\n//             font-size: 1.25rem;\r\n//           }\r\n\r\n//           .user-info {\r\n//             flex-direction: column;\r\n//             gap: 6px;\r\n//             text-align: center;\r\n//           }\r\n\r\n//           .avatar {\r\n//             width: 32px;\r\n//             height: 32px;\r\n//             font-size: 0.9rem;\r\n//           }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\r\n\r\n// export default function Users() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [role, setRole] = useState('Developer');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     listUsers().then(setUsers);\r\n//   }, []);\r\n\r\n//   const create = async () => {\r\n//     if (!name || !email) return;\r\n//     const u = { id: uuidv4(), name, email, role };\r\n//     await addUser(u);\r\n//     setUsers(await listUsers());\r\n//     setName('');\r\n//     setEmail('');\r\n//   };\r\n\r\n//   const startEdit = (u) => {\r\n//     setEditingId(u.id);\r\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditForm({ name: '', email: '', role: '' });\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     console.log(\"Saving user:\", id, editForm);\r\n//     await updateUser(id, editForm);   // ✅ fixed: send id + patch separately\r\n//     setUsers(await listUsers());\r\n//     cancelEdit();\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     await deleteUser(id);\r\n//     setUsers(await listUsers());\r\n//   };\r\n\r\n//   const filteredUsers = users.filter(user =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"users-container\">\r\n//       {/* Header Section */}\r\n//       <div className=\"users-header\">\r\n//         <h1 className=\"users-title\">User Management</h1>\r\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\r\n//       </div>\r\n\r\n//       <div className=\"users-grid\">\r\n//         {/* User creation form */}\r\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-form-title\" className=\"card-title\">\r\n//               <FiUserPlus className=\"icon-spacing\" />\r\n//               Add New User\r\n//             </h2>\r\n//           </div>\r\n          \r\n//           <div className=\"form-grid\">\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Full Name</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={name} \r\n//                 onChange={e => setName(e.target.value)}\r\n//                 placeholder=\"Enter full name\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Email Address</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={email} \r\n//                 onChange={e => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter email address\"\r\n//                 type=\"email\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Role</label>\r\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\r\n//                 <option>Admin</option>\r\n//                 <option>Manager</option>\r\n//                 <option>Developer</option>\r\n//                 <option>Reporter</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <button className=\"create-btn\" onClick={create}>\r\n//             <FiUserPlus className=\"btn-icon\" />\r\n//             Create User\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* User list section */}\r\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\r\n//             <div className=\"search-container\">\r\n//               <FiSearch className=\"search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"search-input\"\r\n//                 placeholder=\"Search users...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"table-container\">\r\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Email</th>\r\n//                   <th>Role</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredUsers.map(u => (\r\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\r\n//                     {editingId === u.id ? (\r\n//                       <>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.name}\r\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.email}\r\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <select\r\n//                             className=\"edit-select\"\r\n//                             value={editForm.role}\r\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\r\n//                           >\r\n//                             <option>Admin</option>\r\n//                             <option>Manager</option>\r\n//                             <option>Developer</option>\r\n//                             <option>Reporter</option>\r\n//                           </select>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\r\n//                               <FiCheck />\r\n//                             </button>\r\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\r\n//                               <FiX />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <td>\r\n//                           <div className=\"user-info\">\r\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\r\n//                             <span>{u.name}</span>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>{u.email}</td>\r\n//                         <td>\r\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\r\n//                             {u.role}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\r\n//                               <FiEdit2 />\r\n//                             </button>\r\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\r\n//                               <FiTrash2 />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     )}\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n            \r\n//             {filteredUsers.length === 0 && (\r\n//               <div className=\"empty-state\">\r\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* keep your CSS-in-JSX here */}\r\n//       <style jsx>{`\r\n//         .users-container {\r\n//           min-height: 100vh;\r\n//           background: \"white\";\r\n//           padding: 20px;\r\n//         }\r\n\r\n//         .users-header {\r\n//           text-align: center;\r\n//           margin-bottom: 40px;\r\n//           color: white;\r\n//         }\r\n\r\n//         .users-title {\r\n//           font-size: 2.5rem;\r\n//           font-weight: 700;\r\n//           margin-bottom: 8px;\r\n//         }\r\n\r\n//         .users-subtitle {\r\n//           font-size: 1.1rem;\r\n//           opacity: 0.9;\r\n//         }\r\n\r\n//         .users-grid {\r\n//           display: grid;\r\n//           grid-template-columns: 1fr;\r\n//           gap: 30px;\r\n//           max-width: 1400px;\r\n//           margin: 0 auto;\r\n//         }\r\n\r\n//         @media (min-width: 1024px) {\r\n//           .users-grid {\r\n//             grid-template-columns: 400px 1fr;\r\n//           }\r\n//         }\r\n\r\n//         .glassmorphism {\r\n//           background: rgba(255, 255, 255, 0.95);\r\n//           backdrop-filter: blur(10px);\r\n//           border-radius: 20px;\r\n//           border: 1px solid rgba(255, 255, 255, 0.2);\r\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n//         }\r\n\r\n//         .users-form-card, .users-list-card {\r\n//           padding: 30px;\r\n//         }\r\n\r\n//         .card-header {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           align-items: center;\r\n//           margin-bottom: 30px;\r\n//           flex-wrap: wrap;\r\n//           gap: 15px;\r\n//         }\r\n\r\n//         .card-title {\r\n//           font-size: 1.5rem;\r\n//           font-weight: 600;\r\n//           color: #2d3748;\r\n//           display: flex;\r\n//           align-items: center;\r\n//         }\r\n\r\n//         .icon-spacing {\r\n//           margin-right: 10px;\r\n//         }\r\n\r\n//         .form-grid {\r\n//           display: grid;\r\n//           gap: 20px;\r\n//           margin-bottom: 30px;\r\n//         }\r\n\r\n//         .input-group {\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//         }\r\n\r\n//         .input-label {\r\n//           font-weight: 500;\r\n//           margin-bottom: 8px;\r\n//           color: #4a5568;\r\n//         }\r\n\r\n//         .modern-input, .modern-select {\r\n//           padding: 12px 16px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           transition: all 0.3s ease;\r\n//           background: white;\r\n//         }\r\n\r\n//         .modern-input:focus, .modern-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .create-btn {\r\n//           width: 100%;\r\n//           padding: 14px;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           color: white;\r\n//           border: none;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           font-weight: 600;\r\n//           cursor: pointer;\r\n//           transition: transform 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .create-btn:hover {\r\n//           transform: translateY(-2px);\r\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n//         }\r\n\r\n//         .btn-icon {\r\n//           margin-right: 8px;\r\n//         }\r\n\r\n//         .search-container {\r\n//           position: relative;\r\n//           min-width: 250px;\r\n//         }\r\n\r\n//         .search-input {\r\n//           padding: 12px 16px 12px 40px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           width: 100%;\r\n//           transition: all 0.3s ease;\r\n//         }\r\n\r\n//         .search-input:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .search-icon {\r\n//           position: absolute;\r\n//           left: 12px;\r\n//           top: 50%;\r\n//           transform: translateY(-50%);\r\n//           color: #a0aec0;\r\n//         }\r\n\r\n//         .table-container {\r\n//           overflow-x: auto;\r\n//           border-radius: 10px;\r\n//         }\r\n\r\n//         .modern-table {\r\n//           width: 100%;\r\n//           border-collapse: collapse;\r\n//           min-width: 600px;\r\n//         }\r\n\r\n//         .modern-table th {\r\n//           background: #f7fafc;\r\n//           padding: 16px;\r\n//           text-align: left;\r\n//           font-weight: 600;\r\n//           color: #4a5568;\r\n//           border-bottom: 2px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table td {\r\n//           padding: 16px;\r\n//           border-bottom: 1px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table tr:hover {\r\n//           background: #f7fafc;\r\n//         }\r\n\r\n//         .editing-row {\r\n//           background: #fff9e6 !important;\r\n//         }\r\n\r\n//         .user-info {\r\n//           display: flex;\r\n//           align-items: center;\r\n//           gap: 12px;\r\n//         }\r\n\r\n//         .avatar {\r\n//           width: 40px;\r\n//           height: 40px;\r\n//           border-radius: 50%;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//           color: white;\r\n//           font-weight: 600;\r\n//           font-size: 1.1rem;\r\n//         }\r\n\r\n//         .role-badge {\r\n//           padding: 6px 12px;\r\n//           border-radius: 20px;\r\n//           font-size: 0.85rem;\r\n//           font-weight: 500;\r\n//         }\r\n\r\n//         .role-admin { background: #fed7d7; color: #c53030; }\r\n//         .role-manager { background: #feebc8; color: #d69e2e; }\r\n//         .role-developer { background: #c6f6d5; color: #276749; }\r\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\r\n\r\n//         .action-buttons {\r\n//           display: flex;\r\n//           gap: 8px;\r\n//         }\r\n\r\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\r\n//           padding: 8px;\r\n//           border: none;\r\n//           border-radius: 8px;\r\n//           cursor: pointer;\r\n//           transition: all 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .btn-edit {\r\n//           background: #e6fffa;\r\n//           color: #234e52;\r\n//         }\r\n\r\n//         .btn-edit:hover {\r\n//           background: #b2f5ea;\r\n//         }\r\n\r\n//         .btn-delete {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-delete:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .btn-success {\r\n//           background: #c6f6d5;\r\n//           color: #276749;\r\n//         }\r\n\r\n//         .btn-success:hover {\r\n//           background: #9ae6b4;\r\n//         }\r\n\r\n//         .btn-cancel {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-cancel:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .edit-input, .edit-select {\r\n//           padding: 8px 12px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 6px;\r\n//           width: 100%;\r\n//           font-size: 0.9rem;\r\n//         }\r\n\r\n//         .edit-input:focus, .edit-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//         }\r\n\r\n//         .empty-state {\r\n//           text-align: center;\r\n//           padding: 40px;\r\n//           color: #a0aec0;\r\n//           font-style: italic;\r\n//         }\r\n\r\n//         @media (max-width: 768px) {\r\n//           .users-container {\r\n//             padding: 10px;\r\n//           }\r\n\r\n//           .users-title {\r\n//             font-size: 2rem;\r\n//           }\r\n\r\n//           .users-form-card, .users-list-card {\r\n//             padding: 20px;\r\n//           }\r\n\r\n//           .card-header {\r\n//             flex-direction: column;\r\n//             align-items: stretch;\r\n//           }\r\n\r\n//           .search-container {\r\n//             min-width: auto;\r\n//           }\r\n\r\n//           .modern-table {\r\n//             font-size: 0.9rem;\r\n//           }\r\n\r\n//           .modern-table th,\r\n//           .modern-table td {\r\n//             padding: 12px 8px;\r\n//           }\r\n\r\n//           .action-buttons {\r\n//             flex-direction: column;\r\n//           }\r\n//         }\r\n\r\n//         @media (max-width: 480px) {\r\n//           .users-title {\r\n//             font-size: 1.75rem;\r\n//           }\r\n\r\n//           .card-title {\r\n//             font-size: 1.25rem;\r\n//           }\r\n\r\n//           .user-info {\r\n//             flex-direction: column;\r\n//             gap: 6px;\r\n//             text-align: center;\r\n//           }\r\n\r\n//           .avatar {\r\n//             width: 32px;\r\n//             height: 32px;\r\n//             font-size: 0.9rem;\r\n//           }\r\n//         }\r\n//       }</style>\r\n\r\n//     </div>\r\n\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\r\n\r\n// export default function Users() {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [email, setEmail] = useState('');\r\n//   const [role, setRole] = useState('Developer');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n\r\n//   useEffect(() => {\r\n//     listUsers().then(setUsers);\r\n//   }, []);\r\n\r\n//   const create = async () => {\r\n//     if (!name || !email) return;\r\n//     const u = { id: uuidv4(), name, email, role };\r\n//     await addUser(u);\r\n//     setUsers(await listUsers());\r\n//     setName('');\r\n//     setEmail('');\r\n//   };\r\n\r\n//   const startEdit = (u) => {\r\n//     setEditingId(u.id);\r\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditForm({ name: '', email: '', role: '' });\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     await updateUser(id, editForm);\r\n//     setUsers(await listUsers());\r\n//     cancelEdit();\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     await deleteUser(id);\r\n//     setUsers(await listUsers());\r\n//   };\r\n\r\n//   const filteredUsers = users.filter(user =>\r\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"users-container\">\r\n//       {/* Header Section */}\r\n//       <div className=\"users-header\">\r\n//         <h1 className=\"users-title\">User Management</h1>\r\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\r\n//       </div>\r\n\r\n//       <div className=\"users-grid\">\r\n//         {/* User creation form */}\r\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-form-title\" className=\"card-title\">\r\n//               <FiUserPlus className=\"icon-spacing\" />\r\n//               Add New User\r\n//             </h2>\r\n//           </div>\r\n          \r\n//           <div className=\"form-grid\">\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Full Name</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={name} \r\n//                 onChange={e => setName(e.target.value)}\r\n//                 placeholder=\"Enter full name\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Email Address</label>\r\n//               <input \r\n//                 className=\"modern-input\"\r\n//                 value={email} \r\n//                 onChange={e => setEmail(e.target.value)}\r\n//                 placeholder=\"Enter email address\"\r\n//                 type=\"email\"\r\n//               />\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Role</label>\r\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\r\n//                 <option>Admin</option>\r\n//                 <option>Manager</option>\r\n//                 <option>Developer</option>\r\n//                 <option>Reporter</option>\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <button className=\"create-btn\" onClick={create}>\r\n//             <FiUserPlus className=\"btn-icon\" />\r\n//             Create User\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* User list section */}\r\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\r\n//             <div className=\"search-container\">\r\n//               <FiSearch className=\"search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"search-input\"\r\n//                 placeholder=\"Search users...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"table-container\">\r\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Email</th>\r\n//                   <th>Role</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredUsers.map(u => (\r\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\r\n//                     {editingId === u.id ? (\r\n//                       <>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.name}\r\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             value={editForm.email}\r\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <select\r\n//                             className=\"edit-select\"\r\n//                             value={editForm.role}\r\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\r\n//                           >\r\n//                             <option>Admin</option>\r\n//                             <option>Manager</option>\r\n//                             <option>Developer</option>\r\n//                             <option>Reporter</option>\r\n//                           </select>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\r\n//                               <FiCheck />\r\n//                             </button>\r\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\r\n//                               <FiX />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <td>\r\n//                           <div className=\"user-info\">\r\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\r\n//                             <span>{u.name}</span>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>{u.email}</td>\r\n//                         <td>\r\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\r\n//                             {u.role}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\r\n//                               <FiEdit2 />\r\n//                             </button>\r\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\r\n//                               <FiTrash2 />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     )}\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n            \r\n//             {filteredUsers.length === 0 && (\r\n//               <div className=\"empty-state\">\r\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* ✅ Corrected CSS */}\r\n//       <style jsx>{`\r\n//         .users-container {\r\n//           min-height: 100vh;\r\n//           background: white; /* fixed */\r\n//           padding: 20px;\r\n//         }\r\n\r\n//         .users-header {\r\n//           text-align: center;\r\n//           margin-bottom: 40px;\r\n//           color: white;\r\n//         }\r\n\r\n//         .users-title {\r\n//           font-size: 2.5rem;\r\n//           font-weight: 700;\r\n//           margin-bottom: 8px;\r\n//         }\r\n\r\n//         .users-subtitle {\r\n//           font-size: 1.1rem;\r\n//           opacity: 0.9;\r\n//         }\r\n\r\n//         .users-grid {\r\n//           display: grid;\r\n//           grid-template-columns: 1fr;\r\n//           gap: 30px;\r\n//           max-width: 1400px;\r\n//           margin: 0 auto;\r\n//         }\r\n\r\n//         @media (min-width: 1024px) {\r\n//           .users-grid {\r\n//             grid-template-columns: 400px 1fr;\r\n//           }\r\n//         }\r\n\r\n//         .glassmorphism {\r\n//           background: rgba(255, 255, 255, 0.95);\r\n//           backdrop-filter: blur(10px);\r\n//           border-radius: 20px;\r\n//           border: 1px solid rgba(255, 255, 255, 0.2);\r\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\r\n//         }\r\n\r\n//         .users-form-card, .users-list-card {\r\n//           padding: 30px;\r\n//         }\r\n\r\n//         .card-header {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           align-items: center;\r\n//           margin-bottom: 30px;\r\n//           flex-wrap: wrap;\r\n//           gap: 15px;\r\n//         }\r\n\r\n//         .card-title {\r\n//           font-size: 1.5rem;\r\n//           font-weight: 600;\r\n//           color: #2d3748;\r\n//           display: flex;\r\n//           align-items: center;\r\n//         }\r\n\r\n//         .icon-spacing {\r\n//           margin-right: 10px;\r\n//         }\r\n\r\n//         .form-grid {\r\n//           display: grid;\r\n//           gap: 20px;\r\n//           margin-bottom: 30px;\r\n//         }\r\n\r\n//         .input-group {\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//         }\r\n\r\n//         .input-label {\r\n//           font-weight: 500;\r\n//           margin-bottom: 8px;\r\n//           color: #4a5568;\r\n//         }\r\n\r\n//         .modern-input, .modern-select {\r\n//           padding: 12px 16px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           transition: all 0.3s ease;\r\n//           background: white;\r\n//         }\r\n\r\n//         .modern-input:focus, .modern-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .create-btn {\r\n//           width: 100%;\r\n//           padding: 14px;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           color: white;\r\n//           border: none;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           font-weight: 600;\r\n//           cursor: pointer;\r\n//           transition: transform 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .create-btn:hover {\r\n//           transform: translateY(-2px);\r\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n//         }\r\n\r\n//         .btn-icon {\r\n//           margin-right: 8px;\r\n//         }\r\n\r\n//         .search-container {\r\n//           position: relative;\r\n//           min-width: 250px;\r\n//         }\r\n\r\n//         .search-input {\r\n//           padding: 12px 16px 12px 40px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           width: 100%;\r\n//           transition: all 0.3s ease;\r\n//         }\r\n\r\n//         .search-input:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .search-icon {\r\n//           position: absolute;\r\n//           left: 12px;\r\n//           top: 50%;\r\n//           transform: translateY(-50%);\r\n//           color: #a0aec0;\r\n//         }\r\n\r\n//         .table-container {\r\n//           overflow-x: auto;\r\n//           border-radius: 10px;\r\n//         }\r\n\r\n//         .modern-table {\r\n//           width: 100%;\r\n//           border-collapse: collapse;\r\n//           min-width: 600px;\r\n//         }\r\n\r\n//         .modern-table th {\r\n//           background: #f7fafc;\r\n//           padding: 16px;\r\n//           text-align: left;\r\n//           font-weight: 600;\r\n//           color: #4a5568;\r\n//           border-bottom: 2px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table td {\r\n//           padding: 16px;\r\n//           border-bottom: 1px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table tr:hover {\r\n//           background: #f7fafc;\r\n//         }\r\n\r\n//         .editing-row {\r\n//           background: #fff9e6 !important;\r\n//         }\r\n\r\n//         .user-info {\r\n//           display: flex;\r\n//           align-items: center;\r\n//           gap: 12px;\r\n//         }\r\n\r\n//         .avatar {\r\n//           width: 40px;\r\n//           height: 40px;\r\n//           border-radius: 50%;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//           color: white;\r\n//           font-weight: 600;\r\n//           font-size: 1.1rem;\r\n//         }\r\n\r\n//         .role-badge {\r\n//           padding: 6px 12px;\r\n//           border-radius: 20px;\r\n//           font-size: 0.85rem;\r\n//           font-weight: 500;\r\n//         }\r\n\r\n//         .role-admin { background: #fed7d7; color: #c53030; }\r\n//         .role-manager { background: #feebc8; color: #d69e2e; }\r\n//         .role-developer { background: #c6f6d5; color: #276749; }\r\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\r\n\r\n//         .action-buttons {\r\n//           display: flex;\r\n//           gap: 8px;\r\n//         }\r\n\r\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\r\n//           padding: 8px;\r\n//           border: none;\r\n//           border-radius: 8px;\r\n//           cursor: pointer;\r\n//           transition: all 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .btn-edit {\r\n//           background: #e6fffa;\r\n//           color: #234e52;\r\n//         }\r\n\r\n//         .btn-edit:hover {\r\n//           background: #b2f5ea;\r\n//         }\r\n\r\n//         .btn-delete {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-delete:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .btn-success {\r\n//           background: #c6f6d5;\r\n//           color: #276749;\r\n//         }\r\n\r\n//         .btn-success:hover {\r\n//           background: #9ae6b4;\r\n//         }\r\n\r\n//         .btn-cancel {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-cancel:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .edit-input, .edit-select {\r\n//           padding: 8px 12px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 6px;\r\n//           width: 100%;\r\n//           font-size: 0.9rem;\r\n//         }\r\n\r\n//         .edit-input:focus, .edit-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//         }\r\n\r\n//         .empty-state {\r\n//           text-align: center;\r\n//           padding: 40px;\r\n//           color: #a0aec0;\r\n//           font-style: italic;\r\n//         }\r\n\r\n//         @media (max-width: 768px) {\r\n//           .users-container {\r\n//             padding: 10px;\r\n//           }\r\n\r\n//           .users-title {\r\n//             font-size: 2rem;\r\n//           }\r\n\r\n//           .users-form-card, .users-list-card {\r\n//             padding: 20px;\r\n//           }\r\n\r\n//           .card-header {\r\n//             flex-direction: column;\r\n//             align-items: stretch;\r\n//           }\r\n\r\n//           .search-container {\r\n//             min-width: auto;\r\n//           }\r\n\r\n//           .modern-table {\r\n//             font-size: 0.9rem;\r\n//           }\r\n\r\n//           .modern-table th,\r\n//           .modern-table td {\r\n//             padding: 12px 8px;\r\n//           }\r\n\r\n//           .action-buttons {\r\n//             flex-direction: column;\r\n//           }\r\n//         }\r\n\r\n//         @media (max-width: 480px) {\r\n//           .users-title {\r\n//             font-size: 1.75rem;\r\n//           }\r\n\r\n//           .card-title {\r\n//             font-size: 1.25rem;\r\n//           }\r\n\r\n//           .user-info {\r\n//             flex-direction: column;\r\n//             gap: 6px;\r\n//             text-align: center;\r\n//           }\r\n\r\n//           .avatar {\r\n//             width: 32px;\r\n//             height: 32px;\r\n//             font-size: 0.9rem;\r\n//           }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n////////////////////////////////////////////////////////////////////////////////////\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// // Import the new mockApi that uses localStorage\r\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi'; \r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload } from 'react-icons/fi';\r\n\r\n// export default function Users() {\r\n//   const defaultNewUser = {\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     role: 'Developer', \r\n//     department: 'Engineering',\r\n//     active: true, \r\n//     language: 'English', \r\n//     mobileNumber: '', \r\n//     dateFormat: 'YYYY-MM-DD', \r\n//     passwordResetNeeded: false, \r\n//     profileFile: null, // Note: This is client-side state for the file input\r\n//   };\r\n\r\n//   const [users, setUsers] = useState([]);\r\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser); \r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({}); \r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [error, setError] = useState(null); \r\n\r\n//   // Destructure for easier use in the creation form\r\n//   const {\r\n//     firstName, lastName, email, role, department, active, language, mobileNumber, dateFormat, passwordResetNeeded, profileFile\r\n//   } = newUserForm;\r\n\r\n//   // --- Initial Data Fetch (Pulls from LocalStorage via mockApi) ---\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const data = await listUsers();\r\n//         // Since mockApi is now responsible for normalization, we just set the data\r\n//         setUsers(data); \r\n//       } catch (err) {\r\n//         console.error('Failed to load users:', err);\r\n//         setError('Failed to load users');\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // --- Form Handlers ---\r\n//   const handleNewUserChange = (e) => {\r\n//     const { name, value, type, checked, files } = e.target;\r\n//     setNewUserForm(prev => ({\r\n//       ...prev,\r\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\r\n//     }));\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value, type, checked, files } = e.target;\r\n//     setEditForm(prev => ({\r\n//       ...prev,\r\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\r\n//     }));\r\n//   };\r\n\r\n//   // --- CRUD Operations ---\r\n//   const create = async () => {\r\n//     if (!firstName.trim() || !lastName.trim() || !email.trim()) {\r\n//       setError('First Name, Last Name, and Email are required.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const newUser = {\r\n//         id: uuidv4(),\r\n//         ...newUserForm,\r\n//         name: `${firstName.trim()} ${lastName.trim()}`,\r\n//         // For mock persistence, store file metadata only\r\n//         profileFile: profileFile ? { name: profileFile.name, size: profileFile.size } : null \r\n//       };\r\n      \r\n//       await addUser(newUser);\r\n//       // Re-fetch the updated list from mockApi (which contains localStorage data)\r\n//       const updatedUsers = await listUsers(); \r\n//       setUsers(updatedUsers); \r\n//       setNewUserForm(defaultNewUser); \r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to add user:', err);\r\n//       setError('Failed to add user');\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (u) => {\r\n//     setEditingId(u.id);\r\n//     // Set edit form with the complete user object structure\r\n//     setEditForm({ ...u }); \r\n//     setError(null);\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditForm({});\r\n//     setError(null);\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\r\n//         setError('First Name, Last Name, and Email cannot be empty.');\r\n//         return;\r\n//     }\r\n//     try {\r\n//         const updatedUser = {\r\n//             ...editForm,\r\n//             name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\r\n//             // Handle file update if a new file was selected during edit (for mock, we ignore the actual file)\r\n//             profileFile: editForm.profileFile && editForm.profileFile.name ? \r\n//                            { name: editForm.profileFile.name, size: editForm.profileFile.size } : \r\n//                            editForm.profileFile\r\n//         };\r\n        \r\n//         await updateUser(updatedUser);\r\n//         const updatedUsers = await listUsers();\r\n//         setUsers(updatedUsers); \r\n//         cancelEdit();\r\n//         setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to update user:', err);\r\n//       setError('User not found or failed to update');\r\n//     }\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     try {\r\n//       await deleteUser(id);\r\n//       const updatedUsers = await listUsers();\r\n//       setUsers(updatedUsers); \r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to delete user:', err);\r\n//       setError('User not found or failed to delete');\r\n//     }\r\n//   };\r\n\r\n//   // --- Filtering and Styling ---\r\n//   const filteredUsers = users.filter(user => {\r\n//     const searchLower = searchTerm.toLowerCase();\r\n//     return (\r\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\r\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\r\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\r\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\r\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\r\n//       (user.department && user.department.toLowerCase().includes(searchLower))\r\n//     );\r\n//   });\r\n\r\n//   const getRoleColor = (roleOrDepartment) => {\r\n//     const colors = {\r\n//       'admin': 'role-admin',\r\n//       'manager': 'role-manager',\r\n//       'developer': 'role-developer',\r\n//       'reporter': 'role-reporter',\r\n//       'engineering': 'role-developer', // Reusing color\r\n//       'sales': 'role-sales',\r\n//       'hr': 'role-hr',\r\n//       'marketing': 'role-marketing'\r\n//     };\r\n//     return colors[roleOrDepartment.toLowerCase()] || '';\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"users-container\">\r\n//       {/* Header Section */}\r\n//       <div className=\"users-header\">\r\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\r\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n//       </div>\r\n      \r\n//       {/* --- */}\r\n\r\n//       <div className=\"users-grid\">\r\n//         {/* User creation form */}\r\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-form-title\" className=\"card-title\">\r\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\r\n//             </h2>\r\n//           </div>\r\n\r\n//           <div className=\"form-grid-expanded\">\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">First Name *</label>\r\n//               <input\r\n//                 className=\"modern-input\"\r\n//                 name=\"firstName\"\r\n//                 value={firstName}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"First Name\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Last Name *</label>\r\n//               <input\r\n//                 className=\"modern-input\"\r\n//                 name=\"lastName\"\r\n//                 value={lastName}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"Last Name\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Email Address *</label>\r\n//               <input\r\n//                 className=\"modern-input\"\r\n//                 name=\"email\"\r\n//                 value={email}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"Email Address\"\r\n//                 type=\"email\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Mobile Number</label>\r\n//               <input\r\n//                 className=\"modern-input\"\r\n//                 name=\"mobileNumber\"\r\n//                 value={mobileNumber}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"Mobile Number\"\r\n//                 type=\"tel\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Role</label>\r\n//               <select className=\"modern-select\" name=\"role\" value={role} onChange={handleNewUserChange}>\r\n//                 <option>Admin</option>\r\n//                 <option>Manager</option>\r\n//                 <option>Developer</option>\r\n//                 <option>Reporter</option>\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Department</label>\r\n//               <select className=\"modern-select\" name=\"department\" value={department} onChange={handleNewUserChange}>\r\n//                 <option>Engineering</option>\r\n//                 <option>Sales</option>\r\n//                 <option>HR</option>\r\n//                 <option>Marketing</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Preferred Language</label>\r\n//               <select className=\"modern-select\" name=\"language\" value={language} onChange={handleNewUserChange}>\r\n//                 <option>English</option>\r\n//                 <option>Spanish</option>\r\n//                 <option>French</option>\r\n//                 <option>German</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Date Format</label>\r\n//               <select className=\"modern-select\" name=\"dateFormat\" value={dateFormat} onChange={handleNewUserChange}>\r\n//                 <option>YYYY-MM-DD</option>\r\n//                 <option>MM/DD/YYYY</option>\r\n//                 <option>DD/MM/YYYY</option>\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"input-group checkbox-group\">\r\n//               <label className=\"input-label\">User Status</label>\r\n//               <label className=\"checkbox-label\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   name=\"active\"\r\n//                   checked={active}\r\n//                   onChange={handleNewUserChange}\r\n//                 />\r\n//                 <span className=\"checkbox-text\">{active ? 'Active' : 'Inactive'}</span>\r\n//               </label>\r\n//             </div>\r\n\r\n//             <div className=\"input-group checkbox-group\">\r\n//               <label className=\"input-label\">Password Reset</label>\r\n//               <label className=\"checkbox-label\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   name=\"passwordResetNeeded\"\r\n//                   checked={passwordResetNeeded}\r\n//                   onChange={handleNewUserChange}\r\n//                 />\r\n//                 <span className=\"checkbox-text\">Reset on next login</span>\r\n//               </label>\r\n//             </div>\r\n\r\n//             <div className=\"input-group file-group\">\r\n//               <label className=\"input-label\">Profile Picture</label>\r\n//               <label htmlFor=\"profileFile\" className=\"file-upload-btn\">\r\n//                 <FiUpload className=\"btn-icon\" />\r\n//                 {profileFile ? profileFile.name : 'Choose File'}\r\n//               </label>\r\n//               <input\r\n//                 id=\"profileFile\"\r\n//                 type=\"file\"\r\n//                 name=\"profileFile\"\r\n//                 onChange={handleNewUserChange}\r\n//                 accept=\"image/*\"\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <button className=\"create-btn\" onClick={create}>\r\n//             <FiUserPlus className=\"btn-icon\" />\r\n//             Create User\r\n//           </button>\r\n//         </div>\r\n\r\n//         {/* User list section */}\r\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-list-title\" className=\"card-title\">\r\n//               Team Members ({filteredUsers.length})\r\n//             </h2>\r\n//             <div className=\"search-container\">\r\n//               <FiSearch className=\"search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"search-input\"\r\n//                 placeholder=\"Search users...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n\r\n//           <div className=\"table-container\">\r\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Email</th>\r\n//                   <th>Department</th>\r\n//                   <th>Role</th>\r\n//                   <th>Active</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredUsers.map(u => (\r\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\r\n//                     {editingId === u.id ? (\r\n//                       <>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             name=\"firstName\"\r\n//                             value={editForm.firstName || ''}\r\n//                             onChange={handleEditChange}\r\n//                             placeholder=\"First Name\"\r\n//                           />\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             name=\"lastName\"\r\n//                             value={editForm.lastName || ''}\r\n//                             onChange={handleEditChange}\r\n//                             placeholder=\"Last Name\"\r\n//                             style={{marginTop: '5px'}}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <input\r\n//                             className=\"edit-input\"\r\n//                             name=\"email\"\r\n//                             value={editForm.email || ''}\r\n//                             onChange={handleEditChange}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                             <select\r\n//                                 className=\"edit-select\"\r\n//                                 name=\"department\"\r\n//                                 value={editForm.department || defaultNewUser.department}\r\n//                                 onChange={handleEditChange}\r\n//                             >\r\n//                                 <option>Engineering</option>\r\n//                                 <option>Sales</option>\r\n//                                 <option>HR</option>\r\n//                                 <option>Marketing</option>\r\n//                             </select>\r\n//                         </td>\r\n//                         <td>\r\n//                           <select\r\n//                             className=\"edit-select\"\r\n//                             name=\"role\"\r\n//                             value={editForm.role || defaultNewUser.role}\r\n//                             onChange={handleEditChange}\r\n//                           >\r\n//                             <option>Admin</option>\r\n//                             <option>Manager</option>\r\n//                             <option>Developer</option>\r\n//                             <option>Reporter</option>\r\n//                           </select>\r\n//                         </td>\r\n//                         <td>\r\n//                             <input\r\n//                                 type=\"checkbox\"\r\n//                                 name=\"active\"\r\n//                                 checked={editForm.active || false}\r\n//                                 onChange={handleEditChange}\r\n//                             />\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\r\n//                               <FiCheck />\r\n//                             </button>\r\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\r\n//                               <FiX />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <td>\r\n//                           <div className=\"user-info\">\r\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\r\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\r\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\r\n//                                 {u.profileFile && '📁'}\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>{u.email}</td>\r\n//                         <td>\r\n//                             <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\r\n//                                 {u.department}\r\n//                             </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\r\n//                             {u.role}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                             <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`} title={u.active ? 'Active' : 'Inactive'}></span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\r\n//                               <FiEdit2 />\r\n//                             </button>\r\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\r\n//                               <FiTrash2 />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     )}\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n\r\n//             {filteredUsers.length === 0 && (\r\n//               <div className=\"empty-state\">\r\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       <style jsx>{`\r\n//         /* Existing Styles */\r\n//         .users-container {\r\n//           min-height: 100vh;\r\n//           background: #f7f9fd; /* Lighter background */\r\n//           padding: 20px;\r\n//         }\r\n\r\n//         .users-header {\r\n//           text-align: center;\r\n//           margin-bottom: 40px;\r\n//           color: #2d3748;\r\n//         }\r\n\r\n//         .users-title {\r\n//           font-size: 2.5rem;\r\n//           font-weight: 700;\r\n//           margin-bottom: 8px;\r\n//         }\r\n\r\n//         .users-subtitle {\r\n//           font-size: 1.1rem;\r\n//           opacity: 0.8;\r\n//           color: #4a5568;\r\n//         }\r\n\r\n//         .error-message {\r\n//             color: #e53e3e;\r\n//             background: #fed7d7;\r\n//             padding: 8px 15px;\r\n//             border-radius: 8px;\r\n//             margin-top: 15px;\r\n//             display: inline-block;\r\n//             font-weight: 500;\r\n//         }\r\n\r\n//         .users-grid {\r\n//           display: grid;\r\n//           grid-template-columns: 1fr;\r\n//           gap: 30px;\r\n//           max-width: 1400px;\r\n//           margin: 0 auto;\r\n//         }\r\n\r\n//         @media (min-width: 1024px) {\r\n//           .users-grid {\r\n//             grid-template-columns: 450px 1fr; /* Increased form size */\r\n//           }\r\n//         }\r\n\r\n//         .glassmorphism {\r\n//           background: rgba(255, 255, 255, 0.95);\r\n//           backdrop-filter: blur(10px);\r\n//           border-radius: 20px;\r\n//           border: 1px solid rgba(255, 255, 255, 0.2);\r\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05); /* Lighter shadow */\r\n//         }\r\n\r\n//         .users-form-card,\r\n//         .users-list-card {\r\n//           padding: 30px;\r\n//         }\r\n\r\n//         .card-header {\r\n//           display: flex;\r\n//           justify-content: space-between;\r\n//           align-items: center;\r\n//           margin-bottom: 30px;\r\n//           flex-wrap: wrap;\r\n//           gap: 15px;\r\n//         }\r\n\r\n//         .card-title {\r\n//           font-size: 1.5rem;\r\n//           font-weight: 600;\r\n//           color: #2d3748;\r\n//           display: flex;\r\n//           align-items: center;\r\n//         }\r\n\r\n//         .icon-spacing {\r\n//           margin-right: 10px;\r\n//         }\r\n\r\n//         /* NEW/UPDATED Styles */\r\n//         .form-grid-expanded {\r\n//           display: grid;\r\n//           grid-template-columns: 1fr 1fr; /* Two columns for a denser form */\r\n//           gap: 20px;\r\n//           margin-bottom: 30px;\r\n//         }\r\n\r\n//         .input-group {\r\n//           display: flex;\r\n//           flex-direction: column;\r\n//         }\r\n\r\n//         .input-label {\r\n//           font-weight: 500;\r\n//           margin-bottom: 8px;\r\n//           color: #4a5568;\r\n//         }\r\n        \r\n//         /* Checkbox and File Upload Styles */\r\n//         .checkbox-group {\r\n//             grid-column: span 1;\r\n//         }\r\n\r\n//         .checkbox-label {\r\n//             display: flex;\r\n//             align-items: center;\r\n//             font-weight: 400;\r\n//             color: #4a5568;\r\n//             cursor: pointer;\r\n//             padding: 10px;\r\n//             background: #edf2f7;\r\n//             border-radius: 8px;\r\n//         }\r\n\r\n//         .checkbox-label input[type=\"checkbox\"] {\r\n//             margin-right: 10px;\r\n//             width: 18px;\r\n//             height: 18px;\r\n//             accent-color: #667eea;\r\n//         }\r\n\r\n//         .file-group input[type=\"file\"] {\r\n//           display: none;\r\n//         }\r\n\r\n//         .file-upload-btn {\r\n//           padding: 12px 16px;\r\n//           border: 2px solid #667eea;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           font-weight: 500;\r\n//           color: #667eea;\r\n//           background: #ebf4ff;\r\n//           cursor: pointer;\r\n//           transition: background-color 0.2s;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: flex-start;\r\n//         }\r\n\r\n//         .file-upload-btn:hover {\r\n//           background: #d4e3ff;\r\n//         }\r\n\r\n//         .file-upload-btn .btn-icon {\r\n//           margin-right: 8px;\r\n//           font-size: 1.2rem;\r\n//         }\r\n//         /* End New Styles */\r\n\r\n\r\n//         .modern-input,\r\n//         .modern-select {\r\n//           padding: 12px 16px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           transition: all 0.3s ease;\r\n//           background: white;\r\n//           width: 100%;\r\n//           box-sizing: border-box;\r\n//         }\r\n\r\n//         .modern-input:focus,\r\n//         .modern-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .create-btn {\r\n//           grid-column: 1 / -1; /* Make button span both columns */\r\n//           width: 100%;\r\n//           padding: 14px;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           color: white;\r\n//           border: none;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           font-weight: 600;\r\n//           cursor: pointer;\r\n//           transition: transform 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .create-btn:hover {\r\n//           transform: translateY(-2px);\r\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n//         }\r\n\r\n//         .btn-icon {\r\n//           margin-right: 8px;\r\n//         }\r\n\r\n//         .search-container {\r\n//           position: relative;\r\n//           min-width: 250px;\r\n//         }\r\n\r\n//         .search-input {\r\n//           padding: 12px 16px 12px 40px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 10px;\r\n//           font-size: 1rem;\r\n//           width: 100%;\r\n//           transition: all 0.3s ease;\r\n//         }\r\n\r\n//         .search-input:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//         }\r\n\r\n//         .search-icon {\r\n//           position: absolute;\r\n//           left: 12px;\r\n//           top: 50%;\r\n//           transform: translateY(-50%);\r\n//           color: #a0aec0;\r\n//         }\r\n\r\n//         .table-container {\r\n//           overflow-x: auto;\r\n//           border-radius: 10px;\r\n//         }\r\n\r\n//         .modern-table {\r\n//           width: 100%;\r\n//           border-collapse: collapse;\r\n//           min-width: 800px; /* Increased min-width for new columns */\r\n//         }\r\n\r\n//         .modern-table th {\r\n//           background: #f7fafc;\r\n//           padding: 16px;\r\n//           text-align: left;\r\n//           font-weight: 600;\r\n//           color: #4a5568;\r\n//           border-bottom: 2px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table td {\r\n//           padding: 16px;\r\n//           border-bottom: 1px solid #e2e8f0;\r\n//         }\r\n\r\n//         .modern-table tr:hover {\r\n//           background: #f7fafc;\r\n//         }\r\n\r\n//         .editing-row {\r\n//           background: #fff9e6 !important;\r\n//         }\r\n\r\n//         .user-info {\r\n//           display: flex;\r\n//           align-items: center;\r\n//           gap: 12px;\r\n//         }\r\n        \r\n//         .file-indicator {\r\n//             font-size: 1.1em;\r\n//             cursor: help;\r\n//         }\r\n\r\n//         .avatar {\r\n//           width: 40px;\r\n//           height: 40px;\r\n//           border-radius: 50%;\r\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//           color: white;\r\n//           font-weight: 600;\r\n//           font-size: 1.1rem;\r\n//           flex-shrink: 0;\r\n//         }\r\n        \r\n//         /* New Status Dot */\r\n//         .status-dot {\r\n//             height: 10px;\r\n//             width: 10px;\r\n//             border-radius: 50%;\r\n//             display: inline-block;\r\n//             margin-right: 5px;\r\n//         }\r\n\r\n//         .status-active {\r\n//             background-color: #48bb78; /* Green */\r\n//         }\r\n\r\n//         .status-inactive {\r\n//             background-color: #e53e3e; /* Red */\r\n//         }\r\n//         /* End New Status Dot */\r\n\r\n\r\n//         .role-badge {\r\n//           padding: 6px 12px;\r\n//           border-radius: 20px;\r\n//           font-size: 0.85rem;\r\n//           font-weight: 500;\r\n//           white-space: nowrap; /* Prevents wrapping */\r\n//         }\r\n\r\n//         .role-admin {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .role-manager {\r\n//           background: #feebc8;\r\n//           color: #d69e2e;\r\n//         }\r\n\r\n//         .role-developer, .role-engineering {\r\n//           background: #c6f6d5;\r\n//           color: #276749;\r\n//         }\r\n\r\n//         .role-reporter {\r\n//           background: #e9d8fd;\r\n//           color: #6b46c1;\r\n//         }\r\n        \r\n//         /* New Department Badges */\r\n//         .role-sales {\r\n//             background: #bee3f8;\r\n//             color: #2c5282;\r\n//         }\r\n        \r\n//         .role-hr {\r\n//             background: #fff0f5;\r\n//             color: #d53f8c;\r\n//         }\r\n        \r\n//         .role-marketing {\r\n//             background: #faf089;\r\n//             color: #744210;\r\n//         }\r\n//         /* End New Department Badges */\r\n\r\n\r\n//         .action-buttons {\r\n//           display: flex;\r\n//           gap: 8px;\r\n//         }\r\n\r\n//         .btn-edit,\r\n//         .btn-delete,\r\n//         .btn-success,\r\n//         .btn-cancel {\r\n//           padding: 8px;\r\n//           border: none;\r\n//           border-radius: 8px;\r\n//           cursor: pointer;\r\n//           transition: all 0.2s ease;\r\n//           display: flex;\r\n//           align-items: center;\r\n//           justify-content: center;\r\n//         }\r\n\r\n//         .btn-edit {\r\n//           background: #e6fffa;\r\n//           color: #234e52;\r\n//         }\r\n\r\n//         .btn-edit:hover {\r\n//           background: #b2f5ea;\r\n//         }\r\n\r\n//         .btn-delete {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-delete:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .btn-success {\r\n//           background: #c6f6d5;\r\n//           color: #276749;\r\n//         }\r\n\r\n//         .btn-success:hover {\r\n//           background: #9ae6b4;\r\n//         }\r\n\r\n//         .btn-cancel {\r\n//           background: #fed7d7;\r\n//           color: #c53030;\r\n//         }\r\n\r\n//         .btn-cancel:hover {\r\n//           background: #feb2b2;\r\n//         }\r\n\r\n//         .edit-input,\r\n//         .edit-select {\r\n//           padding: 8px 12px;\r\n//           border: 2px solid #e2e8f0;\r\n//           border-radius: 6px;\r\n//           width: 100%;\r\n//           font-size: 0.9rem;\r\n//           box-sizing: border-box;\r\n//         }\r\n\r\n//         .edit-input:focus,\r\n//         .edit-select:focus {\r\n//           outline: none;\r\n//           border-color: #667eea;\r\n//         }\r\n\r\n//         .empty-state {\r\n//           text-align: center;\r\n//           padding: 40px;\r\n//           color: #a0aec0;\r\n//           font-style: italic;\r\n//         }\r\n\r\n//         /* Media Queries */\r\n//         @media (max-width: 768px) {\r\n//           .users-container {\r\n//             padding: 10px;\r\n//           }\r\n\r\n//           .users-title {\r\n//             font-size: 2rem;\r\n//           }\r\n\r\n//           .users-form-card,\r\n//           .users-list-card {\r\n//             padding: 20px;\r\n//           }\r\n          \r\n//           .form-grid-expanded {\r\n//               grid-template-columns: 1fr; /* Single column layout for small screens */\r\n//           }\r\n\r\n//           .card-header {\r\n//             flex-direction: column;\r\n//             align-items: stretch;\r\n//           }\r\n\r\n//           .search-container {\r\n//             min-width: auto;\r\n//           }\r\n\r\n//           .modern-table {\r\n//             font-size: 0.85rem;\r\n//             min-width: 600px;\r\n//           }\r\n\r\n//           .modern-table th,\r\n//           .modern-table td {\r\n//             padding: 10px 6px;\r\n//           }\r\n\r\n//           .action-buttons {\r\n//             flex-direction: row; /* Keep action buttons inline on smaller screens */\r\n//           }\r\n//         }\r\n\r\n//         @media (max-width: 480px) {\r\n//           .users-title {\r\n//             font-size: 1.75rem;\r\n//           }\r\n\r\n//           .card-title {\r\n//             font-size: 1.25rem;\r\n//           }\r\n\r\n//           .user-info {\r\n//             flex-direction: column;\r\n//             gap: 6px;\r\n//             text-align: center;\r\n//             align-items: flex-start;\r\n//           }\r\n\r\n//           .avatar {\r\n//             width: 32px;\r\n//             height: 32px;\r\n//             font-size: 1rem;\r\n//           }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }"],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAUA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}