{"ast":null,"code":"// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles (unchanged)\n// export const STYLES = { /* your existing STYLES object */ };\n\n// // Initialize global CSS (unchanged)\n// const globalStyles = `/* your existing global CSS */`;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'] },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'] },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup' },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication' },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(p); }\n// export function updateProject(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); const idx = arr.findIndex(p=>p.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Project not found')); }\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(i=>i.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Issue not found')); }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(); }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx = arr.findIndex(n=>n.id===id); if(idx>=0){arr[idx].read=true; localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));} return Promise.resolve(); }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\nimport { v4 as uuidv4 } from 'uuid';\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  EPICS: 'tf_epics_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\n\n// Styles\nexport const STYLES = {\n  avatar: {\n    borderRadius: '50%',\n    width: '32px',\n    height: '32px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  badge: {\n    padding: '2px 8px',\n    borderRadius: '12px',\n    fontSize: '12px'\n  },\n  status: {\n    todo: {\n      backgroundColor: '#dfe1e6',\n      color: '#172b4d'\n    },\n    inprogress: {\n      backgroundColor: '#d4f4e2',\n      color: '#2e7d32'\n    },\n    done: {\n      backgroundColor: '#e3f2fd',\n      color: '#1565c0'\n    },\n    backlog: {\n      backgroundColor: '#f3e5f5',\n      color: '#6a1b9a'\n    },\n    analysis: {\n      backgroundColor: '#fff3e0',\n      color: '#ef6c00'\n    },\n    blocked: {\n      backgroundColor: '#ffcdd2',\n      color: '#c62828'\n    },\n    'code review': {\n      backgroundColor: '#bbdefb',\n      color: '#1565c0'\n    },\n    qa: {\n      backgroundColor: '#c8e6c9',\n      color: '#2e7d32'\n    },\n    milestone: {\n      backgroundColor: '#ede7f6',\n      color: '#4527a0'\n    }\n  },\n  priority: {\n    P1: {\n      backgroundColor: '#ffebee',\n      color: '#c62828'\n    },\n    P2: {\n      backgroundColor: '#fff3e0',\n      color: '#ef6c00'\n    },\n    P3: {\n      backgroundColor: '#e8f5e9',\n      color: '#388e3c'\n    }\n  },\n  button: {\n    padding: '6px 12px',\n    borderRadius: '4px',\n    background: 'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  },\n  buttonHover: {\n    background: 'linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%)'\n  },\n  card: {\n    background: '#fff',\n    border: '1px solid #dfe1e6',\n    borderRadius: '4px',\n    padding: '8px',\n    boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n  },\n  input: {\n    padding: '8px',\n    border: '1px solid #dfe1e6',\n    borderRadius: '4px',\n    width: '100%'\n  },\n  userSection: {\n    padding: '12px',\n    background: '#f4f5f7',\n    borderRadius: '4px'\n  }\n};\n\n// Initialize global CSS\nconst globalStyles = `\n  body { font-family: 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 0; }\n  * { box-sizing: border-box; }\n`;\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\n\n// Ensure data exists\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [{\n      id: 'u1',\n      name: 'Admin User',\n      email: 'admin@demo.com',\n      role: 'Admin'\n    }, {\n      id: 'u2',\n      name: 'Dev Alice',\n      email: 'alice@demo.com',\n      role: 'Developer'\n    }, {\n      id: 'u3',\n      name: 'Manager Bob',\n      email: 'bob@demo.com',\n      role: 'Manager'\n    }, {\n      id: 'u4',\n      name: 'Mark',\n      email: 'mark@demo.com',\n      role: 'Developer'\n    }];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [{\n      id: 'p1',\n      key: 'ALPHA',\n      name: 'alpha',\n      displayName: 'Alpha',\n      description: 'Alpha project',\n      leads: ['u3'],\n      type: 'Software',\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }, {\n      id: 'p2',\n      key: 'BETA',\n      name: 'beta',\n      displayName: 'Beta',\n      description: 'Beta project',\n      leads: ['u2'],\n      type: 'Software',\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.EPICS)) {\n    const epics = [{\n      id: 'e1',\n      projectId: 'p1',\n      name: 'Initial Setup',\n      statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'],\n      expanded: true\n    }, {\n      id: 'e2',\n      projectId: 'p2',\n      name: 'Authentication',\n      statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'],\n      expanded: true\n    }];\n    localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [{\n      id: 'i1',\n      projectId: 'p1',\n      epic: 'e1',\n      epicName: 'Initial Setup',\n      title: 'Setup repo',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 3,\n      createdAt: Date.now()\n    }, {\n      id: 'i2',\n      projectId: 'p1',\n      epic: 'e1',\n      epicName: 'Initial Setup',\n      title: 'Login bug',\n      status: 'inprogress',\n      priority: 'P1',\n      assignee: 'u2',\n      type: 'Bug',\n      storyPoints: 1,\n      createdAt: Date.now()\n    }, {\n      id: 'i3',\n      projectId: 'p2',\n      epic: 'e2',\n      epicName: 'Authentication',\n      title: 'OAuth',\n      status: 'done',\n      priority: 'P3',\n      assignee: 'u3',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }, {\n      id: 'i4',\n      projectId: 'p1',\n      epic: 'e1',\n      epicName: 'Initial Setup',\n      title: 'UI Fix',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u4',\n      type: 'Task',\n      storyPoints: 2,\n      createdAt: Date.now()\n    }];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{\n      id: 'a1',\n      name: 'Dev Laptop',\n      type: 'Laptop',\n      owner: 'u2',\n      status: 'active'\n    }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{\n      id: uuidv4(),\n      userId: 'u2',\n      text: 'Assigned i1',\n      read: false,\n      ts: Date.now()\n    }]));\n  }\n}\n\n// ------------------ AUTH ------------------\nexport function mockLogin(email) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// ------------------ USERS ------------------\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\nexport function updateUser(updatedUser) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const idx = arr.findIndex(u => u.id === updatedUser.id);\n  if (idx >= 0) {\n    arr[idx] = updatedUser;\n    localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n    return Promise.resolve(updatedUser);\n  }\n  return Promise.reject(new Error('User not found'));\n}\nexport function deleteUser(userId) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u => u.id !== userId)));\n  return Promise.resolve();\n}\n\n// ------------------ PROJECTS ------------------\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\nexport function getProject(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n  return Promise.resolve(arr.find(p => p.id === id));\n}\nexport function addProject(p) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const cleanName = p.name.trim().toLowerCase().replace(/\\s+/g, '-');\n  if (arr.some(proj => proj.name.toLowerCase() === cleanName)) {\n    return Promise.reject(new Error('Project name must be unique'));\n  }\n  const project = {\n    ...p,\n    name: cleanName,\n    displayName: p.name.trim()\n  };\n  arr.push(project);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(project);\n}\nexport function updateProject(id, patch) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    const cleanName = patch.name ? patch.name.trim().toLowerCase().replace(/\\s+/g, '-') : arr[idx].name;\n    if (arr.some(p => p.name.toLowerCase() === cleanName && p.id !== id)) {\n      return Promise.reject(new Error('Project name must be unique'));\n    }\n    arr[idx] = {\n      ...arr[idx],\n      ...patch,\n      name: cleanName,\n      displayName: patch.name ? patch.name.trim() : arr[idx].displayName\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Project not found'));\n}\nexport function deleteProject(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]').filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  // Delete related issues and epics\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]').filter(i => i.projectId !== id);\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]').filter(e => e.projectId !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  return Promise.resolve();\n}\n\n// ------------------ EPICS ------------------\nexport function listEpics(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  if (projectId) arr = arr.filter(e => e.projectId === projectId);\n  return Promise.resolve(arr);\n}\nexport function createEpic(name, projectId) {\n  ensure();\n  if (!projectId) return Promise.reject(new Error(\"ProjectId required\"));\n  const arr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const epic = {\n    id: uuidv4(),\n    name,\n    projectId,\n    statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'],\n    expanded: true\n  };\n  arr.push(epic);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(arr));\n  return Promise.resolve(epic);\n}\nexport function deleteEpic(epicId) {\n  ensure();\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]').filter(e => e.id !== epicId);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  // Delete all issues under this epic\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]').filter(i => i.epic !== epicId);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  return Promise.resolve();\n}\n\n// ------------------ ISSUES ------------------\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\nexport function getIssue(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  return Promise.resolve(arr.find(i => i.id === id));\n}\nexport function createIssue(data) {\n  ensure();\n  if (!data.projectId) return Promise.reject(new Error(\"ProjectId required\"));\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const issue = {\n    ...data,\n    id: uuidv4(),\n    createdAt: Date.now()\n  };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\nexport function updateIssue(id, patch) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(i => i.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Issue not found'));\n}\nexport function moveIssue(id, status) {\n  return updateIssue(id, {\n    status\n  });\n}\nexport function deleteIssue(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]').filter(i => i.id !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve();\n}\n\n// ------------------ ASSETS ------------------\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]'));\n}\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\n// ------------------ NOTIFICATIONS ------------------\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\nexport function markNotif(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n\n// ------------------ UTILS ------------------\nexport function getUserAvatarStyle(name) {\n  return {\n    ...STYLES.avatar,\n    backgroundColor: stringToColor(name)\n  };\n}\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsl(${hue},70%,60%)`;\n}\nexport function getStatusBadgeStyle(status) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.status[status]\n  };\n}\nexport function getPriorityBadgeStyle(priority) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.priority[priority]\n  };\n}\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n  return {\n    ...baseStyle,\n    ':hover': hoverStyle\n  };\n}\nexport function getCardStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.card,\n    elevated: {\n      ...STYLES.card,\n      boxShadow: '0 8px 30px rgba(0,0,0,0.12)'\n    },\n    bordered: {\n      ...STYLES.card,\n      border: '2px solid #e2e8f0',\n      boxShadow: 'none'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getButtonStyle(variant = 'primary') {\n  const variants = {\n    primary: STYLES.button,\n    secondary: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n      color: '#4a5568',\n      boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n    },\n    danger: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n      boxShadow: '0 4px 15px rgba(245,101,101,0.3)'\n    }\n  };\n  return variants[variant] || variants.primary;\n}\nexport function getInputStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.input,\n    search: {\n      ...STYLES.input,\n      backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: '12px center',\n      backgroundSize: 'clamp(16px, 4vw, 18px)',\n      paddingLeft: 'clamp(2rem, 5vw, 2.5rem)'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getUserSectionStyle() {\n  return {\n    ...STYLES.userSection,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  };\n}","map":{"version":3,"names":["v4","uuidv4","KEY","USER","USERS","PROJECTS","ISSUES","EPICS","ASSETS","NOTIFS","STYLES","avatar","borderRadius","width","height","display","alignItems","justifyContent","badge","padding","fontSize","status","todo","backgroundColor","color","inprogress","done","backlog","analysis","blocked","qa","milestone","priority","P1","P2","P3","button","background","border","cursor","buttonHover","card","boxShadow","input","userSection","globalStyles","document","styleSheet","createElement","textContent","head","appendChild","ensure","localStorage","getItem","users","id","name","email","role","setItem","JSON","stringify","projects","key","displayName","description","leads","type","createdAt","Date","now","lastUpdated","epics","projectId","statuses","expanded","issues","epic","epicName","title","assignee","storyPoints","owner","userId","text","read","ts","mockLogin","parse","user","find","u","Promise","resolve","logout","removeItem","getCurrentUser","s","listUsers","addUser","arr","push","updateUser","updatedUser","idx","findIndex","reject","Error","deleteUser","filter","listProjects","getProject","p","addProject","cleanName","trim","toLowerCase","replace","some","proj","project","updateProject","patch","deleteProject","i","e","listEpics","createEpic","deleteEpic","epicId","listIssues","getIssue","createIssue","data","issue","updateIssue","moveIssue","deleteIssue","listAssets","addAsset","a","listNotifs","n","markNotif","getUserAvatarStyle","stringToColor","str","hash","length","charCodeAt","hue","getStatusBadgeStyle","getPriorityBadgeStyle","withHover","baseStyle","hoverStyle","getCardStyle","variant","variants","default","elevated","bordered","getButtonStyle","primary","secondary","danger","getInputStyle","search","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","paddingLeft","getUserSectionStyle","flexDirection"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/services/mockApi.js"],"sourcesContent":["\n// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n\n\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles (unchanged)\n// export const STYLES = { /* your existing STYLES object */ };\n\n// // Initialize global CSS (unchanged)\n// const globalStyles = `/* your existing global CSS */`;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'] },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'] },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup' },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication' },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(p); }\n// export function updateProject(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); const idx = arr.findIndex(p=>p.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Project not found')); }\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(i=>i.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Issue not found')); }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(); }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx = arr.findIndex(n=>n.id===id); if(idx>=0){arr[idx].read=true; localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));} return Promise.resolve(); }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\nimport { v4 as uuidv4 } from 'uuid';\n\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  EPICS: 'tf_epics_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3',\n};\n\n// Styles\nexport const STYLES = {\n  avatar: { borderRadius: '50%', width: '32px', height: '32px', display: 'flex', alignItems: 'center', justifyContent: 'center' },\n  badge: { padding: '2px 8px', borderRadius: '12px', fontSize: '12px' },\n  status: {\n    todo: { backgroundColor: '#dfe1e6', color: '#172b4d' },\n    inprogress: { backgroundColor: '#d4f4e2', color: '#2e7d32' },\n    done: { backgroundColor: '#e3f2fd', color: '#1565c0' },\n    backlog: { backgroundColor: '#f3e5f5', color: '#6a1b9a' },\n    analysis: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n    blocked: { backgroundColor: '#ffcdd2', color: '#c62828' },\n    'code review': { backgroundColor: '#bbdefb', color: '#1565c0' },\n    qa: { backgroundColor: '#c8e6c9', color: '#2e7d32' },\n    milestone: { backgroundColor: '#ede7f6', color: '#4527a0' },\n  },\n  priority: {\n    P1: { backgroundColor: '#ffebee', color: '#c62828' },\n    P2: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n    P3: { backgroundColor: '#e8f5e9', color: '#388e3c' },\n  },\n  button: { padding: '6px 12px', borderRadius: '4px', background: 'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)', color: '#fff', border: 'none', cursor: 'pointer' },\n  buttonHover: { background: 'linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%)' },\n  card: { background: '#fff', border: '1px solid #dfe1e6', borderRadius: '4px', padding: '8px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' },\n  input: { padding: '8px', border: '1px solid #dfe1e6', borderRadius: '4px', width: '100%' },\n  userSection: { padding: '12px', background: '#f4f5f7', borderRadius: '4px' },\n};\n\n// Initialize global CSS\nconst globalStyles = `\n  body { font-family: 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 0; }\n  * { box-sizing: border-box; }\n`;\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\n\n// Ensure data exists\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [\n      { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n      { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n      { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n      { id: 'u4', name: 'Mark', email: 'mark@demo.com', role: 'Developer' },\n    ];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [\n      { id: 'p1', key: 'ALPHA', name: 'alpha', displayName: 'Alpha', description: 'Alpha project', leads: ['u3'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n      { id: 'p2', key: 'BETA', name: 'beta', displayName: 'Beta', description: 'Beta project', leads: ['u2'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n    ];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n\n  if (!localStorage.getItem(KEY.EPICS)) {\n    const epics = [\n      { id: 'e1', projectId: 'p1', name: 'Initial Setup', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n      { id: 'e2', projectId: 'p2', name: 'Authentication', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n    ];\n    localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  }\n\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [\n      { id: 'i1', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n      { id: 'i2', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n      { id: 'i3', projectId: 'p2', epic: 'e2', epicName: 'Authentication', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n      { id: 'i4', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'UI Fix', status: 'todo', priority: 'P2', assignee: 'u4', type: 'Task', storyPoints: 2, createdAt: Date.now() },\n    ];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n  }\n\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n  }\n}\n\n// ------------------ AUTH ------------------\nexport function mockLogin(email) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\n\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\n\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// ------------------ USERS ------------------\nexport function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\nexport function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\nexport function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\nexport function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// ------------------ PROJECTS ------------------\nexport function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\nexport function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\nexport function addProject(p) { \n  ensure(); \n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n  const cleanName = p.name.trim().toLowerCase().replace(/\\s+/g, '-');\n  if (arr.some(proj => proj.name.toLowerCase() === cleanName)) {\n    return Promise.reject(new Error('Project name must be unique'));\n  }\n  const project = { ...p, name: cleanName, displayName: p.name.trim() };\n  arr.push(project); \n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n  return Promise.resolve(project); \n}\nexport function updateProject(id, patch) { \n  ensure(); \n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n  const idx = arr.findIndex(p=>p.id===id); \n  if(idx>=0){\n    const cleanName = patch.name ? patch.name.trim().toLowerCase().replace(/\\s+/g, '-') : arr[idx].name;\n    if (arr.some(p => p.name.toLowerCase() === cleanName && p.id !== id)) {\n      return Promise.reject(new Error('Project name must be unique'));\n    }\n    arr[idx]={...arr[idx],...patch, name: cleanName, displayName: patch.name ? patch.name.trim() : arr[idx].displayName}; \n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n    return Promise.resolve(arr[idx]);\n  } \n  return Promise.reject(new Error('Project not found')); \n}\nexport function deleteProject(id) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  // Delete related issues and epics\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  return Promise.resolve();\n}\n\n// ------------------ EPICS ------------------\nexport function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\nexport function createEpic(name, projectId) { \n  ensure(); \n  if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n  const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n  const epic = { id: uuidv4(), name, projectId, statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true }; \n  arr.push(epic); \n  localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n  return Promise.resolve(epic); \n}\nexport function deleteEpic(epicId) {\n  ensure();\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  // Delete all issues under this epic\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  return Promise.resolve();\n}\n\n// ------------------ ISSUES ------------------\nexport function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\nexport function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\nexport function createIssue(data) { \n  ensure(); \n  if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n  const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n  arr.push(issue); \n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n  return Promise.resolve(issue); \n}\nexport function updateIssue(id, patch) { \n  ensure(); \n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n  const idx=arr.findIndex(i=>i.id===id); \n  if(idx>=0){\n    arr[idx]={...arr[idx],...patch}; \n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n    return Promise.resolve(arr[idx]);\n  } \n  return Promise.reject(new Error('Issue not found')); \n}\nexport function moveIssue(id, status) { return updateIssue(id, { status }); }\nexport function deleteIssue(id) { \n  ensure(); \n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); \n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n  return Promise.resolve(); \n}\n\n// ------------------ ASSETS ------------------\nexport function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\nexport function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// ------------------ NOTIFICATIONS ------------------\nexport function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\nexport function markNotif(id) { \n  ensure(); \n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); \n  const idx = arr.findIndex(n=>n.id===id); \n  if(idx>=0){\n    arr[idx].read=true; \n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  } \n  return Promise.resolve(); \n}\n\n// ------------------ UTILS ------------------\nexport function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\nfunction stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\nexport function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\nexport function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\nexport function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\nexport function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\nexport function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\nexport function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAanC,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,cAAc;EACtBC,KAAK,EAAE,aAAa;EACpBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,OAAO,MAAMC,MAAM,GAAG;EACpBC,MAAM,EAAE;IAAEC,YAAY,EAAE,KAAK;IAAEC,KAAK,EAAE,MAAM;IAAEC,MAAM,EAAE,MAAM;IAAEC,OAAO,EAAE,MAAM;IAAEC,UAAU,EAAE,QAAQ;IAAEC,cAAc,EAAE;EAAS,CAAC;EAC/HC,KAAK,EAAE;IAAEC,OAAO,EAAE,SAAS;IAAEP,YAAY,EAAE,MAAM;IAAEQ,QAAQ,EAAE;EAAO,CAAC;EACrEC,MAAM,EAAE;IACNC,IAAI,EAAE;MAAEC,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAU,CAAC;IACtDC,UAAU,EAAE;MAAEF,eAAe,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAU,CAAC;I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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}