{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battina srinuvasurao\\\\OneDrive\\\\Desktop\\\\userstool\\\\src\\\\components\\\\timeline\\\\Timeline.js\",\n  _s = $RefreshSig$();\n// for full code \n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n// import gantt from \"dhtmlx-gantt\";\n// import { useProjects } from \"../../context/ProjectContext\";\n\n// const priorityOptions = [\n//   { value: \"Low\", label: \"Low\" },\n//   { value: \"Medium\", label: \"Medium\" },\n//   { value: \"High\", label: \"High\" },\n//   { value: \"Critical\", label: \"Critical\" },\n// ];\n\n// const Timeline = () => {\n//   const ganttContainer = useRef(null);\n//   const { projects, addProject } = useProjects();\n//   const [newProjectText, setNewProjectText] = useState(\"\");\n//   const [newProjectDate, setNewProjectDate] = useState(\"\");\n//   const [newProjectTime, setNewProjectTime] = useState(\"\");\n//   const [newProjectDuration, setNewProjectDuration] = useState(\"\");\n//   const [newProjectPriority, setNewProjectPriority] = useState(\"Low\");\n//   const [hover, setHover] = useState(false);\n//   const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n//   const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n//   const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\n//   const [currentTime, setCurrentTime] = useState(new Date());\n//   const [lastAddedId, setLastAddedId] = useState(null);\n\n//   useEffect(() => {\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n//     gantt.config.readonly = false;\n//     gantt.config.drag_move = true;\n//     gantt.config.drag_resize = true;\n//     gantt.config.drag_links = true;\n//     gantt.config.auto_scheduling = true;\n//     gantt.config.show_errors = false;\n//     gantt.config.highlight_critical_path = true;\n//     gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\n//     gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\n//     gantt.config.subscales =\n//       windowWidth > 768\n//         ? [{ unit: \"week\", step: 1, date: \"%j, %D\" }]\n//         : [{ unit: \"day\", step: 1, date: \"%d\" }];\n\n//     // Add grid columns, including new Priority column\n//     gantt.config.columns = [\n//       { name: \"text\", label: \"Task name\", tree: true, width: \"*\" },\n//       {\n//         name: \"start_date\",\n//         label: \"Start time\",\n//         align: \"center\",\n//         width: 100,\n//         template: (task) =>\n//           task.start_date ? gantt.templates.date_grid(task.start_date) : \"\",\n//       },\n//       { name: \"duration\", label: \"Duration\", align: \"center\", width: 70 },\n//       {\n//         name: \"time\",\n//         label: \"Time\",\n//         align: \"center\",\n//         width: 70,\n//         template: function (task) {\n//           if (!task.start_date) return \"\";\n//           const d = gantt.date.parseDate(task.start_date, \"%Y-%m-%d %H:%i\");\n//           const hh = d.getHours().toString().padStart(2, \"0\");\n//           const mm = d.getMinutes().toString().padStart(2, \"0\");\n//           return `${hh}:${mm}`;\n//         },\n//       },\n//       {\n//         name: \"priority\",\n//         label: \"Priority\",\n//         align: \"center\",\n//         width: 90,\n//         template: function (task) {\n//           return task.priority || \"Low\";\n//         },\n//       },\n//       { name: \"add\", label: \"\", width: 44 },\n//     ];\n\n//     gantt.init(ganttContainer.current);\n//     gantt.clearAll();\n//     gantt.parse({\n//       data: projects,\n//       links: [\n//         { id: 1, source: 1, target: 2, type: \"0\" },\n//         { id: 2, source: 2, target: 3, type: \"0\" },\n//         { id: 3, source: 3, target: 4, type: \"0\" },\n//         { id: 4, source: 4, target: 5, type: \"0\" },\n//       ],\n//     });\n//     gantt.render();\n//   }, [projects, windowWidth]);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       const width = window.innerWidth;\n//       setWindowWidth(width);\n//       setIsMobile(width <= 768);\n//       setIsSmallMobile(width <= 480);\n//     };\n//     window.addEventListener(\"resize\", handleResize);\n//     return () => window.removeEventListener(\"resize\", handleResize);\n//   }, []);\n\n//   // Timer to update currentTime every second\n//   useEffect(() => {\n//     const timer = setInterval(() => {\n//       setCurrentTime(new Date());\n//     }, 1000);\n//     return () => clearInterval(timer);\n//   }, []);\n\n//   // Update the start_date of the last added task to the current time, every second\n//   useEffect(() => {\n//     if (lastAddedId === null) return;\n//     const ganttTask = gantt.getTask(lastAddedId);\n//     if (!ganttTask) return;\n\n//     const parsedStartDate = gantt.date.parseDate(ganttTask.start_date, \"%Y-%m-%d %H:%i\");\n//     if (!parsedStartDate) return;\n\n//     // Only update if start_date differs from currentTime (ignoring seconds for smoothness)\n//     const timeDiff =\n//       Math.abs(parsedStartDate.getTime() - currentTime.getTime());\n\n//     if (timeDiff >= 1000) {\n//       gantt.getTask(lastAddedId).start_date = currentTime;\n//       gantt.updateTask(lastAddedId);\n//     }\n//   }, [currentTime, lastAddedId]);\n\n//   const formatDateTime = (date) => {\n//     // Format date to gantt xml_date format \"YYYY-MM-DD HH:ii\"\n//     const year = date.getFullYear();\n//     const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n//     const day = date.getDate().toString().padStart(2, \"0\");\n//     const hours = date.getHours().toString().padStart(2, \"0\");\n//     const mins = date.getMinutes().toString().padStart(2, \"0\");\n//     return `${year}-${month}-${day} ${hours}:${mins}`;\n//   };\n\n//   const handleCreateProject = () => {\n//     if (!newProjectText.trim()) return;\n//     const now = new Date();\n//     const formattedCurrentDate = formatDateTime(now);\n//     const newProject = {\n//       id: Date.now(),\n//       text: newProjectText,\n//       start_date: formattedCurrentDate,\n//       duration: newProjectDuration ? parseInt(newProjectDuration) : 10,\n//       priority: newProjectPriority,\n//       progress: 0,\n//     };\n//     addProject(newProject);\n//     setLastAddedId(newProject.id);\n//     setNewProjectText(\"\");\n//     setNewProjectDate(\"\");\n//     setNewProjectTime(\"\");\n//     setNewProjectDuration(\"\");\n//     setNewProjectPriority(\"Low\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       handleCreateProject();\n//     }\n//   };\n\n//   const containerStyle = {\n//     margin: isMobile ? \"15px 10px\" : \"30px auto\",\n//     maxWidth: \"1200px\",\n//     borderRadius: \"16px\",\n//     boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\n//     overflow: \"hidden\",\n//     background: \"#D0F0F4\",\n//     fontFamily: \"Segoe UI, sans-serif\",\n//     transform: \"perspective(1000px)\",\n//     transition: \"transform 0.3s ease-in-out\",\n//   };\n\n//   const headerStyle = {\n//     padding: isMobile ? \"18px 15px\" : \"25px\",\n//     background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\n//     color: \"#fff\",\n//     fontSize: isMobile ? \"22px\" : \"28px\",\n//     fontWeight: \"700\",\n//     textAlign: \"center\",\n//     letterSpacing: \"0.8px\",\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n//     textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\",\n//   };\n\n//   const ganttStyle = {\n//     height: isMobile ? (isSmallMobile ? \"350px\" : \"400px\") : \"600px\",\n//     width: \"100%\",\n//     borderTop: \"1px solid #ccc\",\n//     overflow: \"auto\",\n//   };\n\n//   const inputContainerStyle = {\n//     padding: isMobile ? \"15px\" : \"20px\",\n//     display: \"flex\",\n//     gap: \"12px\",\n//     flexDirection: isSmallMobile ? \"column\" : \"row\",\n//     alignItems: isSmallMobile ? \"stretch\" : \"center\",\n//     flexWrap: \"wrap\",\n//   };\n\n//   const inputStyle = {\n//     flex: \"1\",\n//     padding: isMobile ? \"10px 14px\" : \"12px 16px\",\n//     fontSize: isMobile ? \"14px\" : \"16px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\n//     transition: \"all 0.3s ease\",\n//     outline: \"none\",\n//     minWidth: \"0\",\n//   };\n\n//   const selectStyle = {\n//     ...inputStyle,\n//     minWidth: \"auto\",\n//   };\n\n//   const buttonStyle = {\n//     padding: isMobile ? \"10px 16px\" : \"12px 20px\",\n//     fontSize: isMobile ? \"14px\" : \"16px\",\n//     borderRadius: \"8px\",\n//     background: \"#8c6deaff\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n//     transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\n//     whiteSpace: \"nowrap\",\n//     minWidth: isSmallMobile ? \"100%\" : \"auto\",\n//   };\n\n//   const buttonHoverStyle = {\n//     transform: \"scale(1.05)\",\n//     boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\",\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>{isMobile ? \"📅 Timeline\" : \"📅 Project Timeline\"}</div>\n//       <div style={inputContainerStyle}>\n//         <input\n//           type=\"text\"\n//           value={newProjectText}\n//           onChange={(e) => setNewProjectText(e.target.value)}\n//           onKeyPress={handleKeyPress}\n//           placeholder={isMobile ? \"New project...\" : \"Enter project name...\"}\n//           style={inputStyle}\n//           aria-label=\"New project name\"\n//         />\n\n//         <input\n//           type=\"number\"\n//           value={newProjectDuration}\n//           onChange={(e) => setNewProjectDuration(e.target.value)}\n//           placeholder=\"Duration (days)\"\n//           style={inputStyle}\n//           aria-label=\"Project duration\"\n//           min=\"1\"\n//         />\n//         <select\n//           value={newProjectPriority}\n//           onChange={(e) => setNewProjectPriority(e.target.value)}\n//           style={selectStyle}\n//           aria-label=\"Project priority\"\n//         >\n//           {priorityOptions.map((option) => (\n//             <option key={option.value} value={option.value}>\n//               {option.label}\n//             </option>\n//           ))}\n//         </select>\n//         <button\n//           onClick={handleCreateProject}\n//           style={hover ? { ...buttonStyle, ...buttonHoverStyle } : buttonStyle}\n//           onMouseEnter={() => setHover(true)}\n//           onMouseLeave={() => setHover(false)}\n//           aria-label=\"Add new project\"\n//         >\n//           {isMobile ? \"➕ Add\" : \"➕ Add\"}\n//         </button>\n//       </div>\n//       <div ref={ganttContainer} style={ganttStyle} className=\"gantt-container\"></div>\n//     </div>\n//   );\n// };\n\n// export default Timeline;\n\n// by using figma \n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  name: \"Setup repo\",\n  start: \"2025-09-22\",\n  duration: \"1 Hr\",\n  barWidth: \"15%\",\n  barColor: \"#f6b6b7\"\n}, {\n  name: \"Setup DB\",\n  start: \"2025-09-22\",\n  duration: \"24 Hr\",\n  barWidth: \"50%\",\n  barColor: \"#c6f6fa\"\n}];\nconst Timeline = () => {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const [newTask, setNewTask] = useState(\"\");\n  const addTask = () => {\n    if (newTask.trim()) {\n      setTasks([...tasks, {\n        name: newTask,\n        start: \"2025-09-22\",\n        duration: \"1 Hr\",\n        barWidth: \"15%\",\n        barColor: \"#f6b6b7\"\n      }]);\n      setNewTask(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#e5f6fb\",\n      minHeight: \"100vh\",\n      fontFamily: \"Inter, Arial, sans-serif\",\n      margin: 0,\n      padding: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#a076f2\",\n        color: \"#fff\",\n        padding: \"24px 0 20px 0\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        fontSize: \"28px\",\n        fontWeight: 600,\n        borderRadius: \"8px 8px 0 0\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginRight: \"12px\",\n          fontSize: \"30px\"\n        },\n        children: \"\\uD83D\\uDDD3\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), \"Project Timeline\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\",\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"18px\",\n        background: \"#fff\",\n        borderRadius: \"0 0 8px 8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          flex: 1,\n          fontSize: \"22px\",\n          padding: \"9px 13px\",\n          borderRadius: \"7px\",\n          border: \"1.5px solid #cacaca\",\n          outline: \"none\",\n          color: \"#aaa\"\n        },\n        type: \"text\",\n        placeholder: \"New Task Name\",\n        value: newTask,\n        onChange: e => setNewTask(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: \"16px\",\n          background: \"#1976d2\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"7px\",\n          padding: \"9px 21px\",\n          cursor: \"pointer\",\n          boxShadow: \"0 1px 5px rgba(0,0,0,0.10)\",\n          fontWeight: 500\n        },\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"22px\",\n        background: \"#fff\",\n        borderRadius: \"9px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.06)\",\n        overflow: \"hidden\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\",\n          fontSize: \"18px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                background: \"#fafafc\",\n                fontWeight: 600,\n                padding: \"11px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                textAlign: \"left\"\n              },\n              children: \"Task name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                background: \"#fafafc\",\n                fontWeight: 600,\n                padding: \"11px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                textAlign: \"left\"\n              },\n              children: \"Start time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                background: \"#fafafc\",\n                fontWeight: 600,\n                padding: \"11px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                textAlign: \"left\"\n              },\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                background: \"#fafafc\",\n                fontWeight: 600,\n                padding: \"11px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                textAlign: \"left\"\n              },\n              colSpan: 5,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: \"flex\",\n                  gap: \"6px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"September 2025\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginLeft: \"16px\"\n                  },\n                  children: \"October 2025\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: \"#f3f6fb\",\n                fontSize: \"15px\",\n                fontWeight: 600,\n                padding: \"10px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                color: \"#707793\"\n              },\n              children: \"1 Hr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: \"#f3f6fb\",\n                fontSize: \"15px\",\n                fontWeight: 600,\n                padding: \"10px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                color: \"#707793\"\n              },\n              children: \"12 Hr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: \"#f3f6fb\",\n                fontSize: \"15px\",\n                fontWeight: 600,\n                padding: \"10px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                color: \"#707793\"\n              },\n              children: \"24 hrs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 479,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                background: \"#f3f6fb\",\n                fontSize: \"15px\",\n                fontWeight: 600,\n                padding: \"10px 10px\",\n                borderBottom: \"2px solid #ececec\",\n                color: \"#707793\"\n              },\n              children: \"2 days\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\",\n                borderBottom: \"1px solid #f0f0f0\",\n                verticalAlign: \"middle\",\n                fontSize: \"16px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: \"15px\",\n                  background: \"#f6f7fa\",\n                  border: \"1.5px solid #bbb\",\n                  borderRadius: \"16px\",\n                  padding: \"2px 16px\",\n                  fontWeight: 500,\n                  marginRight: \"7px\",\n                  marginBottom: \"4px\",\n                  display: \"inline-block\"\n                },\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 506,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\",\n                borderBottom: \"1px solid #f0f0f0\",\n                verticalAlign: \"middle\",\n                fontSize: \"16px\"\n              },\n              children: task.start\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"10px\",\n                borderBottom: \"1px solid #f0f0f0\",\n                verticalAlign: \"middle\",\n                fontSize: \"16px\"\n              },\n              children: task.duration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                position: \"relative\",\n                minWidth: \"500px\",\n                height: \"60px\",\n                background: \"#f9fbff\"\n              },\n              colSpan: 4,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: task.barColor,\n                  borderRadius: \"8px\",\n                  height: \"23px\",\n                  width: task.barWidth,\n                  position: \"absolute\",\n                  left: \"3%\",\n                  top: \"15px\",\n                  zIndex: 2,\n                  boxShadow: \"0 2px 7px rgba(0,0,0,0.06)\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 357,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"S2ywJw5GtMfD/8UvZcaziMRcygI=\");\n_c = Timeline;\nexport default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","initialTasks","name","start","duration","barWidth","barColor","Timeline","_s","tasks","setTasks","newTask","setNewTask","addTask","trim","style","background","minHeight","fontFamily","margin","padding","children","color","display","alignItems","justifyContent","fontSize","fontWeight","borderRadius","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","gap","flex","border","outline","type","placeholder","value","onChange","e","target","cursor","boxShadow","onClick","overflow","width","borderCollapse","borderBottom","textAlign","colSpan","marginLeft","map","task","idx","verticalAlign","marginBottom","position","minWidth","height","left","top","zIndex","_c","$RefreshReg$"],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/timeline/Timeline.js"],"sourcesContent":["// for full code \r\n\r\n\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\n// import gantt from \"dhtmlx-gantt\";\r\n// import { useProjects } from \"../../context/ProjectContext\";\r\n\r\n// const priorityOptions = [\r\n//   { value: \"Low\", label: \"Low\" },\r\n//   { value: \"Medium\", label: \"Medium\" },\r\n//   { value: \"High\", label: \"High\" },\r\n//   { value: \"Critical\", label: \"Critical\" },\r\n// ];\r\n\r\n// const Timeline = () => {\r\n//   const ganttContainer = useRef(null);\r\n//   const { projects, addProject } = useProjects();\r\n//   const [newProjectText, setNewProjectText] = useState(\"\");\r\n//   const [newProjectDate, setNewProjectDate] = useState(\"\");\r\n//   const [newProjectTime, setNewProjectTime] = useState(\"\");\r\n//   const [newProjectDuration, setNewProjectDuration] = useState(\"\");\r\n//   const [newProjectPriority, setNewProjectPriority] = useState(\"Low\");\r\n//   const [hover, setHover] = useState(false);\r\n//   const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n//   const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n//   const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\r\n//   const [currentTime, setCurrentTime] = useState(new Date());\r\n//   const [lastAddedId, setLastAddedId] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n//     gantt.config.readonly = false;\r\n//     gantt.config.drag_move = true;\r\n//     gantt.config.drag_resize = true;\r\n//     gantt.config.drag_links = true;\r\n//     gantt.config.auto_scheduling = true;\r\n//     gantt.config.show_errors = false;\r\n//     gantt.config.highlight_critical_path = true;\r\n//     gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\r\n//     gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\r\n//     gantt.config.subscales =\r\n//       windowWidth > 768\r\n//         ? [{ unit: \"week\", step: 1, date: \"%j, %D\" }]\r\n//         : [{ unit: \"day\", step: 1, date: \"%d\" }];\r\n\r\n//     // Add grid columns, including new Priority column\r\n//     gantt.config.columns = [\r\n//       { name: \"text\", label: \"Task name\", tree: true, width: \"*\" },\r\n//       {\r\n//         name: \"start_date\",\r\n//         label: \"Start time\",\r\n//         align: \"center\",\r\n//         width: 100,\r\n//         template: (task) =>\r\n//           task.start_date ? gantt.templates.date_grid(task.start_date) : \"\",\r\n//       },\r\n//       { name: \"duration\", label: \"Duration\", align: \"center\", width: 70 },\r\n//       {\r\n//         name: \"time\",\r\n//         label: \"Time\",\r\n//         align: \"center\",\r\n//         width: 70,\r\n//         template: function (task) {\r\n//           if (!task.start_date) return \"\";\r\n//           const d = gantt.date.parseDate(task.start_date, \"%Y-%m-%d %H:%i\");\r\n//           const hh = d.getHours().toString().padStart(2, \"0\");\r\n//           const mm = d.getMinutes().toString().padStart(2, \"0\");\r\n//           return `${hh}:${mm}`;\r\n//         },\r\n//       },\r\n//       {\r\n//         name: \"priority\",\r\n//         label: \"Priority\",\r\n//         align: \"center\",\r\n//         width: 90,\r\n//         template: function (task) {\r\n//           return task.priority || \"Low\";\r\n//         },\r\n//       },\r\n//       { name: \"add\", label: \"\", width: 44 },\r\n//     ];\r\n\r\n//     gantt.init(ganttContainer.current);\r\n//     gantt.clearAll();\r\n//     gantt.parse({\r\n//       data: projects,\r\n//       links: [\r\n//         { id: 1, source: 1, target: 2, type: \"0\" },\r\n//         { id: 2, source: 2, target: 3, type: \"0\" },\r\n//         { id: 3, source: 3, target: 4, type: \"0\" },\r\n//         { id: 4, source: 4, target: 5, type: \"0\" },\r\n//       ],\r\n//     });\r\n//     gantt.render();\r\n//   }, [projects, windowWidth]);\r\n\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       const width = window.innerWidth;\r\n//       setWindowWidth(width);\r\n//       setIsMobile(width <= 768);\r\n//       setIsSmallMobile(width <= 480);\r\n//     };\r\n//     window.addEventListener(\"resize\", handleResize);\r\n//     return () => window.removeEventListener(\"resize\", handleResize);\r\n//   }, []);\r\n\r\n//   // Timer to update currentTime every second\r\n//   useEffect(() => {\r\n//     const timer = setInterval(() => {\r\n//       setCurrentTime(new Date());\r\n//     }, 1000);\r\n//     return () => clearInterval(timer);\r\n//   }, []);\r\n\r\n//   // Update the start_date of the last added task to the current time, every second\r\n//   useEffect(() => {\r\n//     if (lastAddedId === null) return;\r\n//     const ganttTask = gantt.getTask(lastAddedId);\r\n//     if (!ganttTask) return;\r\n\r\n//     const parsedStartDate = gantt.date.parseDate(ganttTask.start_date, \"%Y-%m-%d %H:%i\");\r\n//     if (!parsedStartDate) return;\r\n\r\n//     // Only update if start_date differs from currentTime (ignoring seconds for smoothness)\r\n//     const timeDiff =\r\n//       Math.abs(parsedStartDate.getTime() - currentTime.getTime());\r\n\r\n//     if (timeDiff >= 1000) {\r\n//       gantt.getTask(lastAddedId).start_date = currentTime;\r\n//       gantt.updateTask(lastAddedId);\r\n//     }\r\n//   }, [currentTime, lastAddedId]);\r\n\r\n//   const formatDateTime = (date) => {\r\n//     // Format date to gantt xml_date format \"YYYY-MM-DD HH:ii\"\r\n//     const year = date.getFullYear();\r\n//     const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n//     const day = date.getDate().toString().padStart(2, \"0\");\r\n//     const hours = date.getHours().toString().padStart(2, \"0\");\r\n//     const mins = date.getMinutes().toString().padStart(2, \"0\");\r\n//     return `${year}-${month}-${day} ${hours}:${mins}`;\r\n//   };\r\n\r\n//   const handleCreateProject = () => {\r\n//     if (!newProjectText.trim()) return;\r\n//     const now = new Date();\r\n//     const formattedCurrentDate = formatDateTime(now);\r\n//     const newProject = {\r\n//       id: Date.now(),\r\n//       text: newProjectText,\r\n//       start_date: formattedCurrentDate,\r\n//       duration: newProjectDuration ? parseInt(newProjectDuration) : 10,\r\n//       priority: newProjectPriority,\r\n//       progress: 0,\r\n//     };\r\n//     addProject(newProject);\r\n//     setLastAddedId(newProject.id);\r\n//     setNewProjectText(\"\");\r\n//     setNewProjectDate(\"\");\r\n//     setNewProjectTime(\"\");\r\n//     setNewProjectDuration(\"\");\r\n//     setNewProjectPriority(\"Low\");\r\n//   };\r\n\r\n//   const handleKeyPress = (e) => {\r\n//     if (e.key === \"Enter\") {\r\n//       handleCreateProject();\r\n//     }\r\n//   };\r\n\r\n//   const containerStyle = {\r\n//     margin: isMobile ? \"15px 10px\" : \"30px auto\",\r\n//     maxWidth: \"1200px\",\r\n//     borderRadius: \"16px\",\r\n//     boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\r\n//     overflow: \"hidden\",\r\n//     background: \"#D0F0F4\",\r\n//     fontFamily: \"Segoe UI, sans-serif\",\r\n//     transform: \"perspective(1000px)\",\r\n//     transition: \"transform 0.3s ease-in-out\",\r\n//   };\r\n\r\n//   const headerStyle = {\r\n//     padding: isMobile ? \"18px 15px\" : \"25px\",\r\n//     background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\r\n//     color: \"#fff\",\r\n//     fontSize: isMobile ? \"22px\" : \"28px\",\r\n//     fontWeight: \"700\",\r\n//     textAlign: \"center\",\r\n//     letterSpacing: \"0.8px\",\r\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\r\n//     textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\",\r\n//   };\r\n\r\n//   const ganttStyle = {\r\n//     height: isMobile ? (isSmallMobile ? \"350px\" : \"400px\") : \"600px\",\r\n//     width: \"100%\",\r\n//     borderTop: \"1px solid #ccc\",\r\n//     overflow: \"auto\",\r\n//   };\r\n\r\n//   const inputContainerStyle = {\r\n//     padding: isMobile ? \"15px\" : \"20px\",\r\n//     display: \"flex\",\r\n//     gap: \"12px\",\r\n//     flexDirection: isSmallMobile ? \"column\" : \"row\",\r\n//     alignItems: isSmallMobile ? \"stretch\" : \"center\",\r\n//     flexWrap: \"wrap\",\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     flex: \"1\",\r\n//     padding: isMobile ? \"10px 14px\" : \"12px 16px\",\r\n//     fontSize: isMobile ? \"14px\" : \"16px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\r\n//     transition: \"all 0.3s ease\",\r\n//     outline: \"none\",\r\n//     minWidth: \"0\",\r\n//   };\r\n\r\n//   const selectStyle = {\r\n//     ...inputStyle,\r\n//     minWidth: \"auto\",\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: isMobile ? \"10px 16px\" : \"12px 20px\",\r\n//     fontSize: isMobile ? \"14px\" : \"16px\",\r\n//     borderRadius: \"8px\",\r\n//     background: \"#8c6deaff\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\r\n//     transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\r\n//     whiteSpace: \"nowrap\",\r\n//     minWidth: isSmallMobile ? \"100%\" : \"auto\",\r\n//   };\r\n\r\n//   const buttonHoverStyle = {\r\n//     transform: \"scale(1.05)\",\r\n//     boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={containerStyle}>\r\n//       <div style={headerStyle}>{isMobile ? \"📅 Timeline\" : \"📅 Project Timeline\"}</div>\r\n//       <div style={inputContainerStyle}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newProjectText}\r\n//           onChange={(e) => setNewProjectText(e.target.value)}\r\n//           onKeyPress={handleKeyPress}\r\n//           placeholder={isMobile ? \"New project...\" : \"Enter project name...\"}\r\n//           style={inputStyle}\r\n//           aria-label=\"New project name\"\r\n//         />\r\n\r\n//         <input\r\n//           type=\"number\"\r\n//           value={newProjectDuration}\r\n//           onChange={(e) => setNewProjectDuration(e.target.value)}\r\n//           placeholder=\"Duration (days)\"\r\n//           style={inputStyle}\r\n//           aria-label=\"Project duration\"\r\n//           min=\"1\"\r\n//         />\r\n//         <select\r\n//           value={newProjectPriority}\r\n//           onChange={(e) => setNewProjectPriority(e.target.value)}\r\n//           style={selectStyle}\r\n//           aria-label=\"Project priority\"\r\n//         >\r\n//           {priorityOptions.map((option) => (\r\n//             <option key={option.value} value={option.value}>\r\n//               {option.label}\r\n//             </option>\r\n//           ))}\r\n//         </select>\r\n//         <button\r\n//           onClick={handleCreateProject}\r\n//           style={hover ? { ...buttonStyle, ...buttonHoverStyle } : buttonStyle}\r\n//           onMouseEnter={() => setHover(true)}\r\n//           onMouseLeave={() => setHover(false)}\r\n//           aria-label=\"Add new project\"\r\n//         >\r\n//           {isMobile ? \"➕ Add\" : \"➕ Add\"}\r\n//         </button>\r\n//       </div>\r\n//       <div ref={ganttContainer} style={ganttStyle} className=\"gantt-container\"></div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Timeline;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// by using figma \r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst initialTasks = [\r\n  {\r\n    name: \"Setup repo\",\r\n    start: \"2025-09-22\",\r\n    duration: \"1 Hr\",\r\n    barWidth: \"15%\",\r\n    barColor: \"#f6b6b7\",\r\n  },\r\n  {\r\n    name: \"Setup DB\",\r\n    start: \"2025-09-22\",\r\n    duration: \"24 Hr\",\r\n    barWidth: \"50%\",\r\n    barColor: \"#c6f6fa\",\r\n  },\r\n];\r\n\r\nconst Timeline = () => {\r\n  const [tasks, setTasks] = useState(initialTasks);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const addTask = () => {\r\n    if (newTask.trim()) {\r\n      setTasks([\r\n        ...tasks,\r\n        {\r\n          name: newTask,\r\n          start: \"2025-09-22\",\r\n          duration: \"1 Hr\",\r\n          barWidth: \"15%\",\r\n          barColor: \"#f6b6b7\",\r\n        },\r\n      ]);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: \"#e5f6fb\", minHeight: \"100vh\", fontFamily: \"Inter, Arial, sans-serif\", margin: 0, padding: 0 }}>\r\n      {/* Header */}\r\n      <div style={{\r\n        background: \"#a076f2\",\r\n        color: \"#fff\",\r\n        padding: \"24px 0 20px 0\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        fontSize: \"28px\",\r\n        fontWeight: 600,\r\n        borderRadius: \"8px 8px 0 0\",\r\n      }}>\r\n        <span style={{ marginRight: \"12px\", fontSize: \"30px\" }}>🗓️</span>\r\n        Project Timeline\r\n      </div>\r\n      {/* Input Section */}\r\n      <div style={{\r\n        padding: \"20px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        gap: \"18px\",\r\n        background: \"#fff\",\r\n        borderRadius: \"0 0 8px 8px\"\r\n      }}>\r\n        <input\r\n          style={{\r\n            flex: 1,\r\n            fontSize: \"22px\",\r\n            padding: \"9px 13px\",\r\n            borderRadius: \"7px\",\r\n            border: \"1.5px solid #cacaca\",\r\n            outline: \"none\",\r\n            color: \"#aaa\"\r\n          }}\r\n          type=\"text\"\r\n          placeholder=\"New Task Name\"\r\n          value={newTask}\r\n          onChange={e => setNewTask(e.target.value)}\r\n        />\r\n        <button\r\n          style={{\r\n            fontSize: \"16px\",\r\n            background: \"#1976d2\",\r\n            color: \"#fff\",\r\n            border: \"none\",\r\n            borderRadius: \"7px\",\r\n            padding: \"9px 21px\",\r\n            cursor: \"pointer\",\r\n            boxShadow: \"0 1px 5px rgba(0,0,0,0.10)\",\r\n            fontWeight: 500,\r\n          }}\r\n          onClick={addTask}\r\n        >\r\n          Add Task\r\n        </button>\r\n      </div>\r\n      {/* Timeline Table */}\r\n      <div style={{\r\n        margin: \"22px\",\r\n        background: \"#fff\",\r\n        borderRadius: \"9px\",\r\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.06)\",\r\n        overflow: \"hidden\"\r\n      }}>\r\n        <table style={{ width: \"100%\", borderCollapse: \"collapse\", fontSize: \"18px\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th style={{\r\n                background: \"#fafafc\",\r\n                fontWeight: 600,\r\n                padding: \"11px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                textAlign: \"left\"\r\n              }}>Task name</th>\r\n              <th style={{\r\n                background: \"#fafafc\",\r\n                fontWeight: 600,\r\n                padding: \"11px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                textAlign: \"left\"\r\n              }}>Start time</th>\r\n              <th style={{\r\n                background: \"#fafafc\",\r\n                fontWeight: 600,\r\n                padding: \"11px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                textAlign: \"left\"\r\n              }}>Duration</th>\r\n              <th style={{\r\n                background: \"#fafafc\",\r\n                fontWeight: 600,\r\n                padding: \"11px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                textAlign: \"left\"\r\n              }} colSpan={5}>\r\n                <div style={{ display: \"flex\", gap: \"6px\" }}>\r\n                  <span>September 2025</span>\r\n                  <span style={{ marginLeft: \"16px\" }}>October 2025</span>\r\n                </div>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <td></td>\r\n              <td></td>\r\n              <td></td>\r\n              <td style={{\r\n                background: \"#f3f6fb\",\r\n                fontSize: \"15px\",\r\n                fontWeight: 600,\r\n                padding: \"10px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                color: \"#707793\"\r\n              }}>1 Hr</td>\r\n              <td style={{\r\n                background: \"#f3f6fb\",\r\n                fontSize: \"15px\",\r\n                fontWeight: 600,\r\n                padding: \"10px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                color: \"#707793\"\r\n              }}>12 Hr</td>\r\n              <td style={{\r\n                background: \"#f3f6fb\",\r\n                fontSize: \"15px\",\r\n                fontWeight: 600,\r\n                padding: \"10px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                color: \"#707793\"\r\n              }}>24 hrs</td>\r\n              <td style={{\r\n                background: \"#f3f6fb\",\r\n                fontSize: \"15px\",\r\n                fontWeight: 600,\r\n                padding: \"10px 10px\",\r\n                borderBottom: \"2px solid #ececec\",\r\n                color: \"#707793\"\r\n              }}>2 days</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tasks.map((task, idx) => (\r\n              <tr key={idx}>\r\n                <td style={{\r\n                  padding: \"10px\",\r\n                  borderBottom: \"1px solid #f0f0f0\",\r\n                  verticalAlign: \"middle\",\r\n                  fontSize: \"16px\"\r\n                }}>\r\n                  <span style={{\r\n                    fontSize: \"15px\",\r\n                    background: \"#f6f7fa\",\r\n                    border: \"1.5px solid #bbb\",\r\n                    borderRadius: \"16px\",\r\n                    padding: \"2px 16px\",\r\n                    fontWeight: 500,\r\n                    marginRight: \"7px\",\r\n                    marginBottom: \"4px\",\r\n                    display: \"inline-block\"\r\n                  }}>\r\n                    {task.name}\r\n                  </span>\r\n                </td>\r\n                <td style={{\r\n                  padding: \"10px\",\r\n                  borderBottom: \"1px solid #f0f0f0\",\r\n                  verticalAlign: \"middle\",\r\n                  fontSize: \"16px\"\r\n                }}>{task.start}</td>\r\n                <td style={{\r\n                  padding: \"10px\",\r\n                  borderBottom: \"1px solid #f0f0f0\",\r\n                  verticalAlign: \"middle\",\r\n                  fontSize: \"16px\"\r\n                }}>{task.duration}</td>\r\n                <td style={{\r\n                  position: \"relative\",\r\n                  minWidth: \"500px\",\r\n                  height: \"60px\",\r\n                  background: \"#f9fbff\"\r\n                }} colSpan={4}>\r\n                  <div style={{\r\n                    background: task.barColor,\r\n                    borderRadius: \"8px\",\r\n                    height: \"23px\",\r\n                    width: task.barWidth,\r\n                    position: \"absolute\",\r\n                    left: \"3%\",\r\n                    top: \"15px\",\r\n                    zIndex: 2,\r\n                    boxShadow: \"0 2px 7px rgba(0,0,0,0.06)\"\r\n                  }}></div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}