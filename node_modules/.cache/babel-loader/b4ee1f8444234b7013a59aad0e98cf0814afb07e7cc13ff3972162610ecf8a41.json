{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import { createIssue } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const nav = useNavigate();\n\n//   const create = async ()=>{\n//     await createIssue({ projectId:null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:0 });\n//     nav('/for-you');\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"create-issue\">\n//       <h2 id=\"create-issue\">Create Issue</h2>\n//       <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//       <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Task</option><option>Bug</option><option>Story</option></select></label></div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\n\n// // Mock API service\n// const issuesDB = [];\n// let idCounter = 1;\n\n// const createIssue = async (issue) => {\n//   const newIssue = { ...issue, id: idCounter++ };\n//   issuesDB.push(newIssue);\n//   return newIssue;\n// };\n\n// const getIssue = async (id) => issuesDB.find((i) => i.id === parseInt(id));\n// const updateIssue = async (id, updatedFields) => {\n//   const issue = issuesDB.find((i) => i.id === parseInt(id));\n//   if (issue) Object.assign(issue, updatedFields);\n//   return issue;\n// };\n// const getAllIssues = async () => issuesDB;\n\n// // Create Issue Component\n// function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const [priority, setPriority] = useState('P3');\n//   const [reporter, setReporter] = useState('');\n//   const [assignee, setAssignee] = useState('');\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const nav = useNavigate();\n\n//   const create = async () => {\n//     await createIssue({\n//       projectId: null,\n//       title,\n//       type,\n//       status: 'todo',\n//       priority,\n//       reporter,\n//       assignee,\n//       startDate,\n//       endDate,\n//       description: '',\n//     });\n//     nav('/issues');\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Create Issue</h2>\n//       <div className=\"form-row\">\n//         <label>Title<input value={title} onChange={e => setTitle(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Type\n//           <select value={type} onChange={e => setType(e.target.value)}>\n//             <option>Task</option>\n//             <option>Bug</option>\n//             <option>Story</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Priority\n//           <select value={priority} onChange={e => setPriority(e.target.value)}>\n//             <option>P1</option>\n//             <option>P2</option>\n//             <option>P3</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Reporter<input value={reporter} onChange={e => setReporter(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Assignee<input value={assignee} onChange={e => setAssignee(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Start Date<input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>End Date<input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} /></label>\n//       </div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// // Issue Details Component\n// function IssueDetails() {\n//   const { id } = useParams();\n//   const [issue, setIssue] = useState(null);\n//   const [desc, setDesc] = useState('');\n\n//   useEffect(() => {\n//     if (id) getIssue(id).then(i => { setIssue(i); setDesc(i?.description || ''); });\n//   }, [id]);\n\n//   if (!issue) return <div className=\"card\"><p>Issue not found</p></div>;\n\n//   const save = async () => {\n//     await updateIssue(issue.id, { description: desc });\n//     setIssue(await getIssue(issue.id));\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>{issue.title} <span className=\"small\">#{issue.id}</span></h2>\n//       <p>Type: {issue.type} • Status: {issue.status} • Priority: {issue.priority}</p>\n//       <p>Reporter: {issue.reporter} • Assignee: {issue.assignee}</p>\n//       <p>Start: {issue.startDate || '-'} • End: {issue.endDate || '-'}</p>\n//       <div className=\"form-row\">\n//         <label>Description<textarea value={desc} onChange={e => setDesc(e.target.value)} /></label>\n//       </div>\n//       <div style={{ display: 'flex', gap: 8 }}>\n//         <button className=\"btn\" onClick={save}>Save</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Issues List (like mini Jira Board)\n// function IssueBoard() {\n//   const [issues, setIssues] = useState([]);\n//   const nav = useNavigate();\n\n//   useEffect(() => { getAllIssues().then(setIssues); }, []);\n\n//   return (\n//     <div>\n//       <h2>Issues Board</h2>\n//       <button className=\"btn\" onClick={() => nav('/create')}>Create New Issue</button>\n//       <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, marginTop: 16 }}>\n//         {issues.map(issue => (\n//           <div key={issue.id} className=\"card\" style={{ width: 250, cursor: 'pointer' }} onClick={() => nav(`/details/${issue.id}`)}>\n//             <h3>{issue.title}</h3>\n//             <p>Type: {issue.type}</p>\n//             <p>Priority: {issue.priority}</p>\n//             <p>Status: {issue.status}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Main App\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/create\" element={<IssueCreate />} />\n//         <Route path=\"/details/:id\" element={<IssueDetails />} />\n//         <Route path=\"/issues\" element={<IssueBoard />} />\n//         <Route path=\"*\" element={<IssueBoard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/issues/IssueCreate.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import { createIssue } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const nav = useNavigate();\n\n//   const create = async ()=>{\n//     await createIssue({ projectId:null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:0 });\n//     nav('/for-you');\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"create-issue\">\n//       <h2 id=\"create-issue\">Create Issue</h2>\n//       <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//       <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Task</option><option>Bug</option><option>Story</option></select></label></div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\n\n// // Mock API service\n// const issuesDB = [];\n// let idCounter = 1;\n\n// const createIssue = async (issue) => {\n//   const newIssue = { ...issue, id: idCounter++ };\n//   issuesDB.push(newIssue);\n//   return newIssue;\n// };\n\n// const getIssue = async (id) => issuesDB.find((i) => i.id === parseInt(id));\n// const updateIssue = async (id, updatedFields) => {\n//   const issue = issuesDB.find((i) => i.id === parseInt(id));\n//   if (issue) Object.assign(issue, updatedFields);\n//   return issue;\n// };\n// const getAllIssues = async () => issuesDB;\n\n// // Create Issue Component\n// function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const [priority, setPriority] = useState('P3');\n//   const [reporter, setReporter] = useState('');\n//   const [assignee, setAssignee] = useState('');\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const nav = useNavigate();\n\n//   const create = async () => {\n//     await createIssue({\n//       projectId: null,\n//       title,\n//       type,\n//       status: 'todo',\n//       priority,\n//       reporter,\n//       assignee,\n//       startDate,\n//       endDate,\n//       description: '',\n//     });\n//     nav('/issues');\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Create Issue</h2>\n//       <div className=\"form-row\">\n//         <label>Title<input value={title} onChange={e => setTitle(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Type\n//           <select value={type} onChange={e => setType(e.target.value)}>\n//             <option>Task</option>\n//             <option>Bug</option>\n//             <option>Story</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Priority\n//           <select value={priority} onChange={e => setPriority(e.target.value)}>\n//             <option>P1</option>\n//             <option>P2</option>\n//             <option>P3</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Reporter<input value={reporter} onChange={e => setReporter(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Assignee<input value={assignee} onChange={e => setAssignee(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Start Date<input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>End Date<input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} /></label>\n//       </div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// // Issue Details Component\n// function IssueDetails() {\n//   const { id } = useParams();\n//   const [issue, setIssue] = useState(null);\n//   const [desc, setDesc] = useState('');\n\n//   useEffect(() => {\n//     if (id) getIssue(id).then(i => { setIssue(i); setDesc(i?.description || ''); });\n//   }, [id]);\n\n//   if (!issue) return <div className=\"card\"><p>Issue not found</p></div>;\n\n//   const save = async () => {\n//     await updateIssue(issue.id, { description: desc });\n//     setIssue(await getIssue(issue.id));\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>{issue.title} <span className=\"small\">#{issue.id}</span></h2>\n//       <p>Type: {issue.type} • Status: {issue.status} • Priority: {issue.priority}</p>\n//       <p>Reporter: {issue.reporter} • Assignee: {issue.assignee}</p>\n//       <p>Start: {issue.startDate || '-'} • End: {issue.endDate || '-'}</p>\n//       <div className=\"form-row\">\n//         <label>Description<textarea value={desc} onChange={e => setDesc(e.target.value)} /></label>\n//       </div>\n//       <div style={{ display: 'flex', gap: 8 }}>\n//         <button className=\"btn\" onClick={save}>Save</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Issues List (like mini Jira Board)\n// function IssueBoard() {\n//   const [issues, setIssues] = useState([]);\n//   const nav = useNavigate();\n\n//   useEffect(() => { getAllIssues().then(setIssues); }, []);\n\n//   return (\n//     <div>\n//       <h2>Issues Board</h2>\n//       <button className=\"btn\" onClick={() => nav('/create')}>Create New Issue</button>\n//       <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, marginTop: 16 }}>\n//         {issues.map(issue => (\n//           <div key={issue.id} className=\"card\" style={{ width: 250, cursor: 'pointer' }} onClick={() => nav(`/details/${issue.id}`)}>\n//             <h3>{issue.title}</h3>\n//             <p>Type: {issue.type}</p>\n//             <p>Priority: {issue.priority}</p>\n//             <p>Status: {issue.status}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Main App\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/create\" element={<IssueCreate />} />\n//         <Route path=\"/details/:id\" element={<IssueDetails />} />\n//         <Route path=\"/issues\" element={<IssueBoard />} />\n//         <Route path=\"*\" element={<IssueBoard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n"],"mappings":";AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}