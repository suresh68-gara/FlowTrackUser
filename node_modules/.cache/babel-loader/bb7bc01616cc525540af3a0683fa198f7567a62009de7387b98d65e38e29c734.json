{"ast":null,"code":"\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n// import gantt from \"dhtmlx-gantt\";\n// import { useProjects } from \"../../context/ProjectContext\";\n\n// const Timeline = () => {\n//   const ganttContainer = useRef(null);\n//   const { projects, addProject } = useProjects();\n//   const [newProjectText, setNewProjectText] = useState(\"\");\n\n//   useEffect(() => {\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n//     gantt.config.readonly = false;\n//     gantt.config.drag_move = true;\n//     gantt.config.drag_resize = true;\n//     gantt.config.drag_links = true;\n//     gantt.config.auto_scheduling = true;\n//     gantt.config.show_errors = false;\n//     gantt.config.highlight_critical_path = true;\n\n//     gantt.init(ganttContainer.current);\n\n//     gantt.clearAll();\n//     gantt.parse({\n//       data: projects,\n//       links: [\n//         { id: 1, source: 1, target: 2, type: \"0\" },\n//         { id: 2, source: 2, target: 3, type: \"0\" },\n//         { id: 3, source: 3, target: 4, type: \"0\" },\n//         { id: 4, source: 4, target: 5, type: \"0\" },\n//       ],\n//     });\n//   }, [projects]);\n\n//   const handleCreateProject = () => {\n//     if (!newProjectText.trim()) return;\n//     const newProject = {\n//       id: Date.now(),\n//       text: newProjectText,\n//       start_date: \"2025-12-10 00:00\",\n//       duration: 10,\n//       progress: 0,\n//     };\n//     addProject(newProject);\n//     setNewProjectText(\"\");\n//   };\n\n//   const containerStyle = {\n//     margin: \"30px auto\",\n//     maxWidth: \"1200px\",\n//     borderRadius: \"12px\",\n//     boxShadow: \"0 4px 20px rgba(0,0,0,0.1)\",\n//     overflow: \"hidden\",\n//     backgroundColor: \"#fff\",\n//     fontFamily: \"Segoe UI, sans-serif\",\n//   };\n\n//   const headerStyle = {\n//     padding: \"20px\",\n//     background: \"linear-gradient(to right, #4e54c8, #8f94fb)\",\n//     color: \"#fff\",\n//     fontSize: \"24px\",\n//     fontWeight: \"600\",\n//     textAlign: \"center\",\n//     letterSpacing: \"0.5px\",\n//   };\n\n//   const ganttStyle = {\n//     height: \"600px\",\n//     width: \"100%\",\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>ðŸ“… Project Timeline</div>\n//       <div style={{ padding: \"20px\", display: \"flex\", gap: \"10px\" }}>\n//         <input\n//           type=\"text\"\n//           value={newProjectText}\n//           onChange={(e) => setNewProjectText(e.target.value)}\n//           placeholder=\"New project name\"\n//           style={{ flex: 1, padding: \"8px\", fontSize: \"16px\" }}\n//         />\n//         <button onClick={handleCreateProject} style={{ padding: \"8px 16px\" }}>\n//           Add Project\n//         </button>\n//       </div>\n//       <div ref={ganttContainer} style={ganttStyle}></div>\n//     </div>\n//   );\n// };\n\n// export default Timeline;","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/timeline/Timeline.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n// import gantt from \"dhtmlx-gantt\";\n// import { useProjects } from \"../../context/ProjectContext\";\n\n// const Timeline = () => {\n//   const ganttContainer = useRef(null);\n//   const { projects, addProject } = useProjects();\n//   const [newProjectText, setNewProjectText] = useState(\"\");\n\n//   useEffect(() => {\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n//     gantt.config.readonly = false;\n//     gantt.config.drag_move = true;\n//     gantt.config.drag_resize = true;\n//     gantt.config.drag_links = true;\n//     gantt.config.auto_scheduling = true;\n//     gantt.config.show_errors = false;\n//     gantt.config.highlight_critical_path = true;\n\n//     gantt.init(ganttContainer.current);\n\n//     gantt.clearAll();\n//     gantt.parse({\n//       data: projects,\n//       links: [\n//         { id: 1, source: 1, target: 2, type: \"0\" },\n//         { id: 2, source: 2, target: 3, type: \"0\" },\n//         { id: 3, source: 3, target: 4, type: \"0\" },\n//         { id: 4, source: 4, target: 5, type: \"0\" },\n//       ],\n//     });\n//   }, [projects]);\n\n//   const handleCreateProject = () => {\n//     if (!newProjectText.trim()) return;\n//     const newProject = {\n//       id: Date.now(),\n//       text: newProjectText,\n//       start_date: \"2025-12-10 00:00\",\n//       duration: 10,\n//       progress: 0,\n//     };\n//     addProject(newProject);\n//     setNewProjectText(\"\");\n//   };\n\n//   const containerStyle = {\n//     margin: \"30px auto\",\n//     maxWidth: \"1200px\",\n//     borderRadius: \"12px\",\n//     boxShadow: \"0 4px 20px rgba(0,0,0,0.1)\",\n//     overflow: \"hidden\",\n//     backgroundColor: \"#fff\",\n//     fontFamily: \"Segoe UI, sans-serif\",\n//   };\n\n//   const headerStyle = {\n//     padding: \"20px\",\n//     background: \"linear-gradient(to right, #4e54c8, #8f94fb)\",\n//     color: \"#fff\",\n//     fontSize: \"24px\",\n//     fontWeight: \"600\",\n//     textAlign: \"center\",\n//     letterSpacing: \"0.5px\",\n//   };\n\n//   const ganttStyle = {\n//     height: \"600px\",\n//     width: \"100%\",\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>ðŸ“… Project Timeline</div>\n//       <div style={{ padding: \"20px\", display: \"flex\", gap: \"10px\" }}>\n//         <input\n//           type=\"text\"\n//           value={newProjectText}\n//           onChange={(e) => setNewProjectText(e.target.value)}\n//           placeholder=\"New project name\"\n//           style={{ flex: 1, padding: \"8px\", fontSize: \"16px\" }}\n//         />\n//         <button onClick={handleCreateProject} style={{ padding: \"8px 16px\" }}>\n//           Add Project\n//         </button>\n//       </div>\n//       <div ref={ganttContainer} style={ganttStyle}></div>\n//     </div>\n//   );\n// };\n\n// export default Timeline;\n\n\n"],"mappings":";;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}