{"ast":null,"code":"\n\n// for icon responsiveness ok \n\n// import React, { useState, useEffect } from 'react';\n// import { Routes, Route, NavLink, Navigate, useNavigate, useLocation } from 'react-router-dom';\n// import { AuthProvider, useAuth } from './context/AuthContext';\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\n\n// import Login from './components/auth/Login';\n// import Users from './components/users/Users';\n// import ProjectList from './components/projects/ProjectList';\n// import ProjectView from './components/projects/ProjectView';\n// import KanbanBoard from './components/boards/KanbanBoard';\n// import Backlog from './components/backlog/Backlog';\n// import IssueDetails from './components/issues/IssueDetails';\n// import IssueCreate from './components/issues/IssueCreate';\n// import Assets from './components/assets/Assets';\n// import Timeline from './components/timeline/Timeline';\n// import ForYou from './components/dashboard/ForYou';\n// import Notifications from './components/notifications/Notifications';\n// import { FiMenu, FiLogOut, FiUser, FiX, FiHome, FiList, FiGrid, FiBriefcase, FiClock } from 'react-icons/fi';\n\n// // PrivateRoute: Only allows authenticated users\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           <Route path=\"/\" element={<AuthLanding />} />\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\n//           <Route\n//             path=\"/*\"\n//             element={\n//               <PrivateRoute>\n//                 <Layout />\n//               </PrivateRoute>\n//             }\n//           />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function AuthLanding() {\n//   const { user } = useAuth();\n//   if (!user) {\n//     return <Navigate to=\"/login\" replace />;\n//   } else {\n//     return <Navigate to=\"/for-you\" replace />;\n//   }\n// }\n\n// function LoginRedirectAfterAuth() {\n//   const { user } = useAuth();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (user) {\n//       navigate('/for-you', { replace: true });\n//     }\n//   }, [user, navigate]);\n\n//   return <Login />;\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const { projects } = useProjects();\n//   const location = useLocation();\n\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   // Detect mobile screen size\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth < 768);\n//       if (window.innerWidth >= 768) {\n//         setMobileSidebarOpen(false);\n//       }\n//     };\n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []);\n\n//   useEffect(() => {\n//     if (isMobile) {\n//       setMobileSidebarOpen(false);\n//     }\n//   }, [location.pathname, isMobile]);\n\n//   useEffect(() => {\n//     if (projects.length > 0) {\n//       setCurrentProjectName(projects[0].name);\n//     } else {\n//       setCurrentProjectName(null);\n//     }\n//   }, [projects]);\n\n//   const toggleSidebar = () => {\n//     if (isMobile) {\n//       setMobileSidebarOpen((prev) => !prev);\n//     } else {\n//       setSidebarOpen((prev) => !prev);\n//     }\n//   };\n\n//   const closeMobileSidebar = () => {\n//     setMobileSidebarOpen(false);\n//   };\n\n//   const navItems = [\n//     { path: '/for-you', label: 'For You', icon: <FiHome /> },\n//     {\n//       path: currentProjectName ? `/kanban/${currentProjectName}` : '/boards',\n//       label: 'Boards',\n//       icon: <FiGrid />,\n//     },\n//     { path: '/assets', label: 'Assets', icon: <FiList /> },\n//     { path: '/timeline', label: 'Timeline', icon: <FiClock /> },\n//   ];\n\n//   const getPageTitle = () => {\n//     const path = location.pathname;\n//     if (path === '/for-you') return 'DASHBOARD';\n//     if (path.includes('/kanban')) return 'PROJECT BOARDS';\n//     if (path === '/assets') return 'ASSETS';\n//     if (path === '/timeline') return 'TIMELINE';\n//     return 'Flow Track';\n//   };\n\n//   // Responsive icon sizing helper\n//   const getIconSize = () => {\n//     // More prominent when sidebar open, bigger on mobile, compact when sidebar collapsed\n//     if (isMobile) {\n//       return mobileSidebarOpen ? 28 : 26;\n//     }\n//     if (sidebarOpen) {\n//       return 26;\n//     }\n//     return 22;\n//   };\n\n//   const styles = {\n//     appShell: {\n//       display: 'flex',\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       minHeight: '100vh',\n//       background: '#19a0f7',\n//       position: 'relative',\n//       overflow: 'hidden',\n//     },\n//     sidebar: {\n//       width: isMobile ? (mobileSidebarOpen ? '270px' : '60px') : sidebarOpen ? '270px' : '60px',\n//       transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n//       background: '#19a0f7',\n//       color: '#222',\n//       height: '100vh',\n//       padding: isMobile ? (mobileSidebarOpen ? '24px 16px' : '0') : sidebarOpen ? '24px 16px' : '0',\n//       boxSizing: 'border-box',\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'space-between',\n//       position: isMobile ? 'fixed' : 'relative',\n//       left: 0,\n//       top: 0,\n//       zIndex: 30,\n//       boxShadow: '0 0 40px rgba(0,0,0,0.1)',\n//       overflow: isMobile ? (mobileSidebarOpen ? 'auto' : 'hidden') : 'hidden',\n//       alignItems: sidebarOpen || mobileSidebarOpen ? 'stretch' : 'center',\n//     },\n//     logo: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       marginBottom: isMobile ? '24px' : '32px',\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'flex-start' : 'center',\n//     },\n//     logoText: {\n//       fontSize: isMobile ? '22px' : '26px',\n//       fontWeight: '700',\n//       color: '#fff',\n//       margin: '0 14px',\n//       letterSpacing: '.5px',\n//       display: sidebarOpen || mobileSidebarOpen ? 'inline' : 'none',\n//     },\n//     menuButton: {\n//       background: 'rgba(255,255,255,0.90)',\n//       border: 'none',\n//       color: '#19a0f7',\n//       cursor: 'pointer',\n//       padding: '12px',\n//       borderRadius: '12px',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       margin: '18px 0',\n//       width: '36px',\n//       height: '36px',\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n//       flexShrink: 0,\n//     },\n//     navItemsContainer: {\n//       display: 'flex',\n//       flexDirection: 'column',\n//       flexGrow: 1,\n//       justifyContent: 'center',\n//       marginTop: isMobile ? 0 : 0,\n//     },\n//     navLink: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'center' : 'center',\n//       width: '100%',\n//       padding: '12px 0',\n//       margin: '10px 0',\n//       background: '#fff',\n//       border: 'none',\n//       borderRadius: '14px',\n//       color: '#276ef1',\n//       fontWeight: '500',\n//       fontSize: isMobile ? '18px' : '17px',\n//       boxShadow: '0 2px 10px rgba(0,0,0,0.07)',\n//       textAlign: 'center',\n//       textDecoration: 'none',\n//       transition: 'background 0.2s, color 0.2s',\n//       outline: 'none',\n//       gap: sidebarOpen || mobileSidebarOpen ? '15px' : '0',\n//       flexShrink: 0,\n//     },\n//     navLinkActive: {\n//       background: '#e8efff',\n//       color: '#156fe6',\n//       boxShadow: '0 2px 14px rgba(29,160,247,0.15)',\n//     },\n//     navLinkHover: {\n//       background: '#e6f4ff',\n//       color: '#19a0f7',\n//     },\n//     userInfo: {\n//       padding: isMobile ? '16px' : '20px',\n//       background: '#fff',\n//       borderRadius: '17px',\n//       color: '#19a0f7',\n//       border: 'none',\n//       marginTop: '20px',\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.09)',\n//       textAlign: 'left',\n//       display: sidebarOpen || mobileSidebarOpen ? 'block' : 'none',\n//       flexShrink: 0,\n//     },\n//     btnLink: {\n//       background: '#19a0f7',\n//       color: '#fff',\n//       cursor: 'pointer',\n//       padding: isMobile ? '10px 16px' : '8px 16px',\n//       borderRadius: '10px',\n//       fontSize: isMobile ? '15px' : '14px',\n//       fontWeight: '600',\n//       marginTop: '14px',\n//       border: 'none',\n//       width: '100%',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       gap: '7px',\n//       boxShadow: '0 1px 6px rgba(29,160,247,0.08)',\n//     },\n//     btnLinkHover: {\n//       background: '#117cd4',\n//     },\n//     userIconOnly: {\n//       display: !sidebarOpen && !mobileSidebarOpen ? 'flex' : 'none',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       fontSize: isMobile ? '28px' : '26px',\n//       background: '#fff',\n//       borderRadius: '16px',\n//       marginTop: '20px',\n//       color: '#19a0f7',\n//       width: '20px',\n//       height: '20px',\n//       flexShrink: 0,\n//     },\n//     closeSidebarButton: {\n//       position: 'absolute',\n//       top: '16px',\n//       right: '16px',\n//       background: 'rgba(255,255,255,0.90)',\n//       color: '#19a0f7',\n//       border: 'none',\n//       borderRadius: '8px',\n//       width: '32px',\n//       height: '32px',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       cursor: 'pointer',\n//       zIndex: 35,\n//     },\n//     content: {\n//       flex: 1,\n//       padding: '0',\n//       height: '100vh',\n//       overflowY: 'auto',\n//       position: 'relative',\n//       zIndex: 10,\n//       marginLeft: isMobile ? '0' : sidebarOpen ? '0' : '0',\n//       width: isMobile ? '100%' : 'auto',\n//       background: '#19a0f7',\n//     },\n//     topbar: {\n//       display: 'flex',\n//       justifyContent: 'space-between',\n//       alignItems: 'center',\n//       background: '#19a0f7',\n//       padding: isMobile ? '16px 20px' : '24px 36px',\n//       borderBottom: 'none',\n//       boxShadow: '0 4px 20px rgba(0,0,0,0.02)',\n//       position: 'relative',\n//       zIndex: 15,\n//       flexWrap: isMobile ? 'wrap' : 'nowrap',\n//       gap: isMobile ? '12px' : '0',\n//     },\n//     pageTitle: {\n//       fontSize: isMobile ? '20px' : '28px',\n//       fontWeight: '700',\n//       color: '#fff',\n//       margin: '0',\n//       letterSpacing: '.7px',\n//     },\n//     mobileSidebarOverlay: {\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       backgroundColor: 'rgba(0, 0, 0, 0.30)',\n//       zIndex: 25,\n//       display: mobileSidebarOpen ? 'block' : 'none',\n//     },\n//   };\n\n//   const showFullUserInfo = isMobile ? mobileSidebarOpen : sidebarOpen;\n\n//   return (\n//     <div style={styles.appShell} role=\"application\" aria-label=\"Flow Track application\">\n//       {/* Mobile Sidebar Overlay */}\n//       {isMobile && <div style={styles.mobileSidebarOverlay} onClick={closeMobileSidebar} aria-hidden=\"true\" />}\n\n//       {/* Sidebar */}\n//       <aside style={styles.sidebar} aria-label=\"Sidebar navigation\">\n//         {/* Always show menu button */}\n//         <div style={styles.logo}>\n//           <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={26} />\n//           </button>\n//           <span style={styles.logoText}>FLOW TRACK</span>\n//         </div>\n\n//         {/* Navigation items */}\n//         <div style={styles.navItemsContainer}>\n//           <nav role=\"navigation\" aria-label=\"Main navigation\">\n//             {navItems.map(({ path, label, icon }) => (\n//               <NavLink\n//                 key={path}\n//                 to={path}\n//                 style={({ isActive }) => ({\n//                   ...styles.navLink,\n//                   ...(isActive ? styles.navLinkActive : {}),\n//                 })}\n//                 end\n//                 onClick={isMobile ? closeMobileSidebar : undefined}\n//                 aria-label={label}\n//                 title={!sidebarOpen && !mobileSidebarOpen ? label : undefined}\n//               >\n//                 <span\n//                   style={{\n//                     display: 'flex',\n//                     alignItems: 'center',\n//                     fontSize: getIconSize(),\n//                     transition: 'font-size 0.2s',\n//                     minWidth: getIconSize() + 6,\n//                     justifyContent: 'center',\n//                   }}\n//                 >\n//                   {\n//                     // clone element as needed for prop passing, otherwise just use icon with size prop\n//                     React.cloneElement(icon, { size: getIconSize() })\n//                   }\n//                 </span>\n//                 {(sidebarOpen || mobileSidebarOpen) && <span>{label}</span>}\n//               </NavLink>\n//             ))}\n//           </nav>\n//         </div>\n\n//         {/* User info or icon */}\n//         {user ? (\n//           showFullUserInfo ? (\n//             <div style={styles.userInfo} aria-label=\"User Profile\">\n//               <div style={{ fontWeight: '600', fontSize: isMobile ? '15px' : '16px', color: '#19a0f7' }}>{user.name}</div>\n//               <div style={{ color: '#222', fontSize: isMobile ? '13px' : '14px', marginTop: '4px' }}>{user.email}</div>\n//               <button style={styles.btnLink} onClick={logout}>\n//                 <FiLogOut /> {(isMobile && mobileSidebarOpen) || (!isMobile && sidebarOpen) ? 'Sign Out' : ''}\n//               </button>\n//             </div>\n//           ) : (\n//             <div style={styles.userIconOnly}>\n//               <FiUser style={{ fontSize: styles.userIconOnly.fontSize, color: '#19a0f7' }} />\n//             </div>\n//           )\n//         ) : (\n//           <NavLink to=\"/login\" style={styles.navLink}>\n//             Sign in\n//           </NavLink>\n//         )}\n\n//         {/* Close button for mobile */}\n//         {isMobile && mobileSidebarOpen && (\n//           <button style={styles.closeSidebarButton} onClick={closeMobileSidebar} aria-label=\"Close sidebar\">\n//             <FiX size={18} />\n//           </button>\n//         )}\n//       </aside>\n\n//       <div style={styles.content}>\n//         <header style={styles.topbar} role=\"banner\">\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//             {isMobile && (\n//               <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Open menu\">\n//                 <FiMenu size={18} />\n//               </button>\n//             )}\n//             <h1 style={styles.pageTitle}>{getPageTitle()}</h1>\n//           </div>\n//         </header>\n//         <main\n//           id=\"main\"\n//           tabIndex=\"-1\"\n//           role=\"main\"\n//           style={{\n//             padding: isMobile ? '20px 16px' : '32px',\n//             minHeight: 'calc(100vh - 80px)',\n//             maxWidth: '100%',\n//             overflowX: 'hidden',\n//             background: '#19a0f7',\n//           }}\n//         >\n//           <Routes>\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\n//             <Route path=\"/assets\" element={<Assets />} />\n//             <Route path=\"/timeline\" element={<Timeline />} />\n//             <Route path=\"/users\" element={<Users />} />\n//             <Route path=\"/notifications\" element={<Notifications />} />\n//             <Route path=\"/for-you\" element={<ForYou />} />\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n// for user icon size ok .  \n\n// import React, { useState, useEffect } from 'react';\n// import { Routes, Route, NavLink, Navigate, useNavigate, useLocation } from 'react-router-dom';\n// import { AuthProvider, useAuth } from './context/AuthContext';\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\n\n// import Login from './components/auth/Login';\n// import Users from './components/users/Users';\n// import ProjectList from './components/projects/ProjectList';\n// import ProjectView from './components/projects/ProjectView';\n// import KanbanBoard from './components/boards/KanbanBoard';\n// import Backlog from './components/backlog/Backlog';\n// import IssueDetails from './components/issues/IssueDetails';\n// import IssueCreate from './components/issues/IssueCreate';\n// import Assets from './components/assets/Assets';\n// import Timeline from './components/timeline/Timeline';\n// import ForYou from './components/dashboard/ForYou';\n// import Notifications from './components/notifications/Notifications';\n// import { FiMenu, FiLogOut, FiUser, FiX, FiHome, FiList, FiGrid, FiBriefcase, FiClock } from 'react-icons/fi';\n\n// // PrivateRoute: Only allows authenticated users\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           <Route path=\"/\" element={<AuthLanding />} />\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\n//           <Route\n//             path=\"/*\"\n//             element={\n//               <PrivateRoute>\n//                 <Layout />\n//               </PrivateRoute>\n//             }\n//           />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function AuthLanding() {\n//   const { user } = useAuth();\n//   if (!user) {\n//     return <Navigate to=\"/login\" replace />;\n//   } else {\n//     return <Navigate to=\"/for-you\" replace />;\n//   }\n// }\n\n// function LoginRedirectAfterAuth() {\n//   const { user } = useAuth();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (user) {\n//       navigate('/for-you', { replace: true });\n//     }\n//   }, [user, navigate]);\n\n//   return <Login />;\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const { projects } = useProjects();\n//   const location = useLocation();\n\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   // Detect mobile screen size\n//   useEffect(() => {\n//     const checkScreenSize = () => {\n//       setIsMobile(window.innerWidth < 768);\n//       if (window.innerWidth >= 768) {\n//         setMobileSidebarOpen(false);\n//       }\n//     };\n//     checkScreenSize();\n//     window.addEventListener('resize', checkScreenSize);\n//     return () => window.removeEventListener('resize', checkScreenSize);\n//   }, []);\n\n//   useEffect(() => {\n//     if (isMobile) {\n//       setMobileSidebarOpen(false);\n//     }\n//   }, [location.pathname, isMobile]);\n\n//   useEffect(() => {\n//     if (projects.length > 0) {\n//       setCurrentProjectName(projects[0].name);\n//     } else {\n//       setCurrentProjectName(null);\n//     }\n//   }, [projects]);\n\n//   const toggleSidebar = () => {\n//     if (isMobile) {\n//       setMobileSidebarOpen((prev) => !prev);\n//     } else {\n//       setSidebarOpen((prev) => !prev);\n//     }\n//   };\n\n//   const closeMobileSidebar = () => {\n//     setMobileSidebarOpen(false);\n//   };\n\n//   const navItems = [\n//     { path: '/for-you', label: 'For You', icon: <FiHome /> },\n//     {\n//       path: currentProjectName ? `/kanban/${currentProjectName}` : '/boards',\n//       label: 'Boards',\n//       icon: <FiGrid />,\n//     },\n//     { path: '/assets', label: 'Assets', icon: <FiList /> },\n//     { path: '/timeline', label: 'Timeline', icon: <FiClock /> },\n//   ];\n\n//   const getPageTitle = () => {\n//     const path = location.pathname;\n//     if (path === '/for-you') return 'DASHBOARD';\n//     if (path.includes('/kanban')) return 'PROJECT BOARDS';\n//     if (path === '/assets') return 'ASSETS';\n//     if (path === '/timeline') return 'TIMELINE';\n//     return 'Flow Track';\n//   };\n\n//   // Responsive icon sizing helper\n//   const getIconSize = () => {\n//     // More prominent when sidebar open, bigger on mobile, compact when sidebar collapsed\n//     if (isMobile) {\n//       return mobileSidebarOpen ? 28 : 26;\n//     }\n//     if (sidebarOpen) {\n//       return 26;\n//     }\n//     return 22;\n//   };\n\n//   const styles = {\n//     appShell: {\n//       display: 'flex',\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       minHeight: '100vh',\n//       background: '#19a0f7',\n//       position: 'relative',\n//       overflow: 'hidden',\n//     },\n//     sidebar: {\n//       width: isMobile ? (mobileSidebarOpen ? '270px' : '60px') : sidebarOpen ? '270px' : '60px',\n//       transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n//       background: '#19a0f7',\n//       color: '#222',\n//       height: '100vh',\n//       padding: isMobile ? (mobileSidebarOpen ? '24px 16px' : '0') : sidebarOpen ? '24px 16px' : '0',\n//       boxSizing: 'border-box',\n//       display: 'flex',\n//       flexDirection: 'column',\n//       justifyContent: 'space-between',\n//       position: isMobile ? 'fixed' : 'relative',\n//       left: 0,\n//       top: 0,\n//       zIndex: 30,\n//       boxShadow: '0 0 40px rgba(0,0,0,0.1)',\n//       overflow: isMobile ? (mobileSidebarOpen ? 'auto' : 'hidden') : 'hidden',\n//       alignItems: sidebarOpen || mobileSidebarOpen ? 'stretch' : 'center',\n//     },\n//     logo: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       marginBottom: isMobile ? '24px' : '32px',\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'flex-start' : 'center',\n//     },\n//     logoText: {\n//       fontSize: isMobile ? '22px' : '26px',\n//       fontWeight: '700',\n//       color: '#fff',\n//       margin: '0 14px',\n//       letterSpacing: '.5px',\n//       display: sidebarOpen || mobileSidebarOpen ? 'inline' : 'none',\n//     },\n//     menuButton: {\n//       background: 'rgba(255,255,255,0.90)',\n//       border: 'none',\n//       color: '#19a0f7',\n//       cursor: 'pointer',\n//       padding: '12px',\n//       borderRadius: '12px',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       margin: '18px 0',\n//       width: '36px',\n//       height: '36px',\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\n//       flexShrink: 0,\n//     },\n//     navItemsContainer: {\n//       display: 'flex',\n//       flexDirection: 'column',\n//       flexGrow: 1,\n//       justifyContent: 'center',\n//       marginTop: isMobile ? 0 : 0,\n//     },\n//     navLink: {\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'center' : 'center',\n//       width: '100%',\n//       padding: '12px 0',\n//       margin: '10px 0',\n//       background: '#fff',\n//       border: 'none',\n//       borderRadius: '14px',\n//       color: '#276ef1',\n//       fontWeight: '500',\n//       fontSize: isMobile ? '18px' : '17px',\n//       boxShadow: '0 2px 10px rgba(0,0,0,0.07)',\n//       textAlign: 'center',\n//       textDecoration: 'none',\n//       transition: 'background 0.2s, color 0.2s',\n//       outline: 'none',\n//       gap: sidebarOpen || mobileSidebarOpen ? '15px' : '0',\n//       flexShrink: 0,\n//     },\n//     navLinkActive: {\n//       background: '#e8efff',\n//       color: '#156fe6',\n//       boxShadow: '0 2px 14px rgba(29,160,247,0.15)',\n//     },\n//     navLinkHover: {\n//       background: '#e6f4ff',\n//       color: '#19a0f7',\n//     },\n//     userInfo: {\n//       padding: isMobile ? '16px' : '20px',\n//       background: '#fff',\n//       borderRadius: '17px',\n//       color: '#19a0f7',\n//       border: 'none',\n//       marginTop: '20px',\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.09)',\n//       textAlign: 'left',\n//       display: sidebarOpen || mobileSidebarOpen ? 'block' : 'none',\n//       flexShrink: 0,\n//     },\n//     btnLink: {\n//       background: '#19a0f7',\n//       color: '#fff',\n//       cursor: 'pointer',\n//       padding: isMobile ? '10px 16px' : '8px 16px',\n//       borderRadius: '10px',\n//       fontSize: isMobile ? '15px' : '14px',\n//       fontWeight: '600',\n//       marginTop: '14px',\n//       border: 'none',\n//       width: '100%',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       gap: '7px',\n//       boxShadow: '0 1px 6px rgba(29,160,247,0.08)',\n//     },\n//     btnLinkHover: {\n//       background: '#117cd4',\n//     },\n//     userIconOnly: {\n//       display: !sidebarOpen && !mobileSidebarOpen ? 'flex' : 'none',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       fontSize: isMobile ? '38px' : '38px', // CHANGED: larger icon size for compact sidebar\n//       background: '#fff',\n//       borderRadius: '16px',\n//       marginTop: '20px',\n//       color: '#19a0f7',\n//       width: '48px',\n//       height: '48px',\n//       flexShrink: 0,\n//     },\n//     closeSidebarButton: {\n//       position: 'absolute',\n//       top: '16px',\n//       right: '16px',\n//       background: 'rgba(255,255,255,0.90)',\n//       color: '#19a0f7',\n//       border: 'none',\n//       borderRadius: '8px',\n//       width: '32px',\n//       height: '32px',\n//       display: 'flex',\n//       alignItems: 'center',\n//       justifyContent: 'center',\n//       cursor: 'pointer',\n//       zIndex: 35,\n//     },\n//     content: {\n//       flex: 1,\n//       padding: '0',\n//       height: '100vh',\n//       overflowY: 'auto',\n//       position: 'relative',\n//       zIndex: 10,\n//       marginLeft: isMobile ? '0' : sidebarOpen ? '0' : '0',\n//       width: isMobile ? '100%' : 'auto',\n//       background: '#19a0f7',\n//     },\n//     topbar: {\n//       display: 'flex',\n//       justifyContent: 'space-between',\n//       alignItems: 'center',\n//       background: '#19a0f7',\n//       padding: isMobile ? '16px 20px' : '24px 36px',\n//       borderBottom: 'none',\n//       boxShadow: '0 4px 20px rgba(0,0,0,0.02)',\n//       position: 'relative',\n//       zIndex: 15,\n//       flexWrap: isMobile ? 'wrap' : 'nowrap',\n//       gap: isMobile ? '12px' : '0',\n//     },\n//     pageTitle: {\n//       fontSize: isMobile ? '20px' : '28px',\n//       fontWeight: '700',\n//       color: '#fff',\n//       margin: '0',\n//       letterSpacing: '.7px',\n//     },\n//     mobileSidebarOverlay: {\n//       position: 'fixed',\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       bottom: 0,\n//       backgroundColor: 'rgba(0, 0, 0, 0.30)',\n//       zIndex: 25,\n//       display: mobileSidebarOpen ? 'block' : 'none',\n//     },\n//   };\n\n//   const showFullUserInfo = isMobile ? mobileSidebarOpen : sidebarOpen;\n\n//   return (\n//     <div style={styles.appShell} role=\"application\" aria-label=\"Flow Track application\">\n//       {/* Mobile Sidebar Overlay */}\n//       {isMobile && <div style={styles.mobileSidebarOverlay} onClick={closeMobileSidebar} aria-hidden=\"true\" />}\n\n//       {/* Sidebar */}\n//       <aside style={styles.sidebar} aria-label=\"Sidebar navigation\">\n//         {/* Always show menu button */}\n//         <div style={styles.logo}>\n//           <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={26} />\n//           </button>\n//           <span style={styles.logoText}>FLOW TRACK</span>\n//         </div>\n\n//         {/* Navigation items */}\n//         <div style={styles.navItemsContainer}>\n//           <nav role=\"navigation\" aria-label=\"Main navigation\">\n//             {navItems.map(({ path, label, icon }) => (\n//               <NavLink\n//                 key={path}\n//                 to={path}\n//                 style={({ isActive }) => ({\n//                   ...styles.navLink,\n//                   ...(isActive ? styles.navLinkActive : {}),\n//                 })}\n//                 end\n//                 onClick={isMobile ? closeMobileSidebar : undefined}\n//                 aria-label={label}\n//                 title={!sidebarOpen && !mobileSidebarOpen ? label : undefined}\n//               >\n//                 <span\n//                   style={{\n//                     display: 'flex',\n//                     alignItems: 'center',\n//                     fontSize: getIconSize(),\n//                     transition: 'font-size 0.2s',\n//                     minWidth: getIconSize() + 6,\n//                     justifyContent: 'center',\n//                   }}\n//                 >\n//                   {React.cloneElement(icon, { size: getIconSize() })}\n//                 </span>\n//                 {(sidebarOpen || mobileSidebarOpen) && <span>{label}</span>}\n//               </NavLink>\n//             ))}\n//           </nav>\n//         </div>\n\n//         {/* User info or icon */}\n//         {user ? (\n//           showFullUserInfo ? (\n//             <div style={styles.userInfo} aria-label=\"User Profile\">\n//               <div style={{ fontWeight: '600', fontSize: isMobile ? '15px' : '16px', color: '#19a0f7' }}>{user.name}</div>\n//               <div style={{ color: '#222', fontSize: isMobile ? '13px' : '14px', marginTop: '4px' }}>{user.email}</div>\n//               <button style={styles.btnLink} onClick={logout}>\n//                 <FiLogOut /> {(isMobile && mobileSidebarOpen) || (!isMobile && sidebarOpen) ? 'Sign Out' : ''}\n//               </button>\n//             </div>\n//           ) : (\n//             <div style={styles.userIconOnly}>\n//               <FiUser size={38} style={{ color: '#19a0f7' }} /> {/* CHANGED: user icon larger when sidebar collapsed */}\n//             </div>\n//           )\n//         ) : (\n//           <NavLink to=\"/login\" style={styles.navLink}>\n//             Sign in\n//           </NavLink>\n//         )}\n\n//         {/* Close button for mobile */}\n//         {isMobile && mobileSidebarOpen && (\n//           <button style={styles.closeSidebarButton} onClick={closeMobileSidebar} aria-label=\"Close sidebar\">\n//             <FiX size={18} />\n//           </button>\n//         )}\n//       </aside>\n\n//       <div style={styles.content}>\n//         <header style={styles.topbar} role=\"banner\">\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\n//             {isMobile && (\n//               <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Open menu\">\n//                 <FiMenu size={18} />\n//               </button>\n//             )}\n//             <h1 style={styles.pageTitle}>{getPageTitle()}</h1>\n//           </div>\n//         </header>\n//         <main\n//           id=\"main\"\n//           tabIndex=\"-1\"\n//           role=\"main\"\n//           style={{\n//             padding: isMobile ? '20px 16px' : '32px',\n//             minHeight: 'calc(100vh - 80px)',\n//             maxWidth: '100%',\n//             overflowX: 'hidden',\n//             background: '#19a0f7',\n//           }}\n//         >\n//           <Routes>\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\n//             <Route path=\"/assets\" element={<Assets />} />\n//             <Route path=\"/timeline\" element={<Timeline />} />\n//             <Route path=\"/users\" element={<Users />} />\n//             <Route path=\"/notifications\" element={<Notifications />} />\n//             <Route path=\"/for-you\" element={<ForYou />} />\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n// for remove the gap boards","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/App.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// for icon responsiveness ok \r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Routes, Route, NavLink, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\n// import { AuthProvider, useAuth } from './context/AuthContext';\r\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\r\n\r\n// import Login from './components/auth/Login';\r\n// import Users from './components/users/Users';\r\n// import ProjectList from './components/projects/ProjectList';\r\n// import ProjectView from './components/projects/ProjectView';\r\n// import KanbanBoard from './components/boards/KanbanBoard';\r\n// import Backlog from './components/backlog/Backlog';\r\n// import IssueDetails from './components/issues/IssueDetails';\r\n// import IssueCreate from './components/issues/IssueCreate';\r\n// import Assets from './components/assets/Assets';\r\n// import Timeline from './components/timeline/Timeline';\r\n// import ForYou from './components/dashboard/ForYou';\r\n// import Notifications from './components/notifications/Notifications';\r\n// import { FiMenu, FiLogOut, FiUser, FiX, FiHome, FiList, FiGrid, FiBriefcase, FiClock } from 'react-icons/fi';\r\n\r\n// // PrivateRoute: Only allows authenticated users\r\n// function PrivateRoute({ children }) {\r\n//   const { user } = useAuth();\r\n//   return user ? children : <Navigate to=\"/login\" replace />;\r\n// }\r\n\r\n// export default function App() {\r\n//   return (\r\n//     <AuthProvider>\r\n//       <ProjectProvider>\r\n//         <Routes>\r\n//           <Route path=\"/\" element={<AuthLanding />} />\r\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\r\n//           <Route\r\n//             path=\"/*\"\r\n//             element={\r\n//               <PrivateRoute>\r\n//                 <Layout />\r\n//               </PrivateRoute>\r\n//             }\r\n//           />\r\n//         </Routes>\r\n//       </ProjectProvider>\r\n//     </AuthProvider>\r\n//   );\r\n// }\r\n\r\n// function AuthLanding() {\r\n//   const { user } = useAuth();\r\n//   if (!user) {\r\n//     return <Navigate to=\"/login\" replace />;\r\n//   } else {\r\n//     return <Navigate to=\"/for-you\" replace />;\r\n//   }\r\n// }\r\n\r\n// function LoginRedirectAfterAuth() {\r\n//   const { user } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       navigate('/for-you', { replace: true });\r\n//     }\r\n//   }, [user, navigate]);\r\n\r\n//   return <Login />;\r\n// }\r\n\r\n// function Layout() {\r\n//   const { user, logout } = useAuth();\r\n//   const { projects } = useProjects();\r\n//   const location = useLocation();\r\n\r\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\r\n//   const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\r\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\r\n//   const [isMobile, setIsMobile] = useState(false);\r\n\r\n//   // Detect mobile screen size\r\n//   useEffect(() => {\r\n//     const checkScreenSize = () => {\r\n//       setIsMobile(window.innerWidth < 768);\r\n//       if (window.innerWidth >= 768) {\r\n//         setMobileSidebarOpen(false);\r\n//       }\r\n//     };\r\n//     checkScreenSize();\r\n//     window.addEventListener('resize', checkScreenSize);\r\n//     return () => window.removeEventListener('resize', checkScreenSize);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (isMobile) {\r\n//       setMobileSidebarOpen(false);\r\n//     }\r\n//   }, [location.pathname, isMobile]);\r\n\r\n//   useEffect(() => {\r\n//     if (projects.length > 0) {\r\n//       setCurrentProjectName(projects[0].name);\r\n//     } else {\r\n//       setCurrentProjectName(null);\r\n//     }\r\n//   }, [projects]);\r\n\r\n//   const toggleSidebar = () => {\r\n//     if (isMobile) {\r\n//       setMobileSidebarOpen((prev) => !prev);\r\n//     } else {\r\n//       setSidebarOpen((prev) => !prev);\r\n//     }\r\n//   };\r\n\r\n//   const closeMobileSidebar = () => {\r\n//     setMobileSidebarOpen(false);\r\n//   };\r\n\r\n//   const navItems = [\r\n//     { path: '/for-you', label: 'For You', icon: <FiHome /> },\r\n//     {\r\n//       path: currentProjectName ? `/kanban/${currentProjectName}` : '/boards',\r\n//       label: 'Boards',\r\n//       icon: <FiGrid />,\r\n//     },\r\n//     { path: '/assets', label: 'Assets', icon: <FiList /> },\r\n//     { path: '/timeline', label: 'Timeline', icon: <FiClock /> },\r\n//   ];\r\n\r\n//   const getPageTitle = () => {\r\n//     const path = location.pathname;\r\n//     if (path === '/for-you') return 'DASHBOARD';\r\n//     if (path.includes('/kanban')) return 'PROJECT BOARDS';\r\n//     if (path === '/assets') return 'ASSETS';\r\n//     if (path === '/timeline') return 'TIMELINE';\r\n//     return 'Flow Track';\r\n//   };\r\n\r\n//   // Responsive icon sizing helper\r\n//   const getIconSize = () => {\r\n//     // More prominent when sidebar open, bigger on mobile, compact when sidebar collapsed\r\n//     if (isMobile) {\r\n//       return mobileSidebarOpen ? 28 : 26;\r\n//     }\r\n//     if (sidebarOpen) {\r\n//       return 26;\r\n//     }\r\n//     return 22;\r\n//   };\r\n\r\n//   const styles = {\r\n//     appShell: {\r\n//       display: 'flex',\r\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\r\n//       minHeight: '100vh',\r\n//       background: '#19a0f7',\r\n//       position: 'relative',\r\n//       overflow: 'hidden',\r\n//     },\r\n//     sidebar: {\r\n//       width: isMobile ? (mobileSidebarOpen ? '270px' : '60px') : sidebarOpen ? '270px' : '60px',\r\n//       transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n//       background: '#19a0f7',\r\n//       color: '#222',\r\n//       height: '100vh',\r\n//       padding: isMobile ? (mobileSidebarOpen ? '24px 16px' : '0') : sidebarOpen ? '24px 16px' : '0',\r\n//       boxSizing: 'border-box',\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       justifyContent: 'space-between',\r\n//       position: isMobile ? 'fixed' : 'relative',\r\n//       left: 0,\r\n//       top: 0,\r\n//       zIndex: 30,\r\n//       boxShadow: '0 0 40px rgba(0,0,0,0.1)',\r\n//       overflow: isMobile ? (mobileSidebarOpen ? 'auto' : 'hidden') : 'hidden',\r\n//       alignItems: sidebarOpen || mobileSidebarOpen ? 'stretch' : 'center',\r\n//     },\r\n//     logo: {\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       marginBottom: isMobile ? '24px' : '32px',\r\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'flex-start' : 'center',\r\n//     },\r\n//     logoText: {\r\n//       fontSize: isMobile ? '22px' : '26px',\r\n//       fontWeight: '700',\r\n//       color: '#fff',\r\n//       margin: '0 14px',\r\n//       letterSpacing: '.5px',\r\n//       display: sidebarOpen || mobileSidebarOpen ? 'inline' : 'none',\r\n//     },\r\n//     menuButton: {\r\n//       background: 'rgba(255,255,255,0.90)',\r\n//       border: 'none',\r\n//       color: '#19a0f7',\r\n//       cursor: 'pointer',\r\n//       padding: '12px',\r\n//       borderRadius: '12px',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       margin: '18px 0',\r\n//       width: '36px',\r\n//       height: '36px',\r\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n//       flexShrink: 0,\r\n//     },\r\n//     navItemsContainer: {\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       flexGrow: 1,\r\n//       justifyContent: 'center',\r\n//       marginTop: isMobile ? 0 : 0,\r\n//     },\r\n//     navLink: {\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'center' : 'center',\r\n//       width: '100%',\r\n//       padding: '12px 0',\r\n//       margin: '10px 0',\r\n//       background: '#fff',\r\n//       border: 'none',\r\n//       borderRadius: '14px',\r\n//       color: '#276ef1',\r\n//       fontWeight: '500',\r\n//       fontSize: isMobile ? '18px' : '17px',\r\n//       boxShadow: '0 2px 10px rgba(0,0,0,0.07)',\r\n//       textAlign: 'center',\r\n//       textDecoration: 'none',\r\n//       transition: 'background 0.2s, color 0.2s',\r\n//       outline: 'none',\r\n//       gap: sidebarOpen || mobileSidebarOpen ? '15px' : '0',\r\n//       flexShrink: 0,\r\n//     },\r\n//     navLinkActive: {\r\n//       background: '#e8efff',\r\n//       color: '#156fe6',\r\n//       boxShadow: '0 2px 14px rgba(29,160,247,0.15)',\r\n//     },\r\n//     navLinkHover: {\r\n//       background: '#e6f4ff',\r\n//       color: '#19a0f7',\r\n//     },\r\n//     userInfo: {\r\n//       padding: isMobile ? '16px' : '20px',\r\n//       background: '#fff',\r\n//       borderRadius: '17px',\r\n//       color: '#19a0f7',\r\n//       border: 'none',\r\n//       marginTop: '20px',\r\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.09)',\r\n//       textAlign: 'left',\r\n//       display: sidebarOpen || mobileSidebarOpen ? 'block' : 'none',\r\n//       flexShrink: 0,\r\n//     },\r\n//     btnLink: {\r\n//       background: '#19a0f7',\r\n//       color: '#fff',\r\n//       cursor: 'pointer',\r\n//       padding: isMobile ? '10px 16px' : '8px 16px',\r\n//       borderRadius: '10px',\r\n//       fontSize: isMobile ? '15px' : '14px',\r\n//       fontWeight: '600',\r\n//       marginTop: '14px',\r\n//       border: 'none',\r\n//       width: '100%',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       gap: '7px',\r\n//       boxShadow: '0 1px 6px rgba(29,160,247,0.08)',\r\n//     },\r\n//     btnLinkHover: {\r\n//       background: '#117cd4',\r\n//     },\r\n//     userIconOnly: {\r\n//       display: !sidebarOpen && !mobileSidebarOpen ? 'flex' : 'none',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       fontSize: isMobile ? '28px' : '26px',\r\n//       background: '#fff',\r\n//       borderRadius: '16px',\r\n//       marginTop: '20px',\r\n//       color: '#19a0f7',\r\n//       width: '20px',\r\n//       height: '20px',\r\n//       flexShrink: 0,\r\n//     },\r\n//     closeSidebarButton: {\r\n//       position: 'absolute',\r\n//       top: '16px',\r\n//       right: '16px',\r\n//       background: 'rgba(255,255,255,0.90)',\r\n//       color: '#19a0f7',\r\n//       border: 'none',\r\n//       borderRadius: '8px',\r\n//       width: '32px',\r\n//       height: '32px',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       cursor: 'pointer',\r\n//       zIndex: 35,\r\n//     },\r\n//     content: {\r\n//       flex: 1,\r\n//       padding: '0',\r\n//       height: '100vh',\r\n//       overflowY: 'auto',\r\n//       position: 'relative',\r\n//       zIndex: 10,\r\n//       marginLeft: isMobile ? '0' : sidebarOpen ? '0' : '0',\r\n//       width: isMobile ? '100%' : 'auto',\r\n//       background: '#19a0f7',\r\n//     },\r\n//     topbar: {\r\n//       display: 'flex',\r\n//       justifyContent: 'space-between',\r\n//       alignItems: 'center',\r\n//       background: '#19a0f7',\r\n//       padding: isMobile ? '16px 20px' : '24px 36px',\r\n//       borderBottom: 'none',\r\n//       boxShadow: '0 4px 20px rgba(0,0,0,0.02)',\r\n//       position: 'relative',\r\n//       zIndex: 15,\r\n//       flexWrap: isMobile ? 'wrap' : 'nowrap',\r\n//       gap: isMobile ? '12px' : '0',\r\n//     },\r\n//     pageTitle: {\r\n//       fontSize: isMobile ? '20px' : '28px',\r\n//       fontWeight: '700',\r\n//       color: '#fff',\r\n//       margin: '0',\r\n//       letterSpacing: '.7px',\r\n//     },\r\n//     mobileSidebarOverlay: {\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       backgroundColor: 'rgba(0, 0, 0, 0.30)',\r\n//       zIndex: 25,\r\n//       display: mobileSidebarOpen ? 'block' : 'none',\r\n//     },\r\n//   };\r\n\r\n//   const showFullUserInfo = isMobile ? mobileSidebarOpen : sidebarOpen;\r\n\r\n//   return (\r\n//     <div style={styles.appShell} role=\"application\" aria-label=\"Flow Track application\">\r\n//       {/* Mobile Sidebar Overlay */}\r\n//       {isMobile && <div style={styles.mobileSidebarOverlay} onClick={closeMobileSidebar} aria-hidden=\"true\" />}\r\n\r\n//       {/* Sidebar */}\r\n//       <aside style={styles.sidebar} aria-label=\"Sidebar navigation\">\r\n//         {/* Always show menu button */}\r\n//         <div style={styles.logo}>\r\n//           <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\r\n//             <FiMenu size={26} />\r\n//           </button>\r\n//           <span style={styles.logoText}>FLOW TRACK</span>\r\n//         </div>\r\n\r\n//         {/* Navigation items */}\r\n//         <div style={styles.navItemsContainer}>\r\n//           <nav role=\"navigation\" aria-label=\"Main navigation\">\r\n//             {navItems.map(({ path, label, icon }) => (\r\n//               <NavLink\r\n//                 key={path}\r\n//                 to={path}\r\n//                 style={({ isActive }) => ({\r\n//                   ...styles.navLink,\r\n//                   ...(isActive ? styles.navLinkActive : {}),\r\n//                 })}\r\n//                 end\r\n//                 onClick={isMobile ? closeMobileSidebar : undefined}\r\n//                 aria-label={label}\r\n//                 title={!sidebarOpen && !mobileSidebarOpen ? label : undefined}\r\n//               >\r\n//                 <span\r\n//                   style={{\r\n//                     display: 'flex',\r\n//                     alignItems: 'center',\r\n//                     fontSize: getIconSize(),\r\n//                     transition: 'font-size 0.2s',\r\n//                     minWidth: getIconSize() + 6,\r\n//                     justifyContent: 'center',\r\n//                   }}\r\n//                 >\r\n//                   {\r\n//                     // clone element as needed for prop passing, otherwise just use icon with size prop\r\n//                     React.cloneElement(icon, { size: getIconSize() })\r\n//                   }\r\n//                 </span>\r\n//                 {(sidebarOpen || mobileSidebarOpen) && <span>{label}</span>}\r\n//               </NavLink>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n\r\n//         {/* User info or icon */}\r\n//         {user ? (\r\n//           showFullUserInfo ? (\r\n//             <div style={styles.userInfo} aria-label=\"User Profile\">\r\n//               <div style={{ fontWeight: '600', fontSize: isMobile ? '15px' : '16px', color: '#19a0f7' }}>{user.name}</div>\r\n//               <div style={{ color: '#222', fontSize: isMobile ? '13px' : '14px', marginTop: '4px' }}>{user.email}</div>\r\n//               <button style={styles.btnLink} onClick={logout}>\r\n//                 <FiLogOut /> {(isMobile && mobileSidebarOpen) || (!isMobile && sidebarOpen) ? 'Sign Out' : ''}\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <div style={styles.userIconOnly}>\r\n//               <FiUser style={{ fontSize: styles.userIconOnly.fontSize, color: '#19a0f7' }} />\r\n//             </div>\r\n//           )\r\n//         ) : (\r\n//           <NavLink to=\"/login\" style={styles.navLink}>\r\n//             Sign in\r\n//           </NavLink>\r\n//         )}\r\n\r\n//         {/* Close button for mobile */}\r\n//         {isMobile && mobileSidebarOpen && (\r\n//           <button style={styles.closeSidebarButton} onClick={closeMobileSidebar} aria-label=\"Close sidebar\">\r\n//             <FiX size={18} />\r\n//           </button>\r\n//         )}\r\n//       </aside>\r\n\r\n//       <div style={styles.content}>\r\n//         <header style={styles.topbar} role=\"banner\">\r\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n//             {isMobile && (\r\n//               <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Open menu\">\r\n//                 <FiMenu size={18} />\r\n//               </button>\r\n//             )}\r\n//             <h1 style={styles.pageTitle}>{getPageTitle()}</h1>\r\n//           </div>\r\n//         </header>\r\n//         <main\r\n//           id=\"main\"\r\n//           tabIndex=\"-1\"\r\n//           role=\"main\"\r\n//           style={{\r\n//             padding: isMobile ? '20px 16px' : '32px',\r\n//             minHeight: 'calc(100vh - 80px)',\r\n//             maxWidth: '100%',\r\n//             overflowX: 'hidden',\r\n//             background: '#19a0f7',\r\n//           }}\r\n//         >\r\n//           <Routes>\r\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\r\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\r\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\r\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\r\n//             <Route path=\"/assets\" element={<Assets />} />\r\n//             <Route path=\"/timeline\" element={<Timeline />} />\r\n//             <Route path=\"/users\" element={<Users />} />\r\n//             <Route path=\"/notifications\" element={<Notifications />} />\r\n//             <Route path=\"/for-you\" element={<ForYou />} />\r\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for user icon size ok .  \r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import { Routes, Route, NavLink, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\n// import { AuthProvider, useAuth } from './context/AuthContext';\r\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\r\n\r\n// import Login from './components/auth/Login';\r\n// import Users from './components/users/Users';\r\n// import ProjectList from './components/projects/ProjectList';\r\n// import ProjectView from './components/projects/ProjectView';\r\n// import KanbanBoard from './components/boards/KanbanBoard';\r\n// import Backlog from './components/backlog/Backlog';\r\n// import IssueDetails from './components/issues/IssueDetails';\r\n// import IssueCreate from './components/issues/IssueCreate';\r\n// import Assets from './components/assets/Assets';\r\n// import Timeline from './components/timeline/Timeline';\r\n// import ForYou from './components/dashboard/ForYou';\r\n// import Notifications from './components/notifications/Notifications';\r\n// import { FiMenu, FiLogOut, FiUser, FiX, FiHome, FiList, FiGrid, FiBriefcase, FiClock } from 'react-icons/fi';\r\n\r\n// // PrivateRoute: Only allows authenticated users\r\n// function PrivateRoute({ children }) {\r\n//   const { user } = useAuth();\r\n//   return user ? children : <Navigate to=\"/login\" replace />;\r\n// }\r\n\r\n// export default function App() {\r\n//   return (\r\n//     <AuthProvider>\r\n//       <ProjectProvider>\r\n//         <Routes>\r\n//           <Route path=\"/\" element={<AuthLanding />} />\r\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\r\n//           <Route\r\n//             path=\"/*\"\r\n//             element={\r\n//               <PrivateRoute>\r\n//                 <Layout />\r\n//               </PrivateRoute>\r\n//             }\r\n//           />\r\n//         </Routes>\r\n//       </ProjectProvider>\r\n//     </AuthProvider>\r\n//   );\r\n// }\r\n\r\n// function AuthLanding() {\r\n//   const { user } = useAuth();\r\n//   if (!user) {\r\n//     return <Navigate to=\"/login\" replace />;\r\n//   } else {\r\n//     return <Navigate to=\"/for-you\" replace />;\r\n//   }\r\n// }\r\n\r\n// function LoginRedirectAfterAuth() {\r\n//   const { user } = useAuth();\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     if (user) {\r\n//       navigate('/for-you', { replace: true });\r\n//     }\r\n//   }, [user, navigate]);\r\n\r\n//   return <Login />;\r\n// }\r\n\r\n// function Layout() {\r\n//   const { user, logout } = useAuth();\r\n//   const { projects } = useProjects();\r\n//   const location = useLocation();\r\n\r\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\r\n//   const [mobileSidebarOpen, setMobileSidebarOpen] = useState(false);\r\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\r\n//   const [isMobile, setIsMobile] = useState(false);\r\n\r\n//   // Detect mobile screen size\r\n//   useEffect(() => {\r\n//     const checkScreenSize = () => {\r\n//       setIsMobile(window.innerWidth < 768);\r\n//       if (window.innerWidth >= 768) {\r\n//         setMobileSidebarOpen(false);\r\n//       }\r\n//     };\r\n//     checkScreenSize();\r\n//     window.addEventListener('resize', checkScreenSize);\r\n//     return () => window.removeEventListener('resize', checkScreenSize);\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (isMobile) {\r\n//       setMobileSidebarOpen(false);\r\n//     }\r\n//   }, [location.pathname, isMobile]);\r\n\r\n//   useEffect(() => {\r\n//     if (projects.length > 0) {\r\n//       setCurrentProjectName(projects[0].name);\r\n//     } else {\r\n//       setCurrentProjectName(null);\r\n//     }\r\n//   }, [projects]);\r\n\r\n//   const toggleSidebar = () => {\r\n//     if (isMobile) {\r\n//       setMobileSidebarOpen((prev) => !prev);\r\n//     } else {\r\n//       setSidebarOpen((prev) => !prev);\r\n//     }\r\n//   };\r\n\r\n//   const closeMobileSidebar = () => {\r\n//     setMobileSidebarOpen(false);\r\n//   };\r\n\r\n//   const navItems = [\r\n//     { path: '/for-you', label: 'For You', icon: <FiHome /> },\r\n//     {\r\n//       path: currentProjectName ? `/kanban/${currentProjectName}` : '/boards',\r\n//       label: 'Boards',\r\n//       icon: <FiGrid />,\r\n//     },\r\n//     { path: '/assets', label: 'Assets', icon: <FiList /> },\r\n//     { path: '/timeline', label: 'Timeline', icon: <FiClock /> },\r\n//   ];\r\n\r\n//   const getPageTitle = () => {\r\n//     const path = location.pathname;\r\n//     if (path === '/for-you') return 'DASHBOARD';\r\n//     if (path.includes('/kanban')) return 'PROJECT BOARDS';\r\n//     if (path === '/assets') return 'ASSETS';\r\n//     if (path === '/timeline') return 'TIMELINE';\r\n//     return 'Flow Track';\r\n//   };\r\n\r\n//   // Responsive icon sizing helper\r\n//   const getIconSize = () => {\r\n//     // More prominent when sidebar open, bigger on mobile, compact when sidebar collapsed\r\n//     if (isMobile) {\r\n//       return mobileSidebarOpen ? 28 : 26;\r\n//     }\r\n//     if (sidebarOpen) {\r\n//       return 26;\r\n//     }\r\n//     return 22;\r\n//   };\r\n\r\n//   const styles = {\r\n//     appShell: {\r\n//       display: 'flex',\r\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\r\n//       minHeight: '100vh',\r\n//       background: '#19a0f7',\r\n//       position: 'relative',\r\n//       overflow: 'hidden',\r\n//     },\r\n//     sidebar: {\r\n//       width: isMobile ? (mobileSidebarOpen ? '270px' : '60px') : sidebarOpen ? '270px' : '60px',\r\n//       transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n//       background: '#19a0f7',\r\n//       color: '#222',\r\n//       height: '100vh',\r\n//       padding: isMobile ? (mobileSidebarOpen ? '24px 16px' : '0') : sidebarOpen ? '24px 16px' : '0',\r\n//       boxSizing: 'border-box',\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       justifyContent: 'space-between',\r\n//       position: isMobile ? 'fixed' : 'relative',\r\n//       left: 0,\r\n//       top: 0,\r\n//       zIndex: 30,\r\n//       boxShadow: '0 0 40px rgba(0,0,0,0.1)',\r\n//       overflow: isMobile ? (mobileSidebarOpen ? 'auto' : 'hidden') : 'hidden',\r\n//       alignItems: sidebarOpen || mobileSidebarOpen ? 'stretch' : 'center',\r\n//     },\r\n//     logo: {\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       marginBottom: isMobile ? '24px' : '32px',\r\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'flex-start' : 'center',\r\n//     },\r\n//     logoText: {\r\n//       fontSize: isMobile ? '22px' : '26px',\r\n//       fontWeight: '700',\r\n//       color: '#fff',\r\n//       margin: '0 14px',\r\n//       letterSpacing: '.5px',\r\n//       display: sidebarOpen || mobileSidebarOpen ? 'inline' : 'none',\r\n//     },\r\n//     menuButton: {\r\n//       background: 'rgba(255,255,255,0.90)',\r\n//       border: 'none',\r\n//       color: '#19a0f7',\r\n//       cursor: 'pointer',\r\n//       padding: '12px',\r\n//       borderRadius: '12px',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       margin: '18px 0',\r\n//       width: '36px',\r\n//       height: '36px',\r\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.08)',\r\n//       flexShrink: 0,\r\n//     },\r\n//     navItemsContainer: {\r\n//       display: 'flex',\r\n//       flexDirection: 'column',\r\n//       flexGrow: 1,\r\n//       justifyContent: 'center',\r\n//       marginTop: isMobile ? 0 : 0,\r\n//     },\r\n//     navLink: {\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: sidebarOpen || mobileSidebarOpen ? 'center' : 'center',\r\n//       width: '100%',\r\n//       padding: '12px 0',\r\n//       margin: '10px 0',\r\n//       background: '#fff',\r\n//       border: 'none',\r\n//       borderRadius: '14px',\r\n//       color: '#276ef1',\r\n//       fontWeight: '500',\r\n//       fontSize: isMobile ? '18px' : '17px',\r\n//       boxShadow: '0 2px 10px rgba(0,0,0,0.07)',\r\n//       textAlign: 'center',\r\n//       textDecoration: 'none',\r\n//       transition: 'background 0.2s, color 0.2s',\r\n//       outline: 'none',\r\n//       gap: sidebarOpen || mobileSidebarOpen ? '15px' : '0',\r\n//       flexShrink: 0,\r\n//     },\r\n//     navLinkActive: {\r\n//       background: '#e8efff',\r\n//       color: '#156fe6',\r\n//       boxShadow: '0 2px 14px rgba(29,160,247,0.15)',\r\n//     },\r\n//     navLinkHover: {\r\n//       background: '#e6f4ff',\r\n//       color: '#19a0f7',\r\n//     },\r\n//     userInfo: {\r\n//       padding: isMobile ? '16px' : '20px',\r\n//       background: '#fff',\r\n//       borderRadius: '17px',\r\n//       color: '#19a0f7',\r\n//       border: 'none',\r\n//       marginTop: '20px',\r\n//       boxShadow: '0 2px 8px rgba(0,0,0,0.09)',\r\n//       textAlign: 'left',\r\n//       display: sidebarOpen || mobileSidebarOpen ? 'block' : 'none',\r\n//       flexShrink: 0,\r\n//     },\r\n//     btnLink: {\r\n//       background: '#19a0f7',\r\n//       color: '#fff',\r\n//       cursor: 'pointer',\r\n//       padding: isMobile ? '10px 16px' : '8px 16px',\r\n//       borderRadius: '10px',\r\n//       fontSize: isMobile ? '15px' : '14px',\r\n//       fontWeight: '600',\r\n//       marginTop: '14px',\r\n//       border: 'none',\r\n//       width: '100%',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       gap: '7px',\r\n//       boxShadow: '0 1px 6px rgba(29,160,247,0.08)',\r\n//     },\r\n//     btnLinkHover: {\r\n//       background: '#117cd4',\r\n//     },\r\n//     userIconOnly: {\r\n//       display: !sidebarOpen && !mobileSidebarOpen ? 'flex' : 'none',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       fontSize: isMobile ? '38px' : '38px', // CHANGED: larger icon size for compact sidebar\r\n//       background: '#fff',\r\n//       borderRadius: '16px',\r\n//       marginTop: '20px',\r\n//       color: '#19a0f7',\r\n//       width: '48px',\r\n//       height: '48px',\r\n//       flexShrink: 0,\r\n//     },\r\n//     closeSidebarButton: {\r\n//       position: 'absolute',\r\n//       top: '16px',\r\n//       right: '16px',\r\n//       background: 'rgba(255,255,255,0.90)',\r\n//       color: '#19a0f7',\r\n//       border: 'none',\r\n//       borderRadius: '8px',\r\n//       width: '32px',\r\n//       height: '32px',\r\n//       display: 'flex',\r\n//       alignItems: 'center',\r\n//       justifyContent: 'center',\r\n//       cursor: 'pointer',\r\n//       zIndex: 35,\r\n//     },\r\n//     content: {\r\n//       flex: 1,\r\n//       padding: '0',\r\n//       height: '100vh',\r\n//       overflowY: 'auto',\r\n//       position: 'relative',\r\n//       zIndex: 10,\r\n//       marginLeft: isMobile ? '0' : sidebarOpen ? '0' : '0',\r\n//       width: isMobile ? '100%' : 'auto',\r\n//       background: '#19a0f7',\r\n//     },\r\n//     topbar: {\r\n//       display: 'flex',\r\n//       justifyContent: 'space-between',\r\n//       alignItems: 'center',\r\n//       background: '#19a0f7',\r\n//       padding: isMobile ? '16px 20px' : '24px 36px',\r\n//       borderBottom: 'none',\r\n//       boxShadow: '0 4px 20px rgba(0,0,0,0.02)',\r\n//       position: 'relative',\r\n//       zIndex: 15,\r\n//       flexWrap: isMobile ? 'wrap' : 'nowrap',\r\n//       gap: isMobile ? '12px' : '0',\r\n//     },\r\n//     pageTitle: {\r\n//       fontSize: isMobile ? '20px' : '28px',\r\n//       fontWeight: '700',\r\n//       color: '#fff',\r\n//       margin: '0',\r\n//       letterSpacing: '.7px',\r\n//     },\r\n//     mobileSidebarOverlay: {\r\n//       position: 'fixed',\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       bottom: 0,\r\n//       backgroundColor: 'rgba(0, 0, 0, 0.30)',\r\n//       zIndex: 25,\r\n//       display: mobileSidebarOpen ? 'block' : 'none',\r\n//     },\r\n//   };\r\n\r\n//   const showFullUserInfo = isMobile ? mobileSidebarOpen : sidebarOpen;\r\n\r\n//   return (\r\n//     <div style={styles.appShell} role=\"application\" aria-label=\"Flow Track application\">\r\n//       {/* Mobile Sidebar Overlay */}\r\n//       {isMobile && <div style={styles.mobileSidebarOverlay} onClick={closeMobileSidebar} aria-hidden=\"true\" />}\r\n\r\n//       {/* Sidebar */}\r\n//       <aside style={styles.sidebar} aria-label=\"Sidebar navigation\">\r\n//         {/* Always show menu button */}\r\n//         <div style={styles.logo}>\r\n//           <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\r\n//             <FiMenu size={26} />\r\n//           </button>\r\n//           <span style={styles.logoText}>FLOW TRACK</span>\r\n//         </div>\r\n\r\n//         {/* Navigation items */}\r\n//         <div style={styles.navItemsContainer}>\r\n//           <nav role=\"navigation\" aria-label=\"Main navigation\">\r\n//             {navItems.map(({ path, label, icon }) => (\r\n//               <NavLink\r\n//                 key={path}\r\n//                 to={path}\r\n//                 style={({ isActive }) => ({\r\n//                   ...styles.navLink,\r\n//                   ...(isActive ? styles.navLinkActive : {}),\r\n//                 })}\r\n//                 end\r\n//                 onClick={isMobile ? closeMobileSidebar : undefined}\r\n//                 aria-label={label}\r\n//                 title={!sidebarOpen && !mobileSidebarOpen ? label : undefined}\r\n//               >\r\n//                 <span\r\n//                   style={{\r\n//                     display: 'flex',\r\n//                     alignItems: 'center',\r\n//                     fontSize: getIconSize(),\r\n//                     transition: 'font-size 0.2s',\r\n//                     minWidth: getIconSize() + 6,\r\n//                     justifyContent: 'center',\r\n//                   }}\r\n//                 >\r\n//                   {React.cloneElement(icon, { size: getIconSize() })}\r\n//                 </span>\r\n//                 {(sidebarOpen || mobileSidebarOpen) && <span>{label}</span>}\r\n//               </NavLink>\r\n//             ))}\r\n//           </nav>\r\n//         </div>\r\n\r\n//         {/* User info or icon */}\r\n//         {user ? (\r\n//           showFullUserInfo ? (\r\n//             <div style={styles.userInfo} aria-label=\"User Profile\">\r\n//               <div style={{ fontWeight: '600', fontSize: isMobile ? '15px' : '16px', color: '#19a0f7' }}>{user.name}</div>\r\n//               <div style={{ color: '#222', fontSize: isMobile ? '13px' : '14px', marginTop: '4px' }}>{user.email}</div>\r\n//               <button style={styles.btnLink} onClick={logout}>\r\n//                 <FiLogOut /> {(isMobile && mobileSidebarOpen) || (!isMobile && sidebarOpen) ? 'Sign Out' : ''}\r\n//               </button>\r\n//             </div>\r\n//           ) : (\r\n//             <div style={styles.userIconOnly}>\r\n//               <FiUser size={38} style={{ color: '#19a0f7' }} /> {/* CHANGED: user icon larger when sidebar collapsed */}\r\n//             </div>\r\n//           )\r\n//         ) : (\r\n//           <NavLink to=\"/login\" style={styles.navLink}>\r\n//             Sign in\r\n//           </NavLink>\r\n//         )}\r\n\r\n//         {/* Close button for mobile */}\r\n//         {isMobile && mobileSidebarOpen && (\r\n//           <button style={styles.closeSidebarButton} onClick={closeMobileSidebar} aria-label=\"Close sidebar\">\r\n//             <FiX size={18} />\r\n//           </button>\r\n//         )}\r\n//       </aside>\r\n\r\n//       <div style={styles.content}>\r\n//         <header style={styles.topbar} role=\"banner\">\r\n//           <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>\r\n//             {isMobile && (\r\n//               <button style={styles.menuButton} onClick={toggleSidebar} aria-label=\"Open menu\">\r\n//                 <FiMenu size={18} />\r\n//               </button>\r\n//             )}\r\n//             <h1 style={styles.pageTitle}>{getPageTitle()}</h1>\r\n//           </div>\r\n//         </header>\r\n//         <main\r\n//           id=\"main\"\r\n//           tabIndex=\"-1\"\r\n//           role=\"main\"\r\n//           style={{\r\n//             padding: isMobile ? '20px 16px' : '32px',\r\n//             minHeight: 'calc(100vh - 80px)',\r\n//             maxWidth: '100%',\r\n//             overflowX: 'hidden',\r\n//             background: '#19a0f7',\r\n//           }}\r\n//         >\r\n//           <Routes>\r\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\r\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\r\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\r\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\r\n//             <Route path=\"/assets\" element={<Assets />} />\r\n//             <Route path=\"/timeline\" element={<Timeline />} />\r\n//             <Route path=\"/users\" element={<Users />} />\r\n//             <Route path=\"/notifications\" element={<Notifications />} />\r\n//             <Route path=\"/for-you\" element={<ForYou />} />\r\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for remove the gap boards \r\n\r\n\r\n"],"mappingsgeA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}