{"ast":null,"code":"\n// // // import React from 'react';\n// // // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // // import { AuthProvider, useAuth } from './context/AuthContext';\n\n// // // import Login from './components/auth/Login';\n// // // import Users from './components/users/Users';\n// // // import ProjectList from './components/projects/ProjectList';\n// // // import ProjectView from './components/projects/ProjectView';\n// // // import KanbanBoard from './components/boards/KanbanBoard';\n// // // import Backlog from './components/backlog/Backlog';\n// // // import IssueDetails from './components/issues/IssueDetails';\n// // // import IssueCreate from './components/issues/IssueCreate';\n// // // import Assets from './components/assets/Assets';\n// // // import Timeline from './components/timeline/Timeline';\n// // // import ForYou from './components/dashboard/ForYou';\n// // // import Notifications from './components/notifications/Notifications';\n// // // import { FiMenu } from 'react-icons/fi';\n\n// // // function PrivateRoute({ children }) {\n// // //   const { user } = useAuth();\n// // //   return user ? children : <Navigate to=\"/login\" replace />;\n// // // }\n\n// // // export default function App() {\n// // //   return (\n// // //     <AuthProvider>\n// // //       <Layout />\n// // //     </AuthProvider>\n// // //   );\n// // // }\n\n// // // function Layout() {\n// // //   const { user, logout } = useAuth();\n\n// // //   return (\n// // //     <div className=\"app-shell\" role=\"application\" aria-label=\"Ticketing application\">\n// // //       <aside className=\"sidebar\" aria-label=\"Sidebar navigation\">\n// // //         <div className=\"sidebar-brand\" aria-hidden=\"true\">\n// // //           <FiMenu size={20} /> <span>Ticketing</span>\n// // //         </div>\n// // //         <nav className=\"sidebar-nav\" role=\"navigation\" aria-label=\"Main\">\n// // //           <Link to=\"/for-you\" className=\"nav-link\">For You</Link>\n// // //           <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\n// // //           <Link to=\"/kanban\" className=\"nav-link\">Boards</Link>\n// // //           <Link to=\"/backlog\" className=\"nav-link\">Backlog</Link>\n// // //           <Link to=\"/issues/new\" className=\"nav-link\">Create Issue</Link>\n// // //           <Link to=\"/assets\" className=\"nav-link\">Assets</Link>\n// // //           <Link to=\"/timeline\" className=\"nav-link\">Timeline</Link>\n// // //           <Link to=\"/users\" className=\"nav-link\">Users</Link>\n// // //           <Link to=\"/notifications\" className=\"nav-link\">Notifications</Link>\n// // //         </nav>\n// // //         <div className=\"sidebar-footer\">\n// // //           {user ? (\n// // //             <div className=\"user-info\" aria-label=\"User Profile\">\n// // //               <div><strong>{user.name}</strong></div>\n// // //               <div className=\"small\">{user.email}</div>\n// // //               <button className=\"btn-link\" onClick={logout}>Sign out</button>\n// // //             </div>\n// // //           ) : <Link to=\"/login\" className=\"nav-link\">Sign in</Link>}\n// // //         </div>\n// // //       </aside>\n\n// // //       <div className=\"content\">\n// // //         <header className=\"topbar\" role=\"banner\">\n// // //           <div className=\"topbar-left\"><h1 className=\"app-title\">Ticketing — Jira-like</h1></div>\n// // //           <div className=\"topbar-right small\">Accessible demo • keyboard friendly</div>\n// // //         </header>\n\n// // //         <main id=\"main\" tabIndex=\"-1\" className=\"main\" role=\"main\">\n// // //           <Routes>\n// // //             <Route path=\"/login\" element={<Login />} />\n// // //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// // //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// // //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// // //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// // //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// // //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// // //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// // //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// // //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// // //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// // //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// // //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// // //           </Routes>\n// // //         </main>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n// // import React from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext'; // ✅ Correct path\n\n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n\n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n\n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n\n// // function Layout() {\n// //   const { user, logout } = useAuth();\n\n// //   return (\n// //     <div className=\"app-shell\" role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside className=\"sidebar\" aria-label=\"Sidebar navigation\">\n// //         <div className=\"sidebar-brand\" aria-hidden=\"true\">\n// //           <FiMenu size={20} /> <span>Flow Track</span>\n// //         </div>\n// //         <nav className=\"sidebar-nav\" role=\"navigation\" aria-label=\"Main\">\n// //           <Link to=\"/for-you\" className=\"nav-link\">For You</Link>\n// //           <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\n// //           <Link to=\"/kanban\" className=\"nav-link\">Boards</Link>\n// //           <Link to=\"/backlog\" className=\"nav-link\">Backlog</Link>\n// //           <Link to=\"/issues/new\" className=\"nav-link\">Create Issue</Link>\n// //           <Link to=\"/assets\" className=\"nav-link\">Assets</Link>\n// //           <Link to=\"/timeline\" className=\"nav-link\">Timeline</Link>\n// //           <Link to=\"/users\" className=\"nav-link\">Users</Link>\n// //           <Link to=\"/notifications\" className=\"nav-link\">Notifications</Link>\n// //         </nav>\n// //         <div className=\"sidebar-footer\">\n// //           {user ? (\n// //             <div className=\"user-info\" aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div className=\"small\">{user.email}</div>\n// //               <button className=\"btn-link\" onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" className=\"nav-link\">Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n\n// //       <div className=\"content\">\n// //         <header className=\"topbar\" role=\"banner\">\n// //           <div className=\"topbar-left\">\n// //             <h1 className=\"app-title\">Flow Track</h1>\n// //           </div>\n// //           <div className=\"topbar-right small\">Accessible demo • keyboard friendly</div>\n// //         </header>\n\n// //         <main id=\"main\" tabIndex=\"-1\" className=\"main\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useState } from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext';\n\n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n\n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n\n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n\n// // function Layout() {\n// //   const { user, logout } = useAuth();\n// //   const [sidebarOpen, setSidebarOpen] = useState(true);\n\n// //   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n\n// //   const sidebarStyle = {\n// //     width: sidebarOpen ? '240px' : '70px',\n// //     transition: 'width 0.3s ease',\n// //     backgroundColor: '#111827',\n// //     color: '#fff',\n// //     height: '100vh',\n// //     padding: '16px 12px',\n// //     boxSizing: 'border-box',\n// //     display: 'flex',\n// //     flexDirection: 'column',\n// //     justifyContent: 'space-between',\n// //     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n// //   };\n\n// //   const navLinkStyle = {\n// //     display: 'block',\n// //     padding: sidebarOpen ? '10px 16px' : '10px 0',\n// //     color: '#e5e7eb',\n// //     textDecoration: 'none',\n// //     fontSize: '15px',\n// //     margin: '6px 0',\n// //     borderRadius: '6px',\n// //     backgroundColor: '#1f2937',\n// //     transition: 'all 0.2s ease',\n// //     fontWeight: '500',\n// //     textAlign: sidebarOpen ? 'left' : 'center'\n// //   };\n\n// //   const navLinkHoverStyle = {\n// //     backgroundColor:'#ffffff',\n// //     color: '#374151'\n// //   };\n\n// //   const contentStyle = {\n// //     flex: 1,\n// //     padding: '24px',\n// //     backgroundColor: '#f9fafb',\n// //     height: '100vh',\n// //     overflowY: 'auto'\n// //   };\n\n// //   const topbarStyle = {\n// //     display: 'flex',\n// //     justifyContent: 'space-between',\n// //     alignItems: 'center',\n// //     backgroundColor: '#ffffff',\n// //     padding: '16px 24px',\n// //     borderBottom: '1px solid #e5e7eb',\n// //     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n// //   };\n\n// //   const appShellStyle = {\n// //     display: 'flex',\n// //     fontFamily: 'Segoe UI, Roboto, sans-serif',\n// //     fontSize: '14px',\n// //     color: '#111827'\n// //   };\n\n// //   const menuButtonStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#e5e7eb',\n// //     cursor: 'pointer',\n// //     marginRight: '8px',\n// //     padding: '4px'\n// //   };\n\n// //   const userInfoStyle = {\n// //     fontSize: '17px',\n// //     lineHeight: '1.5',\n// //     padding: '12px',\n// //     backgroundColor: '#1f2937',\n// //     borderRadius: '6px',\n// //     marginTop: '12px'\n// //   };\n\n// //   const btnLinkStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#3b82f6',\n// //     cursor: 'pointer',\n// //     padding: '0',\n// //     marginTop: '8px',\n// //     fontSize: '13px'\n// //   };\n\n// //   const navItems = [\n// //     { path: '/for-you', label: 'For You' },\n// //     { path: '/projects', label: 'Projects' },\n// //     { path: '/kanban', label: 'Boards' },\n// //     { path: '/backlog', label: 'Backlog' },\n// //     { path: '/issues/new', label: 'Create Issue' },\n// //     { path: '/assets', label: 'Assets' },\n// //     { path: '/timeline', label: 'Timeline' },\n// //     { path: '/users', label: 'Users' },\n// //     { path: '/notifications', label: 'Notifications' }\n// //   ];\n\n// //   return (\n// //     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n// //         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n// //           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n// //             <FiMenu size={20} />\n// //           </button>\n// //           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n// //         </div>\n\n// //         <nav role=\"navigation\" aria-label=\"Main\">\n// //           {navItems.map(({ path, label }) => {\n// //             const [isHovered, setIsHovered] = useState(false);\n\n// //             const combinedStyle = {\n// //               ...navLinkStyle,\n// //               ...(isHovered ? navLinkHoverStyle : {})\n// //             };\n\n// //             return (\n// //               <Link\n// //                 key={path}\n// //                 to={path}\n// //                 style={combinedStyle}\n// //                 onMouseEnter={() => setIsHovered(true)}\n// //                 onMouseLeave={() => setIsHovered(false)}\n// //               >\n// //                 {sidebarOpen ? label : label.charAt(0)}\n// //               </Link>\n// //             );\n// //           })}\n// //         </nav>\n\n// //         <div>\n// //           {user ? (\n// //             <div style={userInfoStyle} aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div>{user.email}</div>\n// //               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" style={navLinkStyle}>Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n\n// //       <div style={contentStyle}>\n// //         <header style={topbarStyle} role=\"banner\">\n// //           <div>\n// //             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n// //           </div>\n// //           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo • keyboard friendly</div>\n// //         </header>\n\n// //         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useState } from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext';\n\n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n\n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n\n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n\n// // function Layout() {\n// //   const { user, logout } = useAuth();\n// //   const [sidebarOpen, setSidebarOpen] = useState(true);\n// //   const [hoveredPath, setHoveredPath] = useState(null);\n\n// //   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n\n// //   const sidebarStyle = {\n// //     width: sidebarOpen ? '240px' : '70px',\n// //     transition: 'width 0.3s ease',\n// //     backgroundColor: '#111827',\n// //     color: '#fff',\n// //     height: '100vh',\n// //     padding: '16px 12px',\n// //     boxSizing: 'border-box',\n// //     display: 'flex',\n// //     flexDirection: 'column',\n// //     justifyContent: 'space-between',\n// //     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n// //   };\n\n// //   const navLinkStyle = {\n// //     display: 'block',\n// //     padding: sidebarOpen ? '10px 16px' : '10px 0',\n// //     color: '#e5e7eb',\n// //     textDecoration: 'none',\n// //     fontSize: '15px',\n// //     margin: '6px 0',\n// //     borderRadius: '6px',\n// //     backgroundColor: '#1f2937',\n// //     transition: 'all 0.2s ease',\n// //     fontWeight: '500',\n// //     textAlign: sidebarOpen ? 'left' : 'center'\n// //   };\n\n// //   const navLinkHoverStyle = {\n// //     backgroundColor: '#ffffff',\n// //     color: '#374151'\n// //   };\n\n// //   const contentStyle = {\n// //     flex: 1,\n// //     padding: '24px',\n// //     backgroundColor: '#f9fafb',\n// //     height: '100vh',\n// //     overflowY: 'auto'\n// //   };\n\n// //   const topbarStyle = {\n// //     display: 'flex',\n// //     justifyContent: 'space-between',\n// //     alignItems: 'center',\n// //     backgroundColor: '#ffffff',\n// //     padding: '16px 24px',\n// //     borderBottom: '1px solid #e5e7eb',\n// //     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n// //   };\n\n// //   const appShellStyle = {\n// //     display: 'flex',\n// //     fontFamily: 'Segoe UI, Roboto, sans-serif',\n// //     fontSize: '14px',\n// //     color: '#111827'\n// //   };\n\n// //   const menuButtonStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#e5e7eb',\n// //     cursor: 'pointer',\n// //     marginRight: '8px',\n// //     padding: '4px'\n// //   };\n\n// //   const userInfoStyle = {\n// //     fontSize: '17px',\n// //     lineHeight: '1.5',\n// //     padding: '12px',\n// //     backgroundColor: '#1f2937',\n// //     borderRadius: '6px',\n// //     marginTop: '12px'\n// //   };\n\n// //   const btnLinkStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#3b82f6',\n// //     cursor: 'pointer',\n// //     padding: '0',\n// //     marginTop: '8px',\n// //     fontSize: '13px'\n// //   };\n\n// //   const navItems = [\n// //     { path: '/for-you', label: 'For You' },\n// //     { path: '/projects', label: 'Projects' },\n// //     { path: '/kanban', label: 'Boards' },\n// //     { path: '/backlog', label: 'Backlog' },\n// //     { path: '/issues/new', label: 'Create Issue' },\n// //     { path: '/assets', label: 'Assets' },\n// //     { path: '/timeline', label: 'Timeline' },\n// //     { path: '/users', label: 'Users' },\n// //     { path: '/notifications', label: 'Notifications' }\n// //   ];\n\n// //   return (\n// //     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n// //         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n// //           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n// //             <FiMenu size={20} />\n// //           </button>\n// //           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n// //         </div>\n\n// //         <nav role=\"navigation\" aria-label=\"Main\">\n// //           {navItems.map(({ path, label }) => {\n// //             const combinedStyle = {\n// //               ...navLinkStyle,\n// //               ...(hoveredPath === path ? navLinkHoverStyle : {})\n// //             };\n\n// //             return (\n// //               <Link\n// //                 key={path}\n// //                 to={path}\n// //                 style={combinedStyle}\n// //                 onMouseEnter={() => setHoveredPath(path)}\n// //                 onMouseLeave={() => setHoveredPath(null)}\n// //               >\n// //                 {sidebarOpen ? label : label.charAt(0)}\n// //               </Link>\n// //             );\n// //           })}\n// //         </nav>\n\n// //         <div>\n// //           {user ? (\n// //             <div style={userInfoStyle} aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div>{user.email}</div>\n// //               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" style={navLinkStyle}>Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n\n// //       <div style={contentStyle}>\n// //         <header style={topbarStyle} role=\"banner\">\n// //           <div>\n// //             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n// //           </div>\n// //           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo • keyboard friendly</div>\n// //         </header>\n\n// //         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n// //             {/* ✅ Redirect root based on login */}\n// //             <Route\n// //               path=\"/\"\n// //               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n// //             />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* 👇 Login route outside layout */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* 👇 All other routes use Layout */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n//       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav role=\"navigation\" aria-label=\"Main\">\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle} aria-label=\"User Profile\">\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle} role=\"banner\">\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             {/* ✅ Redirect root */}\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectCreate from \"./components/projects/ProjectCreate\"; // New import\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* Login */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* All other routes */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/projects/new\", label: \"Create Project\" }, // Added\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle}>\n//       <aside style={sidebarStyle}>\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar}>\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav>\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle}>\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle}>\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/new\" element={<PrivateRoute><ProjectCreate /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectCreate from \"./components/projects/ProjectCreate\";\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* Login */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* All other routes */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/projects/new\", label: \"Create Project\" }, // Fixed\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle}>\n//       <aside style={sidebarStyle}>\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar}>\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav>\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle}>\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle}>\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/new\" element={<PrivateRoute><ProjectCreate /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/App.js"],"sourcesContent":["\n// // // import React from 'react';\n// // // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // // import { AuthProvider, useAuth } from './context/AuthContext';\n\n// // // import Login from './components/auth/Login';\n// // // import Users from './components/users/Users';\n// // // import ProjectList from './components/projects/ProjectList';\n// // // import ProjectView from './components/projects/ProjectView';\n// // // import KanbanBoard from './components/boards/KanbanBoard';\n// // // import Backlog from './components/backlog/Backlog';\n// // // import IssueDetails from './components/issues/IssueDetails';\n// // // import IssueCreate from './components/issues/IssueCreate';\n// // // import Assets from './components/assets/Assets';\n// // // import Timeline from './components/timeline/Timeline';\n// // // import ForYou from './components/dashboard/ForYou';\n// // // import Notifications from './components/notifications/Notifications';\n// // // import { FiMenu } from 'react-icons/fi';\n\n// // // function PrivateRoute({ children }) {\n// // //   const { user } = useAuth();\n// // //   return user ? children : <Navigate to=\"/login\" replace />;\n// // // }\n\n// // // export default function App() {\n// // //   return (\n// // //     <AuthProvider>\n// // //       <Layout />\n// // //     </AuthProvider>\n// // //   );\n// // // }\n\n// // // function Layout() {\n// // //   const { user, logout } = useAuth();\n\n// // //   return (\n// // //     <div className=\"app-shell\" role=\"application\" aria-label=\"Ticketing application\">\n// // //       <aside className=\"sidebar\" aria-label=\"Sidebar navigation\">\n// // //         <div className=\"sidebar-brand\" aria-hidden=\"true\">\n// // //           <FiMenu size={20} /> <span>Ticketing</span>\n// // //         </div>\n// // //         <nav className=\"sidebar-nav\" role=\"navigation\" aria-label=\"Main\">\n// // //           <Link to=\"/for-you\" className=\"nav-link\">For You</Link>\n// // //           <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\n// // //           <Link to=\"/kanban\" className=\"nav-link\">Boards</Link>\n// // //           <Link to=\"/backlog\" className=\"nav-link\">Backlog</Link>\n// // //           <Link to=\"/issues/new\" className=\"nav-link\">Create Issue</Link>\n// // //           <Link to=\"/assets\" className=\"nav-link\">Assets</Link>\n// // //           <Link to=\"/timeline\" className=\"nav-link\">Timeline</Link>\n// // //           <Link to=\"/users\" className=\"nav-link\">Users</Link>\n// // //           <Link to=\"/notifications\" className=\"nav-link\">Notifications</Link>\n// // //         </nav>\n// // //         <div className=\"sidebar-footer\">\n// // //           {user ? (\n// // //             <div className=\"user-info\" aria-label=\"User Profile\">\n// // //               <div><strong>{user.name}</strong></div>\n// // //               <div className=\"small\">{user.email}</div>\n// // //               <button className=\"btn-link\" onClick={logout}>Sign out</button>\n// // //             </div>\n// // //           ) : <Link to=\"/login\" className=\"nav-link\">Sign in</Link>}\n// // //         </div>\n// // //       </aside>\n\n// // //       <div className=\"content\">\n// // //         <header className=\"topbar\" role=\"banner\">\n// // //           <div className=\"topbar-left\"><h1 className=\"app-title\">Ticketing — Jira-like</h1></div>\n// // //           <div className=\"topbar-right small\">Accessible demo • keyboard friendly</div>\n// // //         </header>\n\n// // //         <main id=\"main\" tabIndex=\"-1\" className=\"main\" role=\"main\">\n// // //           <Routes>\n// // //             <Route path=\"/login\" element={<Login />} />\n// // //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// // //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// // //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// // //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// // //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// // //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// // //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// // //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// // //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// // //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// // //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// // //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// // //           </Routes>\n// // //         </main>\n// // //       </div>\n// // //     </div>\n// // //   );\n// // // }\n\n\n\n// // import React from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext'; // ✅ Correct path\n\n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n\n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n\n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n\n// // function Layout() {\n// //   const { user, logout } = useAuth();\n\n// //   return (\n// //     <div className=\"app-shell\" role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside className=\"sidebar\" aria-label=\"Sidebar navigation\">\n// //         <div className=\"sidebar-brand\" aria-hidden=\"true\">\n// //           <FiMenu size={20} /> <span>Flow Track</span>\n// //         </div>\n// //         <nav className=\"sidebar-nav\" role=\"navigation\" aria-label=\"Main\">\n// //           <Link to=\"/for-you\" className=\"nav-link\">For You</Link>\n// //           <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\n// //           <Link to=\"/kanban\" className=\"nav-link\">Boards</Link>\n// //           <Link to=\"/backlog\" className=\"nav-link\">Backlog</Link>\n// //           <Link to=\"/issues/new\" className=\"nav-link\">Create Issue</Link>\n// //           <Link to=\"/assets\" className=\"nav-link\">Assets</Link>\n// //           <Link to=\"/timeline\" className=\"nav-link\">Timeline</Link>\n// //           <Link to=\"/users\" className=\"nav-link\">Users</Link>\n// //           <Link to=\"/notifications\" className=\"nav-link\">Notifications</Link>\n// //         </nav>\n// //         <div className=\"sidebar-footer\">\n// //           {user ? (\n// //             <div className=\"user-info\" aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div className=\"small\">{user.email}</div>\n// //               <button className=\"btn-link\" onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" className=\"nav-link\">Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n\n// //       <div className=\"content\">\n// //         <header className=\"topbar\" role=\"banner\">\n// //           <div className=\"topbar-left\">\n// //             <h1 className=\"app-title\">Flow Track</h1>\n// //           </div>\n// //           <div className=\"topbar-right small\">Accessible demo • keyboard friendly</div>\n// //         </header>\n\n// //         <main id=\"main\" tabIndex=\"-1\" className=\"main\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n\n\n\n// // import React, { useState } from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext';\n \n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n \n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n \n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n \n// // function Layout() {\n// //   const { user, logout } = useAuth();\n// //   const [sidebarOpen, setSidebarOpen] = useState(true);\n \n// //   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n \n// //   const sidebarStyle = {\n// //     width: sidebarOpen ? '240px' : '70px',\n// //     transition: 'width 0.3s ease',\n// //     backgroundColor: '#111827',\n// //     color: '#fff',\n// //     height: '100vh',\n// //     padding: '16px 12px',\n// //     boxSizing: 'border-box',\n// //     display: 'flex',\n// //     flexDirection: 'column',\n// //     justifyContent: 'space-between',\n// //     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n// //   };\n \n// //   const navLinkStyle = {\n// //     display: 'block',\n// //     padding: sidebarOpen ? '10px 16px' : '10px 0',\n// //     color: '#e5e7eb',\n// //     textDecoration: 'none',\n// //     fontSize: '15px',\n// //     margin: '6px 0',\n// //     borderRadius: '6px',\n// //     backgroundColor: '#1f2937',\n// //     transition: 'all 0.2s ease',\n// //     fontWeight: '500',\n// //     textAlign: sidebarOpen ? 'left' : 'center'\n// //   };\n \n// //   const navLinkHoverStyle = {\n// //     backgroundColor:'#ffffff',\n// //     color: '#374151'\n// //   };\n \n// //   const contentStyle = {\n// //     flex: 1,\n// //     padding: '24px',\n// //     backgroundColor: '#f9fafb',\n// //     height: '100vh',\n// //     overflowY: 'auto'\n// //   };\n \n// //   const topbarStyle = {\n// //     display: 'flex',\n// //     justifyContent: 'space-between',\n// //     alignItems: 'center',\n// //     backgroundColor: '#ffffff',\n// //     padding: '16px 24px',\n// //     borderBottom: '1px solid #e5e7eb',\n// //     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n// //   };\n \n// //   const appShellStyle = {\n// //     display: 'flex',\n// //     fontFamily: 'Segoe UI, Roboto, sans-serif',\n// //     fontSize: '14px',\n// //     color: '#111827'\n// //   };\n \n// //   const menuButtonStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#e5e7eb',\n// //     cursor: 'pointer',\n// //     marginRight: '8px',\n// //     padding: '4px'\n// //   };\n \n// //   const userInfoStyle = {\n// //     fontSize: '17px',\n// //     lineHeight: '1.5',\n// //     padding: '12px',\n// //     backgroundColor: '#1f2937',\n// //     borderRadius: '6px',\n// //     marginTop: '12px'\n// //   };\n \n// //   const btnLinkStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#3b82f6',\n// //     cursor: 'pointer',\n// //     padding: '0',\n// //     marginTop: '8px',\n// //     fontSize: '13px'\n// //   };\n \n// //   const navItems = [\n// //     { path: '/for-you', label: 'For You' },\n// //     { path: '/projects', label: 'Projects' },\n// //     { path: '/kanban', label: 'Boards' },\n// //     { path: '/backlog', label: 'Backlog' },\n// //     { path: '/issues/new', label: 'Create Issue' },\n// //     { path: '/assets', label: 'Assets' },\n// //     { path: '/timeline', label: 'Timeline' },\n// //     { path: '/users', label: 'Users' },\n// //     { path: '/notifications', label: 'Notifications' }\n// //   ];\n \n// //   return (\n// //     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n// //         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n// //           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n// //             <FiMenu size={20} />\n// //           </button>\n// //           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n// //         </div>\n \n// //         <nav role=\"navigation\" aria-label=\"Main\">\n// //           {navItems.map(({ path, label }) => {\n// //             const [isHovered, setIsHovered] = useState(false);\n \n// //             const combinedStyle = {\n// //               ...navLinkStyle,\n// //               ...(isHovered ? navLinkHoverStyle : {})\n// //             };\n \n// //             return (\n// //               <Link\n// //                 key={path}\n// //                 to={path}\n// //                 style={combinedStyle}\n// //                 onMouseEnter={() => setIsHovered(true)}\n// //                 onMouseLeave={() => setIsHovered(false)}\n// //               >\n// //                 {sidebarOpen ? label : label.charAt(0)}\n// //               </Link>\n// //             );\n// //           })}\n// //         </nav>\n \n// //         <div>\n// //           {user ? (\n// //             <div style={userInfoStyle} aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div>{user.email}</div>\n// //               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" style={navLinkStyle}>Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n \n// //       <div style={contentStyle}>\n// //         <header style={topbarStyle} role=\"banner\">\n// //           <div>\n// //             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n// //           </div>\n// //           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo • keyboard friendly</div>\n// //         </header>\n \n// //         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n// //             <Route path=\"/\" element={<Navigate to=\"/for-you\" replace />} />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n\n\n\n\n\n\n// // import React, { useState } from 'react';\n// // import { Routes, Route, Link, Navigate } from 'react-router-dom';\n// // import { AuthProvider, useAuth } from './context/AuthContext';\n// // import { ProjectProvider } from './context/ProjectContext';\n\n// // import Login from './components/auth/Login';\n// // import Users from './components/users/Users';\n// // import ProjectList from './components/projects/ProjectList';\n// // import ProjectView from './components/projects/ProjectView';\n// // import KanbanBoard from './components/boards/KanbanBoard';\n// // import Backlog from './components/backlog/Backlog';\n// // import IssueDetails from './components/issues/IssueDetails';\n// // import IssueCreate from './components/issues/IssueCreate';\n// // import Assets from './components/assets/Assets';\n// // import Timeline from './components/timeline/Timeline';\n// // import ForYou from './components/dashboard/ForYou';\n// // import Notifications from './components/notifications/Notifications';\n// // import { FiMenu } from 'react-icons/fi';\n\n// // function PrivateRoute({ children }) {\n// //   const { user } = useAuth();\n// //   return user ? children : <Navigate to=\"/login\" replace />;\n// // }\n\n// // export default function App() {\n// //   return (\n// //     <AuthProvider>\n// //       <ProjectProvider>\n// //         <Layout />\n// //       </ProjectProvider>\n// //     </AuthProvider>\n// //   );\n// // }\n\n// // function Layout() {\n// //   const { user, logout } = useAuth();\n// //   const [sidebarOpen, setSidebarOpen] = useState(true);\n// //   const [hoveredPath, setHoveredPath] = useState(null);\n\n// //   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n\n// //   const sidebarStyle = {\n// //     width: sidebarOpen ? '240px' : '70px',\n// //     transition: 'width 0.3s ease',\n// //     backgroundColor: '#111827',\n// //     color: '#fff',\n// //     height: '100vh',\n// //     padding: '16px 12px',\n// //     boxSizing: 'border-box',\n// //     display: 'flex',\n// //     flexDirection: 'column',\n// //     justifyContent: 'space-between',\n// //     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n// //   };\n\n// //   const navLinkStyle = {\n// //     display: 'block',\n// //     padding: sidebarOpen ? '10px 16px' : '10px 0',\n// //     color: '#e5e7eb',\n// //     textDecoration: 'none',\n// //     fontSize: '15px',\n// //     margin: '6px 0',\n// //     borderRadius: '6px',\n// //     backgroundColor: '#1f2937',\n// //     transition: 'all 0.2s ease',\n// //     fontWeight: '500',\n// //     textAlign: sidebarOpen ? 'left' : 'center'\n// //   };\n\n// //   const navLinkHoverStyle = {\n// //     backgroundColor: '#ffffff',\n// //     color: '#374151'\n// //   };\n\n// //   const contentStyle = {\n// //     flex: 1,\n// //     padding: '24px',\n// //     backgroundColor: '#f9fafb',\n// //     height: '100vh',\n// //     overflowY: 'auto'\n// //   };\n\n// //   const topbarStyle = {\n// //     display: 'flex',\n// //     justifyContent: 'space-between',\n// //     alignItems: 'center',\n// //     backgroundColor: '#ffffff',\n// //     padding: '16px 24px',\n// //     borderBottom: '1px solid #e5e7eb',\n// //     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n// //   };\n\n// //   const appShellStyle = {\n// //     display: 'flex',\n// //     fontFamily: 'Segoe UI, Roboto, sans-serif',\n// //     fontSize: '14px',\n// //     color: '#111827'\n// //   };\n\n// //   const menuButtonStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#e5e7eb',\n// //     cursor: 'pointer',\n// //     marginRight: '8px',\n// //     padding: '4px'\n// //   };\n\n// //   const userInfoStyle = {\n// //     fontSize: '17px',\n// //     lineHeight: '1.5',\n// //     padding: '12px',\n// //     backgroundColor: '#1f2937',\n// //     borderRadius: '6px',\n// //     marginTop: '12px'\n// //   };\n\n// //   const btnLinkStyle = {\n// //     background: 'none',\n// //     border: 'none',\n// //     color: '#3b82f6',\n// //     cursor: 'pointer',\n// //     padding: '0',\n// //     marginTop: '8px',\n// //     fontSize: '13px'\n// //   };\n\n// //   const navItems = [\n// //     { path: '/for-you', label: 'For You' },\n// //     { path: '/projects', label: 'Projects' },\n// //     { path: '/kanban', label: 'Boards' },\n// //     { path: '/backlog', label: 'Backlog' },\n// //     { path: '/issues/new', label: 'Create Issue' },\n// //     { path: '/assets', label: 'Assets' },\n// //     { path: '/timeline', label: 'Timeline' },\n// //     { path: '/users', label: 'Users' },\n// //     { path: '/notifications', label: 'Notifications' }\n// //   ];\n\n// //   return (\n// //     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n// //       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n// //         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n// //           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n// //             <FiMenu size={20} />\n// //           </button>\n// //           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n// //         </div>\n\n// //         <nav role=\"navigation\" aria-label=\"Main\">\n// //           {navItems.map(({ path, label }) => {\n// //             const combinedStyle = {\n// //               ...navLinkStyle,\n// //               ...(hoveredPath === path ? navLinkHoverStyle : {})\n// //             };\n\n// //             return (\n// //               <Link\n// //                 key={path}\n// //                 to={path}\n// //                 style={combinedStyle}\n// //                 onMouseEnter={() => setHoveredPath(path)}\n// //                 onMouseLeave={() => setHoveredPath(null)}\n// //               >\n// //                 {sidebarOpen ? label : label.charAt(0)}\n// //               </Link>\n// //             );\n// //           })}\n// //         </nav>\n\n// //         <div>\n// //           {user ? (\n// //             <div style={userInfoStyle} aria-label=\"User Profile\">\n// //               <div><strong>{user.name}</strong></div>\n// //               <div>{user.email}</div>\n// //               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n// //             </div>\n// //           ) : (\n// //             <Link to=\"/login\" style={navLinkStyle}>Sign in</Link>\n// //           )}\n// //         </div>\n// //       </aside>\n\n// //       <div style={contentStyle}>\n// //         <header style={topbarStyle} role=\"banner\">\n// //           <div>\n// //             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n// //           </div>\n// //           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo • keyboard friendly</div>\n// //         </header>\n\n// //         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n// //           <Routes>\n// //             <Route path=\"/login\" element={<Login />} />\n// //             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n// //             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n// //             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n// //             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n// //             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n// //             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n// //             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n// //             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n// //             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n// //             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n// //             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n// //             {/* ✅ Redirect root based on login */}\n// //             <Route\n// //               path=\"/\"\n// //               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n// //             />\n// //           </Routes>\n// //         </main>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* 👇 Login route outside layout */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* 👇 All other routes use Layout */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n//       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav role=\"navigation\" aria-label=\"Main\">\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle} aria-label=\"User Profile\">\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle} role=\"banner\">\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             {/* ✅ Redirect root */}\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectCreate from \"./components/projects/ProjectCreate\"; // New import\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* Login */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* All other routes */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/projects/new\", label: \"Create Project\" }, // Added\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle}>\n//       <aside style={sidebarStyle}>\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar}>\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav>\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle}>\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle}>\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/new\" element={<PrivateRoute><ProjectCreate /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import { Routes, Route, Link, Navigate } from \"react-router-dom\";\n// import { AuthProvider, useAuth } from \"./context/AuthContext\";\n// import { ProjectProvider } from \"./context/ProjectContext\";\n\n// import Login from \"./components/auth/Login\";\n// import Users from \"./components/users/Users\";\n// import ProjectList from \"./components/projects/ProjectList\";\n// import ProjectCreate from \"./components/projects/ProjectCreate\";\n// import ProjectView from \"./components/projects/ProjectView\";\n// import KanbanBoard from \"./components/boards/KanbanBoard\";\n// import Backlog from \"./components/backlog/Backlog\";\n// import IssueDetails from \"./components/issues/IssueDetails\";\n// import IssueCreate from \"./components/issues/IssueCreate\";\n// import Assets from \"./components/assets/Assets\";\n// import Timeline from \"./components/timeline/Timeline\";\n// import ForYou from \"./components/dashboard/ForYou\";\n// import Notifications from \"./components/notifications/Notifications\";\n// import { FiMenu } from \"react-icons/fi\";\n\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           {/* Login */}\n//           <Route path=\"/login\" element={<Login />} />\n\n//           {/* All other routes */}\n//           <Route path=\"/*\" element={<Layout />} />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [hoveredPath, setHoveredPath] = useState(null);\n\n//   const toggleSidebar = () => setSidebarOpen((prev) => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? \"240px\" : \"70px\",\n//     transition: \"width 0.3s ease\",\n//     backgroundColor: \"#111827\",\n//     color: \"#fff\",\n//     height: \"100vh\",\n//     padding: \"16px 12px\",\n//     boxSizing: \"border-box\",\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     justifyContent: \"space-between\",\n//     boxShadow: \"2px 0 8px rgba(0,0,0,0.1)\",\n//   };\n\n//   const navLinkStyle = {\n//     display: \"block\",\n//     padding: sidebarOpen ? \"10px 16px\" : \"10px 0\",\n//     color: \"#e5e7eb\",\n//     textDecoration: \"none\",\n//     fontSize: \"15px\",\n//     margin: \"6px 0\",\n//     borderRadius: \"6px\",\n//     backgroundColor: \"#1f2937\",\n//     transition: \"all 0.2s ease\",\n//     fontWeight: \"500\",\n//     textAlign: sidebarOpen ? \"left\" : \"center\",\n//   };\n\n//   const navLinkHoverStyle = {\n//     backgroundColor: \"#ffffff\",\n//     color: \"#374151\",\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: \"24px\",\n//     backgroundColor: \"#f9fafb\",\n//     height: \"100vh\",\n//     overflowY: \"auto\",\n//   };\n\n//   const topbarStyle = {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     backgroundColor: \"#ffffff\",\n//     padding: \"16px 24px\",\n//     borderBottom: \"1px solid #e5e7eb\",\n//     boxShadow: \"0 1px 4px rgba(0,0,0,0.05)\",\n//   };\n\n//   const appShellStyle = {\n//     display: \"flex\",\n//     fontFamily: \"Segoe UI, Roboto, sans-serif\",\n//     fontSize: \"14px\",\n//     color: \"#111827\",\n//   };\n\n//   const menuButtonStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#e5e7eb\",\n//     cursor: \"pointer\",\n//     marginRight: \"8px\",\n//     padding: \"4px\",\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: \"17px\",\n//     lineHeight: \"1.5\",\n//     padding: \"12px\",\n//     backgroundColor: \"#1f2937\",\n//     borderRadius: \"6px\",\n//     marginTop: \"12px\",\n//   };\n\n//   const btnLinkStyle = {\n//     background: \"none\",\n//     border: \"none\",\n//     color: \"#3b82f6\",\n//     cursor: \"pointer\",\n//     padding: \"0\",\n//     marginTop: \"8px\",\n//     fontSize: \"13px\",\n//   };\n\n//   const navItems = [\n//     { path: \"/for-you\", label: \"For You\" },\n//     { path: \"/projects\", label: \"Projects\" },\n//     { path: \"/projects/new\", label: \"Create Project\" }, // Fixed\n//     { path: \"/kanban\", label: \"Boards\" },\n//     { path: \"/backlog\", label: \"Backlog\" },\n//     { path: \"/issues/new\", label: \"Create Issue\" },\n//     { path: \"/assets\", label: \"Assets\" },\n//     { path: \"/timeline\", label: \"Timeline\" },\n//     { path: \"/users\", label: \"Users\" },\n//     { path: \"/notifications\", label: \"Notifications\" },\n//   ];\n\n//   return (\n//     <div style={appShellStyle}>\n//       <aside style={sidebarStyle}>\n//         <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"20px\" }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar}>\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: \"bold\" }}>Flow Track</span>}\n//         </div>\n\n//         <nav>\n//           {navItems.map(({ path, label }) => {\n//             const combinedStyle = {\n//               ...navLinkStyle,\n//               ...(hoveredPath === path ? navLinkHoverStyle : {}),\n//             };\n\n//             return (\n//               <Link\n//                 key={path}\n//                 to={path}\n//                 style={combinedStyle}\n//                 onMouseEnter={() => setHoveredPath(path)}\n//                 onMouseLeave={() => setHoveredPath(null)}\n//               >\n//                 {sidebarOpen ? label : label.charAt(0)}\n//               </Link>\n//             );\n//           })}\n//         </nav>\n\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle}>\n//               <div>\n//                 <strong>{user.name}</strong>\n//               </div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>\n//                 Sign out\n//               </button>\n//             </div>\n//           ) : (\n//             <Link to=\"/login\" style={navLinkStyle}>\n//               Sign in\n//             </Link>\n//           )}\n//         </div>\n//       </aside>\n\n//       <div style={contentStyle}>\n//         <header style={topbarStyle}>\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: \"20px\" }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: \"12px\", color: \"#666\" }}>\n//             Accessible demo • keyboard friendly\n//           </div>\n//         </header>\n\n//         <main id=\"main\" tabIndex=\"-1\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<PrivateRoute><ProjectList /></PrivateRoute>} />\n//             <Route path=\"/projects/new\" element={<PrivateRoute><ProjectCreate /></PrivateRoute>} />\n//             <Route path=\"/projects/:id\" element={<PrivateRoute><ProjectView /></PrivateRoute>} />\n//             <Route path=\"/kanban/:projectId?\" element={<PrivateRoute><KanbanBoard /></PrivateRoute>} />\n//             <Route path=\"/backlog/:projectId?\" element={<PrivateRoute><Backlog /></PrivateRoute>} />\n//             <Route path=\"/issues/new\" element={<PrivateRoute><IssueCreate /></PrivateRoute>} />\n//             <Route path=\"/issues/:id\" element={<PrivateRoute><IssueDetails /></PrivateRoute>} />\n//             <Route path=\"/assets\" element={<PrivateRoute><Assets /></PrivateRoute>} />\n//             <Route path=\"/timeline\" element={<PrivateRoute><Timeline /></PrivateRoute>} />\n//             <Route path=\"/users\" element={<PrivateRoute><Users /></PrivateRoute>} />\n//             <Route path=\"/notifications\" element={<PrivateRoute><Notifications /></PrivateRoute>} />\n//             <Route path=\"/for-you\" element={<PrivateRoute><ForYou /></PrivateRoute>} />\n\n//             <Route\n//               path=\"/\"\n//               element={user ? <Navigate to=\"/for-you\" replace /> : <Navigate to=\"/login\" replace />}\n//             />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}