{"ast":null,"code":"\n// import React from 'react';\n\n// export default function Timeline() {\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"gantt-title\">\n//       <h2 id=\"gantt-title\">Timeline (Gantt) - Placeholder</h2>\n//       <p>This uses a placeholder. For production we'd integrate a Gantt library with ARIA considerations.</p>\n//     </div>\n//   );\n// }\n\n// import React, { useState } from \"react\";\n// import { useDrag, DndProvider } from \"react-dnd\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import styled from \"styled-components\";\n// import { format, addDays, differenceInDays, parseISO } from \"date-fns\";\n\n// // Styled components\n// const TimelineContainer = styled.div`\n//   border: 1px solid #ccc;\n//   padding: 10px;\n//   overflow-x: auto;\n//   position: relative;\n//   height: 300px;\n// `;\n\n// const ZoomControls = styled.div`\n//   margin-bottom: 10px;\n// `;\n\n// const TaskBar = styled.div`\n//   position: absolute;\n//   height: 30px;\n//   border-radius: 4px;\n//   color: white;\n//   padding: 0 5px;\n//   font-size: 12px;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// // Task component\n// function Task({ task, dates, onDragDrop }) {\n//   const startIdx = dates.findIndex((d) => d === task.start);\n//   const endIdx = dates.findIndex((d) => d === task.end);\n//   const width = (endIdx - startIdx + 1) * 100;\n\n//   const [{ isDragging }, drag] = useDrag(() => ({\n//     type: \"TASK\",\n//     item: { id: task.id },\n//     collect: (monitor) => ({\n//       isDragging: !!monitor.isDragging(),\n//     }),\n//   }));\n\n//   return (\n//     <TaskBar\n//       ref={drag}\n//       style={{\n//         left: startIdx * 100,\n//         width: width,\n//         backgroundColor: task.color,\n//         opacity: isDragging ? 0.5 : 1,\n//         top: task.id * 40,\n//       }}\n//     >\n//       {task.milestone && \"ðŸŽ¯\"} {task.title} ({task.progress}%)\n//     </TaskBar>\n//   );\n// }\n\n// // Main Timeline component\n// function TimelineCombined() {\n//   const initialTasks = [\n//     {\n//       id: 1,\n//       title: \"Design UI\",\n//       start: \"2025-09-22\",\n//       end: \"2025-09-25\",\n//       progress: 50,\n//       color: \"#0052CC\",\n//       assignee: \"John\",\n//       dependencies: [2],\n//       milestone: false\n//     },\n//     {\n//       id: 2,\n//       title: \"Develop Backend\",\n//       start: \"2025-09-23\",\n//       end: \"2025-09-28\",\n//       progress: 20,\n//       color: \"#FF5630\",\n//       assignee: \"Alice\",\n//       dependencies: [],\n//       milestone: true\n//     },\n//   ];\n\n//   const [tasks, setTasks] = useState(initialTasks);\n//   const [zoom, setZoom] = useState(\"week\");\n\n//   const handleDragDrop = (id, newStart, newEnd) => {\n//     setTasks((prev) =>\n//       prev.map((task) =>\n//         task.id === id ? { ...task, start: newStart, end: newEnd } : task\n//       )\n//     );\n//   };\n\n//   const startDate = parseISO(\"2025-09-20\");\n//   const endDate = parseISO(\"2025-10-05\");\n//   const totalDays = differenceInDays(endDate, startDate) + 1;\n\n//   const dates = [];\n//   for (let i = 0; i < totalDays; i++) {\n//     dates.push(format(addDays(startDate, i), \"yyyy-MM-dd\"));\n//   }\n\n//   return (\n//     <DndProvider backend={HTML5Backend}>\n//       <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n//         <h1>Project Timeline</h1>\n//         <ZoomControls>\n//           Zoom:\n//           <select value={zoom} onChange={(e) => setZoom(e.target.value)}>\n//             <option value=\"day\">Day</option>\n//             <option value=\"week\">Week</option>\n//             <option value=\"month\">Month</option>\n//             <option value=\"quarter\">Quarter</option>\n//           </select>\n//         </ZoomControls>\n//         <TimelineContainer>\n//           <div style={{ display: \"flex\", borderBottom: \"1px solid #ccc\" }}>\n//             {dates.map((date) => (\n//               <div\n//                 key={date}\n//                 style={{\n//                   minWidth: \"100px\",\n//                   borderRight: \"1px solid #eee\",\n//                   textAlign: \"center\",\n//                 }}\n//               >\n//                 {date}\n//               </div>\n//             ))}\n//           </div>\n//           {tasks.map((task) => (\n//             <Task\n//               key={task.id}\n//               task={task}\n//               dates={dates}\n//               onDragDrop={handleDragDrop}\n//             />\n//           ))}\n//         </TimelineContainer>\n//       </div>\n//     </DndProvider>\n//   );\n// }\n\n// export default TimelineCombined;","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/timeline/Timeline.js"],"sourcesContent":["\n// import React from 'react';\n\n// export default function Timeline() {\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"gantt-title\">\n//       <h2 id=\"gantt-title\">Timeline (Gantt) - Placeholder</h2>\n//       <p>This uses a placeholder. For production we'd integrate a Gantt library with ARIA considerations.</p>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState } from \"react\";\n// import { useDrag, DndProvider } from \"react-dnd\";\n// import { HTML5Backend } from \"react-dnd-html5-backend\";\n// import styled from \"styled-components\";\n// import { format, addDays, differenceInDays, parseISO } from \"date-fns\";\n\n// // Styled components\n// const TimelineContainer = styled.div`\n//   border: 1px solid #ccc;\n//   padding: 10px;\n//   overflow-x: auto;\n//   position: relative;\n//   height: 300px;\n// `;\n\n// const ZoomControls = styled.div`\n//   margin-bottom: 10px;\n// `;\n\n// const TaskBar = styled.div`\n//   position: absolute;\n//   height: 30px;\n//   border-radius: 4px;\n//   color: white;\n//   padding: 0 5px;\n//   font-size: 12px;\n//   display: flex;\n//   align-items: center;\n// `;\n\n// // Task component\n// function Task({ task, dates, onDragDrop }) {\n//   const startIdx = dates.findIndex((d) => d === task.start);\n//   const endIdx = dates.findIndex((d) => d === task.end);\n//   const width = (endIdx - startIdx + 1) * 100;\n\n//   const [{ isDragging }, drag] = useDrag(() => ({\n//     type: \"TASK\",\n//     item: { id: task.id },\n//     collect: (monitor) => ({\n//       isDragging: !!monitor.isDragging(),\n//     }),\n//   }));\n\n//   return (\n//     <TaskBar\n//       ref={drag}\n//       style={{\n//         left: startIdx * 100,\n//         width: width,\n//         backgroundColor: task.color,\n//         opacity: isDragging ? 0.5 : 1,\n//         top: task.id * 40,\n//       }}\n//     >\n//       {task.milestone && \"ðŸŽ¯\"} {task.title} ({task.progress}%)\n//     </TaskBar>\n//   );\n// }\n\n// // Main Timeline component\n// function TimelineCombined() {\n//   const initialTasks = [\n//     {\n//       id: 1,\n//       title: \"Design UI\",\n//       start: \"2025-09-22\",\n//       end: \"2025-09-25\",\n//       progress: 50,\n//       color: \"#0052CC\",\n//       assignee: \"John\",\n//       dependencies: [2],\n//       milestone: false\n//     },\n//     {\n//       id: 2,\n//       title: \"Develop Backend\",\n//       start: \"2025-09-23\",\n//       end: \"2025-09-28\",\n//       progress: 20,\n//       color: \"#FF5630\",\n//       assignee: \"Alice\",\n//       dependencies: [],\n//       milestone: true\n//     },\n//   ];\n\n//   const [tasks, setTasks] = useState(initialTasks);\n//   const [zoom, setZoom] = useState(\"week\");\n\n//   const handleDragDrop = (id, newStart, newEnd) => {\n//     setTasks((prev) =>\n//       prev.map((task) =>\n//         task.id === id ? { ...task, start: newStart, end: newEnd } : task\n//       )\n//     );\n//   };\n\n//   const startDate = parseISO(\"2025-09-20\");\n//   const endDate = parseISO(\"2025-10-05\");\n//   const totalDays = differenceInDays(endDate, startDate) + 1;\n\n//   const dates = [];\n//   for (let i = 0; i < totalDays; i++) {\n//     dates.push(format(addDays(startDate, i), \"yyyy-MM-dd\"));\n//   }\n\n//   return (\n//     <DndProvider backend={HTML5Backend}>\n//       <div style={{ padding: \"20px\", fontFamily: \"Arial\" }}>\n//         <h1>Project Timeline</h1>\n//         <ZoomControls>\n//           Zoom:\n//           <select value={zoom} onChange={(e) => setZoom(e.target.value)}>\n//             <option value=\"day\">Day</option>\n//             <option value=\"week\">Week</option>\n//             <option value=\"month\">Month</option>\n//             <option value=\"quarter\">Quarter</option>\n//           </select>\n//         </ZoomControls>\n//         <TimelineContainer>\n//           <div style={{ display: \"flex\", borderBottom: \"1px solid #ccc\" }}>\n//             {dates.map((date) => (\n//               <div\n//                 key={date}\n//                 style={{\n//                   minWidth: \"100px\",\n//                   borderRight: \"1px solid #eee\",\n//                   textAlign: \"center\",\n//                 }}\n//               >\n//                 {date}\n//               </div>\n//             ))}\n//           </div>\n//           {tasks.map((task) => (\n//             <Task\n//               key={task.id}\n//               task={task}\n//               dates={dates}\n//               onDragDrop={handleDragDrop}\n//             />\n//           ))}\n//         </TimelineContainer>\n//       </div>\n//     </DndProvider>\n//   );\n// }\n\n// export default TimelineCombined;\n"],"mappings":";AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}