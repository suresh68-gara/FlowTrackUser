{"ast":null,"code":"// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles (unchanged)\n// export const STYLES = { /* your existing STYLES object */ };\n\n// // Initialize global CSS (unchanged)\n// const globalStyles = `/* your existing global CSS */`;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'] },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'] },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup' },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication' },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(p); }\n// export function updateProject(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); const idx = arr.findIndex(p=>p.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Project not found')); }\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(i=>i.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Issue not found')); }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(); }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx = arr.findIndex(n=>n.id===id); if(idx>=0){arr[idx].read=true; localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));} return Promise.resolve(); }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles\n// export const STYLES = {\n//   avatar: { borderRadius: '50%', width: '32px', height: '32px', display: 'flex', alignItems: 'center', justifyContent: 'center' },\n//   badge: { padding: '2px 8px', borderRadius: '12px', fontSize: '12px' },\n//   status: {\n//     todo: { backgroundColor: '#dfe1e6', color: '#172b4d' },\n//     inprogress: { backgroundColor: '#d4f4e2', color: '#2e7d32' },\n//     done: { backgroundColor: '#e3f2fd', color: '#1565c0' },\n//     backlog: { backgroundColor: '#f3e5f5', color: '#6a1b9a' },\n//     analysis: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n//     blocked: { backgroundColor: '#ffcdd2', color: '#c62828' },\n//     'code review': { backgroundColor: '#bbdefb', color: '#1565c0' },\n//     qa: { backgroundColor: '#c8e6c9', color: '#2e7d32' },\n//     milestone: { backgroundColor: '#ede7f6', color: '#4527a0' },\n//   },\n//   priority: {\n//     P1: { backgroundColor: '#ffebee', color: '#c62828' },\n//     P2: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n//     P3: { backgroundColor: '#e8f5e9', color: '#388e3c' },\n//   },\n//   button: { padding: '6px 12px', borderRadius: '4px', background: 'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)', color: '#fff', border: 'none', cursor: 'pointer' },\n//   buttonHover: { background: 'linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%)' },\n//   card: { background: '#fff', border: '1px solid #dfe1e6', borderRadius: '4px', padding: '8px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' },\n//   input: { padding: '8px', border: '1px solid #dfe1e6', borderRadius: '4px', width: '100%' },\n//   userSection: { padding: '12px', background: '#f4f5f7', borderRadius: '4px' },\n// };\n\n// // Initialize global CSS\n// const globalStyles = `\n//   body { font-family: 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 0; }\n//   * { box-sizing: border-box; }\n// `;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//       { id: 'u4', name: 'Mark', email: 'mark@demo.com', role: 'Developer' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'alpha', displayName: 'Alpha', description: 'Alpha project', leads: ['u3'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'beta', displayName: 'Beta', description: 'Beta project', leads: ['u2'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', epicName: 'Authentication', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//       { id: 'i4', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'UI Fix', status: 'todo', priority: 'P2', assignee: 'u4', type: 'Task', storyPoints: 2, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n//   const cleanName = p.name.trim().toLowerCase().replace(/\\s+/g, '-');\n//   if (arr.some(proj => proj.name.toLowerCase() === cleanName)) {\n//     return Promise.reject(new Error('Project name must be unique'));\n//   }\n//   const project = { ...p, name: cleanName, displayName: p.name.trim() };\n//   arr.push(project); \n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n//   return Promise.resolve(project); \n// }\n// export function updateProject(id, patch) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n//   const idx = arr.findIndex(p=>p.id===id); \n//   if(idx>=0){\n//     const cleanName = patch.name ? patch.name.trim().toLowerCase().replace(/\\s+/g, '-') : arr[idx].name;\n//     if (arr.some(p => p.name.toLowerCase() === cleanName && p.id !== id)) {\n//       return Promise.reject(new Error('Project name must be unique'));\n//     }\n//     arr[idx]={...arr[idx],...patch, name: cleanName, displayName: patch.name ? patch.name.trim() : arr[idx].displayName}; \n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n//     return Promise.resolve(arr[idx]);\n//   } \n//   return Promise.reject(new Error('Project not found')); \n// }\n// export function deleteProject(id) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // Delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   ensure(); \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId, statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   ensure();\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // Delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   ensure(); \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const idx=arr.findIndex(i=>i.id===id); \n//   if(idx>=0){\n//     arr[idx]={...arr[idx],...patch}; \n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//     return Promise.resolve(arr[idx]);\n//   } \n//   return Promise.reject(new Error('Issue not found')); \n// }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(); \n// }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); \n//   const idx = arr.findIndex(n=>n.id===id); \n//   if(idx>=0){\n//     arr[idx].read=true; \n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   } \n//   return Promise.resolve(); \n// }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n//////////////////////////// for boards //////////////////////////////////////////////////////////\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// --- Local Storage Keys ---\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  EPICS: 'tf_epics_v3',\n  // New key for epics\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\n\n// --- Detailed Initial User Data ---\nconst detailedInitialUsers = [{\n  id: 'u1',\n  firstName: 'Admin',\n  lastName: 'User',\n  name: 'Admin User',\n  email: 'admin@demo.com',\n  role: 'Admin',\n  department: 'Management',\n  active: true,\n  language: 'English',\n  mobileNumber: '555-1001',\n  dateFormat: 'YYYY-MM-DD',\n  passwordResetNeeded: false,\n  profileFile: null\n}, {\n  id: 'u2',\n  firstName: 'Dev',\n  lastName: 'Alice',\n  name: 'Dev Alice',\n  email: 'alice@demo.com',\n  role: 'Developer',\n  department: 'Engineering',\n  active: true,\n  language: 'Spanish',\n  mobileNumber: '555-2002',\n  dateFormat: 'MM/DD/YYYY',\n  passwordResetNeeded: true,\n  profileFile: null\n}, {\n  id: 'u3',\n  firstName: 'Manager',\n  lastName: 'Bob',\n  name: 'Manager Bob',\n  email: 'bob@demo.com',\n  role: 'Manager',\n  department: 'Sales',\n  active: false,\n  language: 'French',\n  mobileNumber: '555-3003',\n  dateFormat: 'DD/MM/YYYY',\n  passwordResetNeeded: false,\n  profileFile: null\n}];\n\n// --- Utility Functions for LocalStorage (Enhanced for detailed users) ---\n\nconst loadDetailedUsers = () => {\n  try {\n    const storedData = localStorage.getItem(KEY.USERS);\n    if (storedData) {\n      const users = JSON.parse(storedData);\n      if (users.length > 0 && !users[0].firstName) {\n        console.warn(\"User data structure outdated. Re-initializing with detailed initial data.\");\n        saveDetailedUsers(detailedInitialUsers);\n        return detailedInitialUsers;\n      }\n      return users;\n    }\n  } catch (error) {\n    console.error(\"Error reading localStorage:\", error);\n  }\n  saveDetailedUsers(detailedInitialUsers);\n  return detailedInitialUsers;\n};\nconst saveDetailedUsers = users => {\n  try {\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  } catch (error) {\n    console.error(\"Error writing to localStorage:\", error);\n  }\n};\nlet users = loadDetailedUsers();\nfunction ensure() {\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [{\n      id: 'mark',\n      key: 'MARK',\n      name: 'Mark Project',\n      description: 'Mark project description',\n      leads: ['u3']\n    },\n    // Changed ID\n    {\n      id: 'novya',\n      key: 'NOVYA',\n      name: 'Novya Project',\n      description: 'Novya project description',\n      leads: ['u2']\n    },\n    // Changed ID\n    {\n      id: 'epsilon',\n      key: 'EPSILON',\n      name: 'Epsilon Project',\n      description: 'Epsilon project description',\n      leads: ['u1']\n    }];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n\n  // New: Initialize Epics\n  if (!localStorage.getItem(KEY.EPICS)) {\n    const initialEpics = [{\n      id: 'e1',\n      projectId: 'mark',\n      name: 'Frontend Epic'\n    }, {\n      id: 'e2',\n      projectId: 'mark',\n      name: 'Backend Epic'\n    }, {\n      id: 'e3',\n      projectId: 'novya',\n      name: 'Database Optimization'\n    }, {\n      id: 'e4',\n      projectId: 'epsilon',\n      name: 'UI/UX Redesign'\n    }];\n    localStorage.setItem(KEY.EPICS, JSON.stringify(initialEpics));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [{\n      id: 'i1',\n      projectId: 'mark',\n      epic: 'e1',\n      epicName: 'Frontend Epic',\n      title: 'Setup Mark repo',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 3,\n      createdAt: Date.now()\n    }, {\n      id: 'i2',\n      projectId: 'mark',\n      epic: 'e1',\n      epicName: 'Frontend Epic',\n      title: 'Login Mark bug',\n      status: 'inprogress',\n      priority: 'P1',\n      assignee: 'u2',\n      type: 'Bug',\n      storyPoints: 1,\n      createdAt: Date.now()\n    }, {\n      id: 'i3',\n      projectId: 'novya',\n      epic: 'e3',\n      epicName: 'Database Optimization',\n      title: 'OAuth Novya',\n      status: 'done',\n      priority: 'P3',\n      assignee: 'u3',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }, {\n      id: 'i4',\n      projectId: 'novya',\n      epic: 'e3',\n      epicName: 'Database Optimization',\n      title: 'Novya Data Migration',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 8,\n      createdAt: Date.now()\n    }, {\n      id: 'i5',\n      projectId: 'epsilon',\n      epic: 'e4',\n      epicName: 'UI/UX Redesign',\n      title: 'Epsilon Home Page Wireframe',\n      status: 'backlog',\n      priority: 'P3',\n      assignee: 'u1',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{\n      id: 'a1',\n      name: 'Dev Laptop',\n      type: 'Laptop',\n      owner: 'u2',\n      status: 'active'\n    }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{\n      id: uuidv4(),\n      userId: 'u2',\n      text: 'Assigned i1',\n      read: false,\n      ts: Date.now()\n    }]));\n  }\n}\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// --- Authentication ---\nexport async function mockLogin(email) {\n  ensure();\n  await delay(100);\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return user;\n}\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// --- Detailed User CRUD ---\nexport async function listUsers() {\n  ensure();\n  await delay(100);\n  return JSON.parse(JSON.stringify(users));\n}\nexport async function addUser(u) {\n  await delay(100);\n  users.push(u);\n  saveDetailedUsers(users);\n  return u;\n}\nexport async function updateUser(updatedUser) {\n  await delay(100);\n  const index = users.findIndex(u => u.id === updatedUser.id);\n  if (index === -1) {\n    throw new Error('User not found');\n  }\n  users[index] = {\n    ...users[index],\n    ...updatedUser\n  };\n  saveDetailedUsers(users);\n  return users[index];\n}\nexport async function deleteUser(userId) {\n  await delay(100);\n  const initialLength = users.length;\n  users = users.filter(u => u.id !== userId);\n  if (users.length === initialLength) {\n    throw new Error('User not found');\n  }\n  saveDetailedUsers(users);\n  return {\n    success: true,\n    userId\n  };\n}\n\n// --- Projects ---\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\nexport function getProject(id) {\n  ensure();\n  const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n  return Promise.resolve(projects.find(x => x.id === id));\n}\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\nexport function updateProject(id, updatedProject) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    const existingProject = arr[idx];\n    arr[idx] = {\n      ...existingProject,\n      ...updatedProject,\n      description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\n      leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Project not found'));\n}\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filteredProjects = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filteredProjects));\n\n  // Also delete epics belonging to this project\n  const epicsArr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const filteredEpics = epicsArr.filter(e => e.projectId !== id);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(filteredEpics));\n\n  // Also delete issues belonging to this project\n  const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const newIssues = issuesArr.filter(i => i.projectId !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\n  return Promise.resolve();\n}\n\n// --- Epics (New/Modified) ---\nexport async function listEpics(projectId = null) {\n  ensure();\n  await delay(100);\n  let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  if (projectId) {\n    epics = epics.filter(epic => epic.projectId === projectId);\n  }\n  return epics;\n}\nexport async function createEpicAPI(projectId, epicName) {\n  ensure();\n  await delay(100);\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const newEpic = {\n    id: 'e' + uuidv4().slice(0, 8),\n    // Generate a unique epic ID\n    projectId,\n    name: epicName\n  };\n  epics.push(newEpic);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  return newEpic;\n}\nexport async function deleteEpicAPI(epicId, projectId) {\n  ensure();\n  await delay(100);\n  let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const initialLength = epics.length;\n  epics = epics.filter(epic => epic.id !== epicId || projectId && epic.projectId !== projectId);\n  if (epics.length === initialLength) {\n    throw new Error('Epic not found or does not belong to the specified project.');\n  }\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n\n  // Also delete issues within this epic\n  let issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  issues = issues.filter(issue => issue.epic !== epicId);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  return {\n    success: true,\n    epicId\n  };\n}\n\n// --- Issues ---\nexport function listIssues(projectId = null) {\n  // Modified to accept projectId\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId); // Filter by projectId\n  return Promise.resolve(arr);\n}\nexport function getIssue(id) {\n  ensure();\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  return Promise.resolve(issues.find(x => x.id === id));\n}\nexport function createIssue(data) {\n  if (!data.projectId || !data.epic) {\n    // Ensure both projectId and epic are present\n    return Promise.reject(new Error(\"Project ID and Epic ID are required to create an issue\"));\n  }\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = {\n    ...data,\n    id,\n    createdAt: Date.now()\n  };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Issue not found'));\n}\nexport function moveIssue(id, status) {\n  return updateIssue(id, {\n    status\n  });\n}\n\n// --- Assets ---\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\n// --- Notifications ---\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n\n// --- Styles and Utility Functions (Unchanged) ---\n\nconst STYLES = {\n  container: {\n    maxWidth: 'min(90vw, 1200px)',\n    margin: '0 0 0 2vw',\n    padding: 'clamp(1rem, 2vw, 1.5rem)',\n    fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\n    backgroundColor: '#f8fafc',\n    minHeight: '100vh',\n    boxSizing: 'border-box'\n  },\n  header: {\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    padding: 'clamp(1.5rem, 4vw, 2rem)',\n    borderRadius: '12px',\n    marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n    marginLeft: '0',\n    boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    padding: 'clamp(1rem, 3vw, 1.5rem)',\n    marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\n    marginLeft: '0',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    border: '1px solid rgba(0,0,0,0.05)',\n    transition: 'all 0.3s ease',\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'separate',\n    borderSpacing: '0',\n    borderRadius: '12px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    marginLeft: '0',\n    overflowX: 'auto'\n  },\n  userSection: {\n    marginLeft: '0',\n    paddingLeft: '0',\n    alignSelf: 'flex-start',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  button: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\n    borderRadius: '8px',\n    border: 'none',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease'\n  },\n  buttonHover: {\n    opacity: '0.9',\n    transform: 'translateY(-2px)'\n  },\n  avatar: {\n    width: 'clamp(2rem, 8vw, 2.5rem)',\n    height: 'clamp(2rem, 8vw, 2.5rem)',\n    borderRadius: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    color: 'white',\n    fontWeight: '600'\n  },\n  badge: {\n    padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '12px',\n    fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\n    fontWeight: '500'\n  },\n  status: {\n    todo: {\n      backgroundColor: '#e2e8f0',\n      color: '#4a5568'\n    },\n    inprogress: {\n      backgroundColor: '#fefcbf',\n      color: '#744210'\n    },\n    done: {\n      backgroundColor: '#c6f6d5',\n      color: '#276749'\n    },\n    backlog: {\n      backgroundColor: '#e0f2f7',\n      color: '#01579b'\n    },\n    // Added backlog status color\n    analysis: {\n      backgroundColor: '#fbe9e7',\n      color: '#bf360c'\n    },\n    blocked: {\n      backgroundColor: '#ffcdd2',\n      color: '#b71c1c'\n    },\n    'code review': {\n      backgroundColor: '#e8eaf6',\n      color: '#3f51b5'\n    },\n    qa: {\n      backgroundColor: '#e0f7fa',\n      color: '#006064'\n    },\n    milestone: {\n      backgroundColor: '#fce4ec',\n      color: '#ad1457'\n    }\n  },\n  priority: {\n    P1: {\n      backgroundColor: '#fed7d7',\n      color: '#9b2c2c'\n    },\n    P2: {\n      backgroundColor: '#fefcbf',\n      color: '#744210'\n    },\n    P3: {\n      backgroundColor: '#c6f6d5',\n      color: '#276749'\n    }\n  },\n  input: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '8px',\n    border: '1px solid #e2e8f0',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    width: '100%',\n    boxSizing: 'border-box'\n  }\n};\nconst globalStyles = `\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 768px) {\n  .container { padding: 1rem; margin: 0; }\n  .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\n  .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\n  .table { font-size: 0.9rem; }\n  .table th, .table td { padding: 0.5rem; }\n  .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\n  .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\n}\n@media (max-width: 480px) {\n  .container { padding: 0.5rem; }\n  .header { padding: 1rem; margin-bottom: 0.75rem; }\n  .card { padding: 0.75rem; margin-bottom: 0.5rem; }\n  .table { font-size: 0.8rem; }\n  .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\n  .input { padding: 0.5rem; font-size: 0.9rem; }\n}\n`;\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\nexport { STYLES };\nexport function getUserAvatarStyle(name) {\n  return {\n    ...STYLES.avatar,\n    backgroundColor: stringToColor(name)\n  };\n}\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsl(${hue}, 70%, 60%)`;\n}\nexport function getStatusBadgeStyle(status) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.status[status]\n  };\n}\nexport function getPriorityBadgeStyle(priority) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.priority[priority]\n  };\n}\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n  return {\n    ...baseStyle,\n    ':hover': hoverStyle\n  };\n}\nexport function getCardStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.card,\n    elevated: {\n      ...STYLES.card,\n      boxShadow: '0 8px 30px rgba(0,0,0,0.12)'\n    },\n    bordered: {\n      ...STYLES.card,\n      border: '2px solid #e2e8f0',\n      boxShadow: 'none'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getButtonStyle(variant = 'primary') {\n  const variants = {\n    primary: STYLES.button,\n    secondary: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n      color: '#4a5568',\n      boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n    },\n    danger: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n      boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\n    }\n  };\n  return variants[variant] || variants.primary;\n}\nexport function getInputStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.input,\n    search: {\n      ...STYLES.input,\n      backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: '12px center',\n      backgroundSize: 'clamp(16px, 4vw, 18px)',\n      paddingLeft: 'clamp(2rem, 5vw, 2.5rem)'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getUserSectionStyle() {\n  return {\n    ...STYLES.userSection,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  };\n}","map":{"version":3,"names":["v4","uuidv4","KEY","USER","USERS","PROJECTS","EPICS","ISSUES","ASSETS","NOTIFS","detailedInitialUsers","id","firstName","lastName","name","email","role","department","active","language","mobileNumber","dateFormat","passwordResetNeeded","profileFile","loadDetailedUsers","storedData","localStorage","getItem","users","JSON","parse","length","console","warn","saveDetailedUsers","error","setItem","stringify","ensure","projects","key","description","leads","initialEpics","projectId","issues","epic","epicName","title","status","priority","assignee","type","storyPoints","createdAt","Date","now","owner","userId","text","read","ts","delay","ms","Promise","resolve","setTimeout","mockLogin","user","find","u","logout","removeItem","getCurrentUser","s","listUsers","addUser","push","updateUser","updatedUser","index","findIndex","Error","deleteUser","initialLength","filter","success","listProjects","getProject","x","addProject","p","arr","updateProject","updatedProject","idx","existingProject","undefined","reject","deleteProject","filteredProjects","epicsArr","filteredEpics","e","issuesArr","newIssues","i","listEpics","epics","createEpicAPI","newEpic","slice","deleteEpicAPI","epicId","issue","listIssues","getIssue","createIssue","data","Math","floor","random","updateIssue","patch","moveIssue","listAssets","addAsset","a","listNotifs","n","markNotif","STYLES","container","maxWidth","margin","padding","fontFamily","backgroundColor","minHeight","boxSizing","header","background","color","borderRadius","marginBottom","marginLeft","boxShadow","width","card","border","transition","table","borderCollapse","borderSpacing","overflow","overflowX","userSection","paddingLeft","alignSelf","display","flexDirection","alignItems","button","cursor","buttonHover","opacity","transform","avatar","height","justifyContent","fontSize","fontWeight","badge","todo","inprogress","done","backlog","analysis","blocked","qa","milestone","P1","P2","P3","input","globalStyles","document","styleSheet","createElement","textContent","head","appendChild","getUserAvatarStyle","stringToColor","str","hash","charCodeAt","hue","getStatusBadgeStyle","getPriorityBadgeStyle","withHover","baseStyle","hoverStyle","getCardStyle","variant","variants","default","elevated","bordered","getButtonStyle","primary","secondary","danger","getInputStyle","search","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","getUserSectionStyle"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/services/mockApi.js"],"sourcesContent":["\n// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n\n\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles (unchanged)\n// export const STYLES = { /* your existing STYLES object */ };\n\n// // Initialize global CSS (unchanged)\n// const globalStyles = `/* your existing global CSS */`;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'] },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'] },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup' },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication' },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(p); }\n// export function updateProject(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); const idx = arr.findIndex(p=>p.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Project not found')); }\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(i=>i.id===id); if(idx>=0){arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(arr[idx]);} return Promise.reject(new Error('Issue not found')); }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); return Promise.resolve(); }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx = arr.findIndex(n=>n.id===id); if(idx>=0){arr[idx].read=true; localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));} return Promise.resolve(); }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   EPICS: 'tf_epics_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3',\n// };\n\n// // Styles\n// export const STYLES = {\n//   avatar: { borderRadius: '50%', width: '32px', height: '32px', display: 'flex', alignItems: 'center', justifyContent: 'center' },\n//   badge: { padding: '2px 8px', borderRadius: '12px', fontSize: '12px' },\n//   status: {\n//     todo: { backgroundColor: '#dfe1e6', color: '#172b4d' },\n//     inprogress: { backgroundColor: '#d4f4e2', color: '#2e7d32' },\n//     done: { backgroundColor: '#e3f2fd', color: '#1565c0' },\n//     backlog: { backgroundColor: '#f3e5f5', color: '#6a1b9a' },\n//     analysis: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n//     blocked: { backgroundColor: '#ffcdd2', color: '#c62828' },\n//     'code review': { backgroundColor: '#bbdefb', color: '#1565c0' },\n//     qa: { backgroundColor: '#c8e6c9', color: '#2e7d32' },\n//     milestone: { backgroundColor: '#ede7f6', color: '#4527a0' },\n//   },\n//   priority: {\n//     P1: { backgroundColor: '#ffebee', color: '#c62828' },\n//     P2: { backgroundColor: '#fff3e0', color: '#ef6c00' },\n//     P3: { backgroundColor: '#e8f5e9', color: '#388e3c' },\n//   },\n//   button: { padding: '6px 12px', borderRadius: '4px', background: 'linear-gradient(135deg, #3b82f6 0%, #2563eb 100%)', color: '#fff', border: 'none', cursor: 'pointer' },\n//   buttonHover: { background: 'linear-gradient(135deg, #60a5fa 0%, #3b82f6 100%)' },\n//   card: { background: '#fff', border: '1px solid #dfe1e6', borderRadius: '4px', padding: '8px', boxShadow: '0 1px 3px rgba(0,0,0,0.1)' },\n//   input: { padding: '8px', border: '1px solid #dfe1e6', borderRadius: '4px', width: '100%' },\n//   userSection: { padding: '12px', background: '#f4f5f7', borderRadius: '4px' },\n// };\n\n// // Initialize global CSS\n// const globalStyles = `\n//   body { font-family: 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 0; }\n//   * { box-sizing: border-box; }\n// `;\n// if (typeof document !== 'undefined') {\n//   const styleSheet = document.createElement('style');\n//   styleSheet.textContent = globalStyles;\n//   document.head.appendChild(styleSheet);\n// }\n\n// // Ensure data exists\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n//       { id: 'u4', name: 'Mark', email: 'mark@demo.com', role: 'Developer' },\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'alpha', displayName: 'Alpha', description: 'Alpha project', leads: ['u3'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'beta', displayName: 'Beta', description: 'Beta project', leads: ['u2'], type: 'Software', createdAt: Date.now(), lastUpdated: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.EPICS)) {\n//     const epics = [\n//       { id: 'e1', projectId: 'p1', name: 'Initial Setup', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n//       { id: 'e2', projectId: 'p2', name: 'Authentication', statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true },\n//     ];\n//     localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', epic: 'e2', epicName: 'Authentication', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n//       { id: 'i4', projectId: 'p1', epic: 'e1', epicName: 'Initial Setup', title: 'UI Fix', status: 'todo', priority: 'P2', assignee: 'u4', type: 'Task', storyPoints: 2, createdAt: Date.now() },\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// // ------------------ AUTH ------------------\n// export function mockLogin(email) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ------------------ USERS ------------------\n// export function listUsers() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); arr.push(u); localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(u); }\n// export function updateUser(updatedUser) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); const idx = arr.findIndex(u => u.id === updatedUser.id); if (idx>=0){arr[idx]=updatedUser; localStorage.setItem(KEY.USERS, JSON.stringify(arr)); return Promise.resolve(updatedUser);} return Promise.reject(new Error('User not found')); }\n// export function deleteUser(userId) { const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]'); localStorage.setItem(KEY.USERS, JSON.stringify(arr.filter(u=>u.id!==userId))); return Promise.resolve(); }\n\n// // ------------------ PROJECTS ------------------\n// export function listProjects() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)); return Promise.resolve(arr.find(p=>p.id===id)); }\n// export function addProject(p) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n//   const cleanName = p.name.trim().toLowerCase().replace(/\\s+/g, '-');\n//   if (arr.some(proj => proj.name.toLowerCase() === cleanName)) {\n//     return Promise.reject(new Error('Project name must be unique'));\n//   }\n//   const project = { ...p, name: cleanName, displayName: p.name.trim() };\n//   arr.push(project); \n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n//   return Promise.resolve(project); \n// }\n// export function updateProject(id, patch) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); \n//   const idx = arr.findIndex(p=>p.id===id); \n//   if(idx>=0){\n//     const cleanName = patch.name ? patch.name.trim().toLowerCase().replace(/\\s+/g, '-') : arr[idx].name;\n//     if (arr.some(p => p.name.toLowerCase() === cleanName && p.id !== id)) {\n//       return Promise.reject(new Error('Project name must be unique'));\n//     }\n//     arr[idx]={...arr[idx],...patch, name: cleanName, displayName: patch.name ? patch.name.trim() : arr[idx].displayName}; \n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr)); \n//     return Promise.resolve(arr[idx]);\n//   } \n//   return Promise.reject(new Error('Project not found')); \n// }\n// export function deleteProject(id) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]').filter(p=>p.id!==id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   // Delete related issues and epics\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.projectId!==id);\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.projectId!==id);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   return Promise.resolve();\n// }\n\n// // ------------------ EPICS ------------------\n// export function listEpics(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); if(projectId) arr = arr.filter(e=>e.projectId===projectId); return Promise.resolve(arr); }\n// export function createEpic(name, projectId) { \n//   ensure(); \n//   if(!projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]'); \n//   const epic = { id: uuidv4(), name, projectId, statuses: ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'], expanded: true }; \n//   arr.push(epic); \n//   localStorage.setItem(KEY.EPICS, JSON.stringify(arr)); \n//   return Promise.resolve(epic); \n// }\n// export function deleteEpic(epicId) {\n//   ensure();\n//   const epics = JSON.parse(localStorage.getItem(KEY.EPICS)||'[]').filter(e=>e.id!==epicId);\n//   localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n//   // Delete all issues under this epic\n//   const issues = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.epic!==epicId);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   return Promise.resolve();\n// }\n\n// // ------------------ ISSUES ------------------\n// export function listIssues(projectId) { ensure(); let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); if(projectId) arr = arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); return Promise.resolve(arr.find(i=>i.id===id)); }\n// export function createIssue(data) { \n//   ensure(); \n//   if(!data.projectId) return Promise.reject(new Error(\"ProjectId required\")); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const issue = { ...data, id: uuidv4(), createdAt: Date.now() }; \n//   arr.push(issue); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(issue); \n// }\n// export function updateIssue(id, patch) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); \n//   const idx=arr.findIndex(i=>i.id===id); \n//   if(idx>=0){\n//     arr[idx]={...arr[idx],...patch}; \n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//     return Promise.resolve(arr[idx]);\n//   } \n//   return Promise.reject(new Error('Issue not found')); \n// }\n// export function moveIssue(id, status) { return updateIssue(id, { status }); }\n// export function deleteIssue(id) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]').filter(i=>i.id!==id); \n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr)); \n//   return Promise.resolve(); \n// }\n\n// // ------------------ ASSETS ------------------\n// export function listAssets() { ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]')); }\n// export function addAsset(a) { const arr = JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS, JSON.stringify(arr)); return Promise.resolve(a); }\n\n// // ------------------ NOTIFICATIONS ------------------\n// export function listNotifs(userId) { ensure(); const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId ? arr.filter(n=>n.userId===userId) : arr); }\n// export function markNotif(id) { \n//   ensure(); \n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); \n//   const idx = arr.findIndex(n=>n.id===id); \n//   if(idx>=0){\n//     arr[idx].read=true; \n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   } \n//   return Promise.resolve(); \n// }\n\n// // ------------------ UTILS ------------------\n// export function getUserAvatarStyle(name){ return { ...STYLES.avatar, backgroundColor: stringToColor(name) }; }\n// function stringToColor(str){ let hash=0; for(let i=0;i<str.length;i++){ hash=str.charCodeAt(i)+((hash<<5)-hash); } const hue=hash%360; return `hsl(${hue},70%,60%)`; }\n// export function getStatusBadgeStyle(status){ return { ...STYLES.badge, ...STYLES.status[status] }; }\n// export function getPriorityBadgeStyle(priority){ return { ...STYLES.badge, ...STYLES.priority[priority] }; }\n// export function withHover(baseStyle, hoverStyle = STYLES.buttonHover){ return { ...baseStyle, ':hover': hoverStyle }; }\n// export function getCardStyle(variant='default'){ const variants={default:STYLES.card,elevated:{...STYLES.card,boxShadow:'0 8px 30px rgba(0,0,0,0.12)'},bordered:{...STYLES.card,border:'2px solid #e2e8f0',boxShadow:'none'}}; return variants[variant]||variants.default; }\n// export function getButtonStyle(variant='primary'){ const variants={primary:STYLES.button,secondary:{...STYLES.button,background:'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',color:'#4a5568',boxShadow:'0 4px 15px rgba(0,0,0,0.1)'},danger:{...STYLES.button,background:'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',boxShadow:'0 4px 15px rgba(245,101,101,0.3)'}}; return variants[variant]||variants.primary; }\n// export function getInputStyle(variant='default'){ const variants={default:STYLES.input,search:{...STYLES.input,backgroundImage:'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',backgroundRepeat:'no-repeat',backgroundPosition:'12px center',backgroundSize:'clamp(16px, 4vw, 18px)',paddingLeft:'clamp(2rem, 5vw, 2.5rem)'}}; return variants[variant]||variants.default; }\n// export function getUserSectionStyle(){ return { ...STYLES.userSection, width:'100%', display:'flex', flexDirection:'column', alignItems:'flex-start' }; }\n\n\n\n\n\n\n\n//////////////////////////// for boards //////////////////////////////////////////////////////////\n\n\nimport { v4 as uuidv4 } from 'uuid';\n\n// --- Local Storage Keys ---\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  EPICS: 'tf_epics_v3', // New key for epics\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3',\n};\n\n// --- Detailed Initial User Data ---\nconst detailedInitialUsers = [\n    {\n        id: 'u1',\n        firstName: 'Admin',\n        lastName: 'User',\n        name: 'Admin User',\n        email: 'admin@demo.com',\n        role: 'Admin',\n        department: 'Management',\n        active: true,\n        language: 'English',\n        mobileNumber: '555-1001',\n        dateFormat: 'YYYY-MM-DD',\n        passwordResetNeeded: false,\n        profileFile: null,\n    },\n    {\n        id: 'u2',\n        firstName: 'Dev',\n        lastName: 'Alice',\n        name: 'Dev Alice',\n        email: 'alice@demo.com',\n        role: 'Developer',\n        department: 'Engineering',\n        active: true,\n        language: 'Spanish',\n        mobileNumber: '555-2002',\n        dateFormat: 'MM/DD/YYYY',\n        passwordResetNeeded: true,\n        profileFile: null,\n    },\n    {\n        id: 'u3',\n        firstName: 'Manager',\n        lastName: 'Bob',\n        name: 'Manager Bob',\n        email: 'bob@demo.com',\n        role: 'Manager',\n        department: 'Sales',\n        active: false,\n        language: 'French',\n        mobileNumber: '555-3003',\n        dateFormat: 'DD/MM/YYYY',\n        passwordResetNeeded: false,\n        profileFile: null,\n    },\n];\n\n// --- Utility Functions for LocalStorage (Enhanced for detailed users) ---\n\nconst loadDetailedUsers = () => {\n    try {\n        const storedData = localStorage.getItem(KEY.USERS);\n        if (storedData) {\n            const users = JSON.parse(storedData);\n            if (users.length > 0 && !users[0].firstName) {\n                 console.warn(\"User data structure outdated. Re-initializing with detailed initial data.\");\n                 saveDetailedUsers(detailedInitialUsers);\n                 return detailedInitialUsers;\n            }\n            return users;\n        }\n    } catch (error) {\n        console.error(\"Error reading localStorage:\", error);\n    }\n    saveDetailedUsers(detailedInitialUsers);\n    return detailedInitialUsers;\n};\n\nconst saveDetailedUsers = (users) => {\n    try {\n        localStorage.setItem(KEY.USERS, JSON.stringify(users));\n    } catch (error) {\n        console.error(\"Error writing to localStorage:\", error);\n    }\n};\n\nlet users = loadDetailedUsers();\n\nfunction ensure() {\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [\n      { id: 'mark', key: 'MARK', name: 'Mark Project', description: 'Mark project description', leads: ['u3'] }, // Changed ID\n      { id: 'novya', key: 'NOVYA', name: 'Novya Project', description: 'Novya project description', leads: ['u2'] }, // Changed ID\n      { id: 'epsilon', key: 'EPSILON', name: 'Epsilon Project', description: 'Epsilon project description', leads: ['u1'] },\n    ];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n\n  // New: Initialize Epics\n  if (!localStorage.getItem(KEY.EPICS)) {\n    const initialEpics = [\n      { id: 'e1', projectId: 'mark', name: 'Frontend Epic' },\n      { id: 'e2', projectId: 'mark', name: 'Backend Epic' },\n      { id: 'e3', projectId: 'novya', name: 'Database Optimization' },\n      { id: 'e4', projectId: 'epsilon', name: 'UI/UX Redesign' },\n    ];\n    localStorage.setItem(KEY.EPICS, JSON.stringify(initialEpics));\n  }\n\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [\n      { id: 'i1', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Setup Mark repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n      { id: 'i2', projectId: 'mark', epic: 'e1', epicName: 'Frontend Epic', title: 'Login Mark bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n      { id: 'i3', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'OAuth Novya', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n      { id: 'i4', projectId: 'novya', epic: 'e3', epicName: 'Database Optimization', title: 'Novya Data Migration', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 8, createdAt: Date.now() },\n      { id: 'i5', projectId: 'epsilon', epic: 'e4', epicName: 'UI/UX Redesign', title: 'Epsilon Home Page Wireframe', status: 'backlog', priority: 'P3', assignee: 'u1', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n    ];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n  }\n}\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\n// --- Authentication ---\nexport async function mockLogin(email) {\n  ensure();\n  await delay(100);\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return user;\n}\n\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\n\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// --- Detailed User CRUD ---\nexport async function listUsers() {\n    ensure();\n    await delay(100);\n    return JSON.parse(JSON.stringify(users));\n}\n\nexport async function addUser(u) {\n    await delay(100);\n    users.push(u);\n    saveDetailedUsers(users);\n    return u;\n}\n\nexport async function updateUser(updatedUser) {\n    await delay(100);\n    const index = users.findIndex(u => u.id === updatedUser.id);\n    if (index === -1) {\n        throw new Error('User not found');\n    }\n    users[index] = { ...users[index], ...updatedUser };\n    saveDetailedUsers(users);\n    return users[index];\n}\n\nexport async function deleteUser(userId) {\n    await delay(100);\n    const initialLength = users.length;\n    users = users.filter(u => u.id !== userId);\n    if (users.length === initialLength) {\n        throw new Error('User not found');\n    }\n    saveDetailedUsers(users);\n    return { success: true, userId };\n}\n\n// --- Projects ---\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\n\nexport function getProject(id) {\n  ensure();\n  const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n  return Promise.resolve(projects.find(x => x.id === id));\n}\n\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\n\nexport function updateProject(id, updatedProject) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex((p) => p.id === id);\n  if (idx >= 0) {\n    const existingProject = arr[idx];\n    arr[idx] = {\n      ...existingProject,\n      ...updatedProject,\n      description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\n      leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Project not found'));\n}\n\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filteredProjects = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filteredProjects));\n\n  // Also delete epics belonging to this project\n  const epicsArr = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const filteredEpics = epicsArr.filter(e => e.projectId !== id);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(filteredEpics));\n\n  // Also delete issues belonging to this project\n  const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const newIssues = issuesArr.filter(i => i.projectId !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\n\n  return Promise.resolve();\n}\n\n// --- Epics (New/Modified) ---\nexport async function listEpics(projectId = null) {\n  ensure();\n  await delay(100);\n  let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  if (projectId) {\n    epics = epics.filter(epic => epic.projectId === projectId);\n  }\n  return epics;\n}\n\nexport async function createEpicAPI(projectId, epicName) {\n  ensure();\n  await delay(100);\n  const epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const newEpic = {\n    id: 'e' + uuidv4().slice(0, 8), // Generate a unique epic ID\n    projectId,\n    name: epicName\n  };\n  epics.push(newEpic);\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n  return newEpic;\n}\n\nexport async function deleteEpicAPI(epicId, projectId) {\n  ensure();\n  await delay(100);\n  let epics = JSON.parse(localStorage.getItem(KEY.EPICS) || '[]');\n  const initialLength = epics.length;\n  epics = epics.filter(epic => epic.id !== epicId || (projectId && epic.projectId !== projectId));\n  if (epics.length === initialLength) {\n      throw new Error('Epic not found or does not belong to the specified project.');\n  }\n  localStorage.setItem(KEY.EPICS, JSON.stringify(epics));\n\n  // Also delete issues within this epic\n  let issues = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  issues = issues.filter(issue => issue.epic !== epicId);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n\n  return { success: true, epicId };\n}\n\n\n// --- Issues ---\nexport function listIssues(projectId = null) { // Modified to accept projectId\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId); // Filter by projectId\n  return Promise.resolve(arr);\n}\n\nexport function getIssue(id) {\n  ensure();\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  return Promise.resolve(issues.find(x => x.id === id));\n}\n\nexport function createIssue(data) {\n  if (!data.projectId || !data.epic) { // Ensure both projectId and epic are present\n    return Promise.reject(new Error(\"Project ID and Epic ID are required to create an issue\"));\n  }\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = { ...data, id, createdAt: Date.now() };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\n\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = { ...arr[idx], ...patch };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Issue not found'));\n}\n\nexport function moveIssue(id, status) {\n  return updateIssue(id, { status });\n}\n\n// --- Assets ---\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\n\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\n// --- Notifications ---\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\n\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n\n// --- Styles and Utility Functions (Unchanged) ---\n\nconst STYLES = {\n  container: {\n    maxWidth: 'min(90vw, 1200px)',\n    margin: '0 0 0 2vw',\n    padding: 'clamp(1rem, 2vw, 1.5rem)',\n    fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\n    backgroundColor: '#f8fafc',\n    minHeight: '100vh',\n    boxSizing: 'border-box',\n  },\n  header: {\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    padding: 'clamp(1.5rem, 4vw, 2rem)',\n    borderRadius: '12px',\n    marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n    marginLeft: '0',\n    boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    padding: 'clamp(1rem, 3vw, 1.5rem)',\n    marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\n    marginLeft: '0',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    border: '1px solid rgba(0,0,0,0.05)',\n    transition: 'all 0.3s ease',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'separate',\n    borderSpacing: '0',\n    borderRadius: '12px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    marginLeft: '0',\n    overflowX: 'auto',\n  },\n  userSection: {\n    marginLeft: '0',\n    paddingLeft: '0',\n    alignSelf: 'flex-start',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  button: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\n    borderRadius: '8px',\n    border: 'none',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n  },\n  buttonHover: {\n    opacity: '0.9',\n    transform: 'translateY(-2px)',\n  },\n  avatar: {\n    width: 'clamp(2rem, 8vw, 2.5rem)',\n    height: 'clamp(2rem, 8vw, 2.5rem)',\n    borderRadius: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    color: 'white',\n    fontWeight: '600',\n  },\n  badge: {\n    padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '12px',\n    fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\n    fontWeight: '500',\n  },\n  status: {\n    todo: { backgroundColor: '#e2e8f0', color: '#4a5568' },\n    inprogress: { backgroundColor: '#fefcbf', color: '#744210' },\n    done: { backgroundColor: '#c6f6d5', color: '#276749' },\n    backlog: { backgroundColor: '#e0f2f7', color: '#01579b' }, // Added backlog status color\n    analysis: { backgroundColor: '#fbe9e7', color: '#bf360c' },\n    blocked: { backgroundColor: '#ffcdd2', color: '#b71c1c' },\n    'code review': { backgroundColor: '#e8eaf6', color: '#3f51b5' },\n    qa: { backgroundColor: '#e0f7fa', color: '#006064' },\n    milestone: { backgroundColor: '#fce4ec', color: '#ad1457' },\n  },\n  priority: {\n    P1: { backgroundColor: '#fed7d7', color: '#9b2c2c' },\n    P2: { backgroundColor: '#fefcbf', color: '#744210' },\n    P3: { backgroundColor: '#c6f6d5', color: '#276749' },\n  },\n  input: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '8px',\n    border: '1px solid #e2e8f0',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\nconst globalStyles = `\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 768px) {\n  .container { padding: 1rem; margin: 0; }\n  .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\n  .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\n  .table { font-size: 0.9rem; }\n  .table th, .table td { padding: 0.5rem; }\n  .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\n  .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\n}\n@media (max-width: 480px) {\n  .container { padding: 0.5rem; }\n  .header { padding: 1rem; margin-bottom: 0.75rem; }\n  .card { padding: 0.75rem; margin-bottom: 0.5rem; }\n  .table { font-size: 0.8rem; }\n  .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\n  .input { padding: 0.5rem; font-size: 0.9rem; }\n}\n`;\n\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\n\n\nexport { STYLES };\n\nexport function getUserAvatarStyle(name) {\n  return { ...STYLES.avatar, backgroundColor: stringToColor(name) };\n}\n\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsl(${hue}, 70%, 60%)`;\n}\n\nexport function getStatusBadgeStyle(status) {\n  return { ...STYLES.badge, ...STYLES.status[status] };\n}\n\nexport function getPriorityBadgeStyle(priority) {\n  return { ...STYLES.badge, ...STYLES.priority[priority] };\n}\n\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n  return {\n    ...baseStyle,\n    ':hover': hoverStyle\n  };\n}\n\nexport function getCardStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.card,\n    elevated: { ...STYLES.card, boxShadow: '0 8px 30px rgba(0,0,0,0.12)' },\n    bordered: { ...STYLES.card, border: '2px solid #e2e8f0', boxShadow: 'none' }\n  };\n  return variants[variant] || variants.default;\n}\n\nexport function getButtonStyle(variant = 'primary') {\n  const variants = {\n    primary: STYLES.button,\n    secondary: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n      color: '#4a5568',\n      boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n    },\n    danger: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n      boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\n    }\n  };\n  return variants[variant] || variants.primary;\n}\n\nexport function getInputStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.input,\n    search: {\n      ...STYLES.input,\n      backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: '12px center',\n      backgroundSize: 'clamp(16px, 4vw, 18px)',\n      paddingLeft: 'clamp(2rem, 5vw, 2.5rem)',\n    }\n  };\n  return variants[variant] || variants.default;\n}\n\nexport function getUserSectionStyle() {\n  return {\n    ...STYLES.userSection,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  };\n}\n\n\n\n\n\n\n\n\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAanC;AACA,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE,gBAAgB;EAC1BC,KAAK,EAAE,aAAa;EAAE;EACtBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,oBAAoB,GAAG,CACzB;EACIC,EAAE,EAAE,IAAI;EACRC,SAAS,EAAE,OAAO;EAClBC,QAAQ,EAAE,MAAM;EAChBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,gBAAgB;EACvBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,YAAY;EACxBC,MAAM,EAAE,IAAI;EACZC,QAAQ,EAAE,SAAS;EACnBC,YAAY,EAAE,UAAU;EACxBC,UAAU,EAAE,YAAY;EACxBC,mBAAmB,EAAE,KAAK;EAC1BC,WAAW,EAAE;AACjB,CAAC,EACD;EACIZ,EAAE,EAAE,IAAI;EACRC,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE,OAAO;EACj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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}