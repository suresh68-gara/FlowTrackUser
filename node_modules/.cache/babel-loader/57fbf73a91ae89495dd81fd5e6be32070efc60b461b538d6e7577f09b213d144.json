{"ast":null,"code":"// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\nimport { v4 as uuidv4 } from 'uuid';\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\n\n// Updated styles with responsive design\nconst STYLES = {\n  container: {\n    maxWidth: 'min(90vw, 1200px)',\n    margin: '0 0 0 2vw',\n    padding: 'clamp(1rem, 2vw, 1.5rem)',\n    fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\n    backgroundColor: '#f8fafc',\n    minHeight: '100vh',\n    boxSizing: 'border-box'\n  },\n  header: {\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    padding: 'clamp(1.5rem, 4vw, 2rem)',\n    borderRadius: '12px',\n    marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n    marginLeft: '0',\n    boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    padding: 'clamp(1rem, 3vw, 1.5rem)',\n    marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\n    marginLeft: '0',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    border: '1px solid rgba(0,0,0,0.05)',\n    transition: 'all 0.3s ease',\n    width: '100%',\n    boxSizing: 'border-box'\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'separate',\n    borderSpacing: '0',\n    borderRadius: '12px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    marginLeft: '0',\n    overflowX: 'auto'\n  },\n  userSection: {\n    marginLeft: '0',\n    paddingLeft: '0',\n    alignSelf: 'flex-start',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  button: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\n    borderRadius: '8px',\n    border: 'none',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease'\n  },\n  buttonHover: {\n    opacity: '0.9',\n    transform: 'translateY(-2px)'\n  },\n  avatar: {\n    width: 'clamp(2rem, 8vw, 2.5rem)',\n    height: 'clamp(2rem, 8vw, 2.5rem)',\n    borderRadius: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    color: 'white',\n    fontWeight: '600'\n  },\n  badge: {\n    padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '12px',\n    fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\n    fontWeight: '500'\n  },\n  status: {\n    todo: {\n      backgroundColor: '#e2e8f0',\n      color: '#4a5568'\n    },\n    inprogress: {\n      backgroundColor: '#fefcbf',\n      color: '#744210'\n    },\n    done: {\n      backgroundColor: '#c6f6d5',\n      color: '#276749'\n    }\n  },\n  priority: {\n    P1: {\n      backgroundColor: '#fed7d7',\n      color: '#9b2c2c'\n    },\n    P2: {\n      backgroundColor: '#fefcbf',\n      color: '#744210'\n    },\n    P3: {\n      backgroundColor: '#c6f6d5',\n      color: '#276749'\n    }\n  },\n  input: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '8px',\n    border: '1px solid #e2e8f0',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    width: '100%',\n    boxSizing: 'border-box'\n  }\n};\n\n// CSS Animations\nconst globalStyles = `\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 768px) {\n  .container { padding: 1rem; margin: 0; }\n  .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\n  .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\n  .table { font-size: 0.9rem; }\n  .table th, .table td { padding: 0.5rem; }\n  .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\n  .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\n}\n@media (max-width: 480px) {\n  .container { padding: 0.5rem; }\n  .header { padding: 1rem; margin-bottom: 0.75rem; }\n  .card { padding: 0.75rem; margin-bottom: 0.5rem; }\n  .table { font-size: 0.8rem; }\n  .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\n  .input { padding: 0.5rem; font-size: 0.9rem; }\n}\n`;\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [{\n      id: 'u1',\n      name: 'Admin User',\n      email: 'admin@demo.com',\n      role: 'Admin'\n    }, {\n      id: 'u2',\n      name: 'Dev Alice',\n      email: 'alice@demo.com',\n      role: 'Developer'\n    }, {\n      id: 'u3',\n      name: 'Manager Bob',\n      email: 'bob@demo.com',\n      role: 'Manager'\n    }];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [{\n      id: 'p1',\n      key: 'ALPHA',\n      name: 'Alpha',\n      description: 'Alpha project',\n      leads: ['u3']\n    }, {\n      id: 'p2',\n      key: 'BETA',\n      name: 'Beta',\n      description: 'Beta project',\n      leads: ['u2']\n    }];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [{\n      id: 'i1',\n      projectId: 'p1',\n      title: 'Setup repo',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 3,\n      createdAt: Date.now()\n    }, {\n      id: 'i2',\n      projectId: 'p1',\n      title: 'Login bug',\n      status: 'inprogress',\n      priority: 'P1',\n      assignee: 'u2',\n      type: 'Bug',\n      storyPoints: 1,\n      createdAt: Date.now()\n    }, {\n      id: 'i3',\n      projectId: 'p2',\n      title: 'OAuth',\n      status: 'done',\n      priority: 'P3',\n      assignee: 'u3',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{\n      id: 'a1',\n      name: 'Dev Laptop',\n      type: 'Laptop',\n      owner: 'u2',\n      status: 'active'\n    }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{\n      id: uuidv4(),\n      userId: 'u2',\n      text: 'Assigned i1',\n      read: false,\n      ts: Date.now()\n    }]));\n  }\n}\n\n// Authentication\nexport function mockLogin(email) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// User CRUD\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\nexport function updateUser(updatedUser) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const idx = arr.findIndex(u => u.id === updatedUser.id);\n  if (idx >= 0) {\n    arr[idx] = updatedUser;\n    localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n    return Promise.resolve(updatedUser);\n  }\n  return Promise.reject(new Error('User not found'));\n}\nexport function deleteUser(userId) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const filtered = arr.filter(u => u.id !== userId);\n  localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n  return Promise.resolve();\n}\n\n// Projects\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\nexport function getProject(id) {\n  ensure();\n  const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n  return Promise.resolve(projects.find(x => x.id === id));\n}\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\nexport function updateProject(id, updatedProject) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    const existingProject = arr[idx];\n    arr[idx] = {\n      ...existingProject,\n      ...updatedProject,\n      description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\n      leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Project not found'));\n}\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n\n  // Also delete issues belonging to this project → avoids shared board effect\n  const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const newIssues = issuesArr.filter(i => i.projectId !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\n  return Promise.resolve();\n}\n\n// Issues\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\nexport function getIssue(id) {\n  ensure();\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  return Promise.resolve(issues.find(x => x.id === id));\n}\nexport function createIssue(data) {\n  if (!data.projectId) {\n    return Promise.reject(new Error(\"Project ID is required to create an issue\"));\n  }\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = {\n    ...data,\n    id,\n    createdAt: Date.now()\n  };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Issue not found'));\n}\nexport function moveIssue(id, status) {\n  return updateIssue(id, {\n    status\n  });\n}\n\n// Assets\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\n// Notifications\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n\n// Export styles\nexport { STYLES };\nexport function getUserAvatarStyle(name) {\n  return {\n    ...STYLES.avatar,\n    backgroundColor: stringToColor(name)\n  };\n}\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsl(${hue}, 70%, 60%)`;\n}\nexport function getStatusBadgeStyle(status) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.status[status]\n  };\n}\nexport function getPriorityBadgeStyle(priority) {\n  return {\n    ...STYLES.badge,\n    ...STYLES.priority[priority]\n  };\n}\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n  return {\n    ...baseStyle,\n    ':hover': hoverStyle\n  };\n}\nexport function getCardStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.card,\n    elevated: {\n      ...STYLES.card,\n      boxShadow: '0 8px 30px rgba(0,0,0,0.12)'\n    },\n    bordered: {\n      ...STYLES.card,\n      border: '2px solid #e2e8f0',\n      boxShadow: 'none'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getButtonStyle(variant = 'primary') {\n  const variants = {\n    primary: STYLES.button,\n    secondary: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n      color: '#4a5568',\n      boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n    },\n    danger: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n      boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\n    }\n  };\n  return variants[variant] || variants.primary;\n}\nexport function getInputStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.input,\n    search: {\n      ...STYLES.input,\n      backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: '12px center',\n      backgroundSize: 'clamp(16px, 4vw, 18px)',\n      paddingLeft: 'clamp(2rem, 5vw, 2.5rem)'\n    }\n  };\n  return variants[variant] || variants.default;\n}\nexport function getUserSectionStyle() {\n  return {\n    ...STYLES.userSection,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  };\n}","map":{"version":3,"names":["v4","uuidv4","KEY","USER","USERS","PROJECTS","ISSUES","ASSETS","NOTIFS","STYLES","container","maxWidth","margin","padding","fontFamily","backgroundColor","minHeight","boxSizing","header","background","color","borderRadius","marginBottom","marginLeft","boxShadow","width","card","border","transition","table","borderCollapse","borderSpacing","overflow","overflowX","userSection","paddingLeft","alignSelf","display","flexDirection","alignItems","button","cursor","buttonHover","opacity","transform","avatar","height","justifyContent","fontSize","fontWeight","badge","status","todo","inprogress","done","priority","P1","P2","P3","input","globalStyles","document","styleSheet","createElement","textContent","head","appendChild","ensure","localStorage","getItem","users","id","name","email","role","setItem","JSON","stringify","projects","key","description","leads","issues","projectId","title","assignee","type","storyPoints","createdAt","Date","now","owner","userId","text","read","ts","mockLogin","parse","user","find","u","Promise","resolve","logout","removeItem","getCurrentUser","s","listUsers","addUser","arr","push","updateUser","updatedUser","idx","findIndex","reject","Error","deleteUser","filtered","filter","listProjects","getProject","x","addProject","p","updateProject","updatedProject","existingProject","undefined","deleteProject","issuesArr","newIssues","i","listIssues","getIssue","createIssue","data","Math","floor","random","issue","updateIssue","patch","moveIssue","listAssets","addAsset","a","listNotifs","n","markNotif","getUserAvatarStyle","stringToColor","str","hash","length","charCodeAt","hue","getStatusBadgeStyle","getPriorityBadgeStyle","withHover","baseStyle","hoverStyle","getCardStyle","variant","variants","default","elevated","bordered","getButtonStyle","primary","secondary","danger","getInputStyle","search","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","getUserSectionStyle"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/services/mockApi.js"],"sourcesContent":["\n// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n\n\n\n// for mounika\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n//       { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n//       { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n//       { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n//   }\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n//   }\n// }\n\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS));\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = JSON.parse(localStorage.getItem(KEY.USERS)) || [];\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)) || []);\n// }\n\n// export function addUser(u) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   arr.push(u);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n//   const filtered = arr.filter(u => u.id !== id);\n//   localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []);\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.PROJECTS)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function addProject(p) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = JSON.parse(localStorage.getItem(KEY.ISSUES)) || [];\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(\n//     (JSON.parse(localStorage.getItem(KEY.ISSUES)) || []).find(x => x.id === id)\n//   );\n// }\n\n// export function createIssue(data) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)) || []);\n// }\n\n// export function addAsset(a) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n//   arr.push(a);\n//   localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\n\n\n\n// //today\n// import { v4 as uuidv4 } from 'uuid';\n\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS: 'tf_users_v3',\n//   PROJECTS: 'tf_projects_v3',\n//   ISSUES: 'tf_issues_v3',\n//   ASSETS: 'tf_assets_v3',\n//   NOTIFS: 'tf_notifs_v3'\n// };\n\n// function ensure() {\n//   if (!localStorage.getItem(KEY.USERS)) {\n//     const users = [\n//       { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n//       { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n//       { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n//     ];\n//     localStorage.setItem(KEY.USERS, JSON.stringify(users));\n//   }\n\n//   if (!localStorage.getItem(KEY.PROJECTS)) {\n//     const projects = [\n//       {\n//         id: 'p1',\n//         key: 'ALPHA',\n//         name: 'Alpha',\n//         description: 'Alpha project',\n//         leads: ['u3'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       },\n//       {\n//         id: 'p2',\n//         key: 'BETA',\n//         name: 'Beta',\n//         description: 'Beta project',\n//         leads: ['u2'],\n//         createdAt: Date.now(),\n//         lastUpdated: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n//   }\n\n//   if (!localStorage.getItem(KEY.ISSUES)) {\n//     const issues = [\n//       {\n//         id: 'i1',\n//         projectId: 'p1',\n//         title: 'Setup repo',\n//         status: 'todo',\n//         priority: 'P2',\n//         assignee: 'u2',\n//         type: 'Task',\n//         storyPoints: 3,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i2',\n//         projectId: 'p1',\n//         title: 'Login bug',\n//         status: 'inprogress',\n//         priority: 'P1',\n//         assignee: 'u2',\n//         type: 'Bug',\n//         storyPoints: 1,\n//         createdAt: Date.now()\n//       },\n//       {\n//         id: 'i3',\n//         projectId: 'p2',\n//         title: 'OAuth',\n//         status: 'done',\n//         priority: 'P3',\n//         assignee: 'u3',\n//         type: 'Story',\n//         storyPoints: 5,\n//         createdAt: Date.now()\n//       }\n//     ];\n//     localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n//   }\n\n//   if (!localStorage.getItem(KEY.ASSETS)) {\n//     localStorage.setItem(\n//       KEY.ASSETS,\n//       JSON.stringify([\n//         { id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }\n//       ])\n//     );\n//   }\n\n//   if (!localStorage.getItem(KEY.NOTIFS)) {\n//     localStorage.setItem(\n//       KEY.NOTIFS,\n//       JSON.stringify([\n//         { id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }\n//       ])\n//     );\n//   }\n// }\n\n// // ---------- HELPERS ----------\n// function safeParse(key) {\n//   try {\n//     const raw = localStorage.getItem(key);\n//     const parsed = raw ? JSON.parse(raw) : [];\n//     return Array.isArray(parsed) ? parsed : [];\n//   } catch {\n//     return [];\n//   }\n// }\n\n// function save(key, arr) {\n//   localStorage.setItem(key, JSON.stringify(arr));\n// }\n\n// // ---------- AUTH ----------\n// export function mockLogin(email, password) {\n//   ensure();\n//   const users = safeParse(KEY.USERS);\n//   const user = users.find(u => u.email === email) || users[0];\n//   localStorage.setItem(KEY.USER, JSON.stringify(user));\n//   return Promise.resolve(user);\n// }\n\n// export function logout() {\n//   localStorage.removeItem(KEY.USER);\n//   return Promise.resolve();\n// }\n\n// export function getCurrentUser() {\n//   const s = localStorage.getItem(KEY.USER);\n//   return s ? JSON.parse(s) : null;\n// }\n\n// // ---------- USERS ----------\n// export function listUsers() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.USERS));\n// }\n\n// export function addUser(u) {\n//   const arr = safeParse(KEY.USERS);\n//   arr.push(u);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(u);\n// }\n\n// export function updateUser(id, patch) {\n//   const arr = safeParse(KEY.USERS);\n//   const idx = arr.findIndex(u => u.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.USERS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('User not found');\n// }\n\n// export function deleteUser(id) {\n//   const arr = safeParse(KEY.USERS).filter(u => u.id !== id);\n//   save(KEY.USERS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- PROJECTS ----------\n// export function listProjects() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS));\n// }\n\n// export function getProject(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.PROJECTS).find(x => x.id === id));\n// }\n\n// export function addProject(p) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(p);\n// }\n\n// export function updateProject(id, patch) {\n//   const arr = safeParse(KEY.PROJECTS);\n//   const idx = arr.findIndex(p => p.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n//     save(KEY.PROJECTS, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function deleteProject(id) {\n//   const arr = safeParse(KEY.PROJECTS).filter(p => p.id !== id);\n//   save(KEY.PROJECTS, arr);\n//   return Promise.resolve(true);\n// }\n\n// // ---------- ISSUES ----------\n// export function listIssues(projectId) {\n//   ensure();\n//   let arr = safeParse(KEY.ISSUES);\n//   if (projectId) arr = arr.filter(i => i.projectId === projectId);\n//   return Promise.resolve(arr);\n// }\n\n// export function getIssue(id) {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ISSUES).find(x => x.id === id));\n// }\n\n// export function createIssue(data) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const id = 'i' + Math.floor(Math.random() * 100000);\n//   const issue = { ...data, id, createdAt: Date.now() };\n//   arr.push(issue);\n//   save(KEY.ISSUES, arr);\n//   return Promise.resolve(issue);\n// }\n\n// export function updateIssue(id, patch) {\n//   const arr = safeParse(KEY.ISSUES);\n//   const idx = arr.findIndex(x => x.id === id);\n//   if (idx >= 0) {\n//     arr[idx] = { ...arr[idx], ...patch };\n//     save(KEY.ISSUES, arr);\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Issue not found');\n// }\n\n// export function moveIssue(id, status) {\n//   return updateIssue(id, { status });\n// }\n\n// // ---------- ASSETS ----------\n// export function listAssets() {\n//   ensure();\n//   return Promise.resolve(safeParse(KEY.ASSETS));\n// }\n\n// export function addAsset(a) {\n//   const arr = safeParse(KEY.ASSETS);\n//   arr.push(a);\n//   save(KEY.ASSETS, arr);\n//   return Promise.resolve(a);\n// }\n\n// // ---------- NOTIFS ----------\n// export function listNotifs(userId) {\n//   ensure();\n//   const arr = safeParse(KEY.NOTIFS);\n//   return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n// }\n\n// export function markNotif(id) {\n//   const arr = safeParse(KEY.NOTIFS);\n//   const idx = arr.findIndex(n => n.id === id);\n//   if (idx >= 0) {\n//     arr[idx].read = true;\n//     save(KEY.NOTIFS, arr);\n//   }\n//   return Promise.resolve();\n// }\n\n\n\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3',\n};\n\n// Updated styles with responsive design\nconst STYLES = {\n  container: {\n    maxWidth: 'min(90vw, 1200px)',\n    margin: '0 0 0 2vw',\n    padding: 'clamp(1rem, 2vw, 1.5rem)',\n    fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif\",\n    backgroundColor: '#f8fafc',\n    minHeight: '100vh',\n    boxSizing: 'border-box',\n  },\n  header: {\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    padding: 'clamp(1.5rem, 4vw, 2rem)',\n    borderRadius: '12px',\n    marginBottom: 'clamp(1rem, 3vw, 1.5rem)',\n    marginLeft: '0',\n    boxShadow: '0 10px 30px rgba(0,0,0,0.1)',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: '12px',\n    padding: 'clamp(1rem, 3vw, 1.5rem)',\n    marginBottom: 'clamp(0.75rem, 2vw, 1rem)',\n    marginLeft: '0',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    border: '1px solid rgba(0,0,0,0.05)',\n    transition: 'all 0.3s ease',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n  table: {\n    width: '100%',\n    borderCollapse: 'separate',\n    borderSpacing: '0',\n    borderRadius: '12px',\n    overflow: 'hidden',\n    boxShadow: '0 4px 20px rgba(0,0,0,0.08)',\n    marginLeft: '0',\n    overflowX: 'auto',\n  },\n  userSection: {\n    marginLeft: '0',\n    paddingLeft: '0',\n    alignSelf: 'flex-start',\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  },\n  button: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem) clamp(1rem, 2vw, 1.5rem)',\n    borderRadius: '8px',\n    border: 'none',\n    background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n    color: 'white',\n    cursor: 'pointer',\n    transition: 'all 0.3s ease',\n  },\n  buttonHover: {\n    opacity: '0.9',\n    transform: 'translateY(-2px)',\n  },\n  avatar: {\n    width: 'clamp(2rem, 8vw, 2.5rem)',\n    height: 'clamp(2rem, 8vw, 2.5rem)',\n    borderRadius: '50%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    color: 'white',\n    fontWeight: '600',\n  },\n  badge: {\n    padding: 'clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '12px',\n    fontSize: 'clamp(0.7rem, 1.5vw, 0.9rem)',\n    fontWeight: '500',\n  },\n  status: {\n    todo: { backgroundColor: '#e2e8f0', color: '#4a5568' },\n    inprogress: { backgroundColor: '#fefcbf', color: '#744210' },\n    done: { backgroundColor: '#c6f6d5', color: '#276749' },\n  },\n  priority: {\n    P1: { backgroundColor: '#fed7d7', color: '#9b2c2c' },\n    P2: { backgroundColor: '#fefcbf', color: '#744210' },\n    P3: { backgroundColor: '#c6f6d5', color: '#276749' },\n  },\n  input: {\n    padding: 'clamp(0.5rem, 1.5vw, 0.75rem)',\n    borderRadius: '8px',\n    border: '1px solid #e2e8f0',\n    fontSize: 'clamp(0.8rem, 2vw, 1rem)',\n    width: '100%',\n    boxSizing: 'border-box',\n  },\n};\n\n// CSS Animations\nconst globalStyles = `\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n@media (max-width: 768px) {\n  .container { padding: 1rem; margin: 0; }\n  .header { padding: 1.2rem; margin-bottom: 1rem; border-radius: 8px; }\n  .card { padding: 1rem; margin-bottom: 0.75rem; border-radius: 8px; }\n  .table { font-size: 0.9rem; }\n  .table th, .table td { padding: 0.5rem; }\n  .button { padding: 0.5rem 1rem; font-size: 0.9rem; }\n  .avatar { width: 2rem; height: 2rem; font-size: 0.9rem; }\n}\n@media (max-width: 480px) {\n  .container { padding: 0.5rem; }\n  .header { padding: 1rem; margin-bottom: 0.75rem; }\n  .card { padding: 0.75rem; margin-bottom: 0.5rem; }\n  .table { font-size: 0.8rem; }\n  .button { padding: 0.4rem 0.8rem; font-size: 0.8rem; }\n  .input { padding: 0.5rem; font-size: 0.9rem; }\n}\n`;\n\nif (typeof document !== 'undefined') {\n  const styleSheet = document.createElement('style');\n  styleSheet.textContent = globalStyles;\n  document.head.appendChild(styleSheet);\n}\n\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [\n      { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n      { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n      { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' },\n    ];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [\n      { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'] },\n      { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'] },\n    ];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [\n      { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n      { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n      { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() },\n    ];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n  }\n}\n\n// Authentication\nexport function mockLogin(email) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\n\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\n\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\n// User CRUD\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\n\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\n\nexport function updateUser(updatedUser) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const idx = arr.findIndex((u) => u.id === updatedUser.id);\n  if (idx >= 0) {\n    arr[idx] = updatedUser;\n    localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n    return Promise.resolve(updatedUser);\n  }\n  return Promise.reject(new Error('User not found'));\n}\n\nexport function deleteUser(userId) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const filtered = arr.filter(u => u.id !== userId);\n  localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n  return Promise.resolve();\n}\n\n// Projects\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\n\nexport function getProject(id) {\n  ensure();\n  const projects = JSON.parse(localStorage.getItem(KEY.PROJECTS));\n  return Promise.resolve(projects.find(x => x.id === id));\n}\n\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\n\nexport function updateProject(id, updatedProject) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex((p) => p.id === id);\n  if (idx >= 0) {\n    const existingProject = arr[idx];\n    arr[idx] = { \n      ...existingProject, \n      ...updatedProject,\n      description: updatedProject.description !== undefined ? updatedProject.description : existingProject.description,\n      leads: updatedProject.leads !== undefined ? updatedProject.leads : existingProject.leads\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Project not found'));\n}\n\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n\n  // Also delete issues belonging to this project → avoids shared board effect\n  const issuesArr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const newIssues = issuesArr.filter(i => i.projectId !== id);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(newIssues));\n\n  return Promise.resolve();\n}\n\n// Issues\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\n\nexport function getIssue(id) {\n  ensure();\n  const issues = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  return Promise.resolve(issues.find(x => x.id === id));\n}\n\nexport function createIssue(data) {\n  if (!data.projectId) {\n    return Promise.reject(new Error(\"Project ID is required to create an issue\"));\n  }\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = { ...data, id, createdAt: Date.now() };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\n\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = { ...arr[idx], ...patch };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject(new Error('Issue not found'));\n}\n\nexport function moveIssue(id, status) {\n  return updateIssue(id, { status });\n}\n\n// Assets\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\n\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\n// Notifications\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\n\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n\n// Export styles\nexport { STYLES };\n\nexport function getUserAvatarStyle(name) {\n  return { ...STYLES.avatar, backgroundColor: stringToColor(name) };\n}\n\nfunction stringToColor(str) {\n  let hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  const hue = hash % 360;\n  return `hsl(${hue}, 70%, 60%)`;\n}\n\nexport function getStatusBadgeStyle(status) {\n  return { ...STYLES.badge, ...STYLES.status[status] };\n}\n\nexport function getPriorityBadgeStyle(priority) {\n  return { ...STYLES.badge, ...STYLES.priority[priority] };\n}\n\nexport function withHover(baseStyle, hoverStyle = STYLES.buttonHover) {\n  return {\n    ...baseStyle,\n    ':hover': hoverStyle\n  };\n}\n\nexport function getCardStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.card,\n    elevated: { ...STYLES.card, boxShadow: '0 8px 30px rgba(0,0,0,0.12)' },\n    bordered: { ...STYLES.card, border: '2px solid #e2e8f0', boxShadow: 'none' }\n  };\n  return variants[variant] || variants.default;\n}\n\nexport function getButtonStyle(variant = 'primary') {\n  const variants = {\n    primary: STYLES.button,\n    secondary: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #e2e8f0 0%, #cbd5e0 100%)',\n      color: '#4a5568',\n      boxShadow: '0 4px 15px rgba(0,0,0,0.1)'\n    },\n    danger: {\n      ...STYLES.button,\n      background: 'linear-gradient(135deg, #fc8181 0%, #f56565 100%)',\n      boxShadow: '0 4px 15px rgba(245, 101, 101, 0.3)'\n    }\n  };\n  return variants[variant] || variants.primary;\n}\n\nexport function getInputStyle(variant = 'default') {\n  const variants = {\n    default: STYLES.input,\n    search: {\n      ...STYLES.input,\n      backgroundImage: 'url(\"data:image/svg+xml,%3Csvg xmlns=\\'http://www.w3.org/2000/svg\\' fill=\\'none\\' viewBox=\\'0 0 24 24\\' stroke=\\'%2394a3b8\\'%3E%3Cpath stroke-linecap=\\'round\\' stroke-linejoin=\\'round\\' stroke-width=\\'2\\' d=\\'M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\\' /%3E%3C/svg%3E\")',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: '12px center',\n      backgroundSize: 'clamp(16px, 4vw, 18px)',\n      paddingLeft: 'clamp(2rem, 5vw, 2.5rem)',\n    }\n  };\n  return variants[variant] || variants.default;\n}\n\nexport function getUserSectionStyle() {\n  return {\n    ...STYLES.userSection,\n    width: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n  };\n}\n\n\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAanC,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAE;IACTC,QAAQ,EAAE,mBAAmB;IAC7BC,MAAM,EAAE,WAAW;IACnBC,OAAO,EAAE,0BAA0B;IACnCC,UAAU,EAAE,oEAAoE;IAChFC,eAAe,EAAE,SAAS;IAC1BC,SAAS,EAAE,OAAO;IAClBC,SAAS,EAAE;EACb,CAAC;EACDC,MAAM,EAAE;IACNC,UAAU,EAAE,mDAAmD;IAC/DC,KAAK,EAAE,OAAO;IACdP,OAAO,EAAE,0BAA0B;IACnCQ,YAAY,EAAE,MAAM;IACpBC,YAAY,EAAE,0BAA0B;IACxCC,UAAU,EAAE,GAAG;IACfC,SAAS,EAAE,6BAA6B;IACxCC,KAAK,EAAE,MAAM;IACbR,SAAS,EAAE;EACb,CAAC;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}