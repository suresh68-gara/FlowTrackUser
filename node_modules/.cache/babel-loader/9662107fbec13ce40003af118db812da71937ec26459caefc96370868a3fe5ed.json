{"ast":null,"code":"\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../context/AuthContext\"; // Adjusted path to src/context/AuthContext.js\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(\"\"); // Added error state for UI feedback\n//   const [isHovered, setIsHovered] = useState(false);\n//   const [activeInput, setActiveInput] = useState(null);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n//   // Floating animation elements\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n\n//   const navigate = useNavigate();\n//   const { login } = useAuth();\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 20 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs\n//     const newOrbs = Array.from({ length: 8 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 150 + 50,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler\n//     const handleMouseMove = (e) => {\n//       setMousePosition({\n//         x: (e.clientX / window.innerWidth) * 100,\n//         y: (e.clientY / window.innerHeight) * 100,\n//       });\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError(\"\");\n\n//     // Basic client-side validation\n//     if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n//       setError(\"Please enter a valid email address.\");\n//       setIsLoading(false);\n//       return;\n//     }\n//     if (password.length < 6) {\n//       setError(\"Password must be at least 6 characters long.\");\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Simulate API call\n//       await new Promise((resolve) => setTimeout(resolve, 1500));\n\n//       const userData = {\n//         name: email.split(\"@\")[0],\n//         email,\n//         avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(\n//           email.split(\"@\")[0]\n//         )}&background=3B82F6&color=fff`,\n//       };\n\n//       // Update AuthContext and localStorage\n//       login(userData);\n\n//       console.log(\"Login successful:\", userData);\n\n//       // Navigate to ForYou page\n//       navigate(\"/for-you\", { replace: true });\n//     } catch (error) {\n//       console.error(\"Login failed:\", error);\n//       setError(\"Login failed. Please check your credentials.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: \"20px\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\n//       `,\n//       transition: \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: 0.4,\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     card: {\n//       backgroundColor: \"rgba(15, 15, 25, 0.7)\",\n//       backdropFilter: \"blur(25px)\",\n//       padding: \"50px 40px\",\n//       borderRadius: \"24px\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       width: \"100%\",\n//       maxWidth: \"420px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       position: \"relative\",\n//       zIndex: 10,\n//       animation: \"slideUp 1s ease-out\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: \"24px 24px 0 0\",\n//     },\n//     logo: {\n//       textAlign: \"center\",\n//       marginBottom: \"40px\",\n//       animation: \"fadeIn 1.2s ease-out\",\n//     },\n//     logoText: {\n//       fontSize: \"44px\",\n//       fontWeight: \"900\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0\",\n//       letterSpacing: \"-0.02em\",\n//       animation: \"textShimmer 3s ease-in-out infinite\",\n//     },\n//     tagline: {\n//       textAlign: \"center\",\n//       color: \"#94A3B8\",\n//       fontSize: \"14px\",\n//       marginTop: \"8px\",\n//       fontWeight: \"400\",\n//       letterSpacing: \"0.02em\",\n//     },\n//     title: {\n//       textAlign: \"center\",\n//       marginBottom: \"35px\",\n//       fontSize: \"28px\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       marginTop: \"0\",\n//     },\n//     inputGroup: {\n//       marginBottom: \"25px\",\n//       position: \"relative\",\n//     },\n//     label: {\n//       display: \"block\",\n//       marginBottom: \"8px\",\n//       fontSize: \"14px\",\n//       fontWeight: \"600\",\n//       color: \"#E2E8F0\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     inputContainer: {\n//       position: \"relative\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     input: {\n//       width: \"100%\",\n//       padding: \"16px 50px 16px 20px\",\n//       borderRadius: \"16px\",\n//       border: \"2px solid rgba(255, 255, 255, 0.08)\",\n//       fontSize: \"15px\",\n//       color: \"#F1F5F9\",\n//       backgroundColor: \"rgba(255, 255, 255, 0.03)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       boxSizing: \"border-box\",\n//       fontFamily: \"inherit\",\n//     },\n//     inputFocus: {\n//       borderColor: \"rgba(96, 165, 250, 0.5)\",\n//       backgroundColor: \"rgba(96, 165, 250, 0.05)\",\n//       boxShadow: \"0 0 0 4px rgba(96, 165, 250, 0.1)\",\n//       transform: \"translateY(-2px)\",\n//     },\n//     inputIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#94A3B8\",\n//       transition: \"all 0.3s ease\",\n//       fontSize: \"18px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//     },\n//     eyeIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#94A3B8\",\n//       transition: \"all 0.3s ease\",\n//       cursor: \"pointer\",\n//       fontSize: \"18px\",\n//       background: \"none\",\n//       border: \"none\",\n//       padding: \"5px\",\n//       borderRadius: \"8px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//     },\n//     eyeIconHover: {\n//       backgroundColor: \"rgba(96, 165, 250, 0.1)\",\n//       color: \"#60A5FA\",\n//     },\n//     button: {\n//       width: \"100%\",\n//       padding: \"16px\",\n//       border: \"none\",\n//       borderRadius: \"16px\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       color: \"#FFFFFF\",\n//       fontWeight: \"600\",\n//       fontSize: \"15px\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.3)\",\n//     },\n//     buttonHover: {\n//       transform: \"translateY(-3px)\",\n//       boxShadow: \"0 12px 40px rgba(96, 165, 250, 0.4)\",\n//       filter: \"brightness(1.1)\",\n//     },\n//     buttonDisabled: {\n//       opacity: \"0.6\",\n//       cursor: \"not-allowed\",\n//       transform: \"none\",\n//     },\n//     buttonGlow: {\n//       position: \"absolute\",\n//       top: \"0\",\n//       left: \"-100%\",\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent)\",\n//       transition: \"left 0.6s ease\",\n//     },\n//     loadingSpinner: {\n//       width: \"20px\",\n//       height: \"20px\",\n//       border: \"2px solid rgba(255,255,255,0.3)\",\n//       borderTop: \"2px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//       margin: \"0 auto\",\n//     },\n//     footer: {\n//       textAlign: \"center\",\n//       marginTop: \"30px\",\n//       paddingTop: \"25px\",\n//       borderTop: \"1px solid rgba(255, 255, 255, 0.08)\",\n//     },\n//     footerText: {\n//       color: \"#94A3B8\",\n//       fontSize: \"12px\",\n//       margin: \"0\",\n//     },\n//     link: {\n//       color: \"#60A5FA\",\n//       textDecoration: \"none\",\n//       fontWeight: \"500\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\",\n//     },\n//     linkHover: {\n//       color: \"#A855F7\",\n//     },\n//     errorText: {\n//       color: \"#EC4899\",\n//       textAlign: \"center\",\n//       fontSize: \"14px\",\n//       marginTop: \"15px\",\n//     },\n//   };\n\n//   const isFormValid = email && password;\n//   const [isEyeHovered, setIsEyeHovered] = useState(false);\n\n//   // SVG Icons\n//   const EmailIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n//       <polyline points=\"22,6 12,13 2,6\" />\n//     </svg>\n//   );\n\n//   const EyeIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n//       <circle cx=\"12\" cy=\"12\" r=\"3\" />\n//     </svg>\n//   );\n\n//   const EyeOffIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\" />\n//       <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n//     </svg>\n//   );\n\n//   const LockIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\" />\n//       <path d=\"M7 11V7a5 5 0 0 1 10 0v4\" />\n//     </svg>\n//   );\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Login Card */}\n//       <div style={styles.card}>\n//         <div style={styles.cardGlow} />\n\n//         {/* Logo Section */}\n//         <div style={styles.logo}>\n//           <h1 style={styles.logoText}>Flow Track</h1>\n//           <p style={styles.tagline}>Modern Project Management Solution</p>\n//         </div>\n\n//         <h2 style={styles.title}>Welcome User</h2>\n\n//         <form onSubmit={handleSubmit}>\n//           {/* Email Input */}\n//           <div style={styles.inputGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>\n//               Email Address\n//             </label>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 onFocus={() => setActiveInput(\"email\")}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === \"email\" || email ? styles.inputFocus : {}),\n//                 }}\n//                 aria-label=\"Email address\"\n//                 disabled={isLoading}\n//               />\n//               <span style={styles.inputIcon}>\n//                 <EmailIcon />\n//               </span>\n//             </div>\n//           </div>\n\n//           {/* Password Input */}\n//           <div style={styles.inputGroup}>\n//             <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n//               <label htmlFor=\"password\" style={styles.label}>\n//                 Password\n//               </label>\n//             </div>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 id=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 onFocus={() => setActiveInput(\"password\")}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === \"password\" || password ? styles.inputFocus : {}),\n//                 }}\n//                 aria-label=\"Password\"\n//                 disabled={isLoading}\n//               />\n//               <span style={styles.inputIcon}>\n//                 <LockIcon />\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 style={{\n//                   ...styles.eyeIcon,\n//                   ...(isEyeHovered ? styles.eyeIconHover : {}),\n//                 }}\n//                 onClick={togglePasswordVisibility}\n//                 onMouseEnter={() => setIsEyeHovered(true)}\n//                 onMouseLeave={() => setIsEyeHovered(false)}\n//                 title={showPassword ? \"Hide password\" : \"Show password\"}\n//                 disabled={isLoading}\n//               >\n//                 {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n//               </button>\n//             </div>\n//           </div>\n\n//           {/* Error Message */}\n//           {error && <p style={styles.errorText}>{error}</p>}\n\n//           {/* Submit Button */}\n//           <button\n//             type=\"submit\"\n//             style={{\n//               ...styles.button,\n//               ...(isFormValid && !isLoading && isHovered ? styles.buttonHover : {}),\n//               ...(!isFormValid || isLoading ? styles.buttonDisabled : {}),\n//             }}\n//             disabled={!isFormValid || isLoading}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//           >\n//             {isLoading ? (\n//               <div style={styles.loadingSpinner}></div>\n//             ) : (\n//               <>\n//                 Sign In\n//                 <div\n//                   style={{\n//                     ...styles.buttonGlow,\n//                     left: isHovered ? \"100%\" : \"-100%\",\n//                   }}\n//                 />\n//               </>\n//             )}\n//           </button>\n//         </form>\n\n//         {/* Footer */}\n//         <div style={styles.footer}>\n//           <p style={styles.footerText}>\n//             New to Flow Track?{\" \"}\n//             <a\n//               href=\"#\"\n//               style={styles.link}\n//               onMouseEnter={() => setIsHovered(true)}\n//               onMouseLeave={() => setIsHovered(false)}\n//             >\n//               Get started\n//             </a>\n//           </p>\n//           <p style={{ ...styles.footerText, marginTop: \"10px\" }}>\n//             © 2025 Vunathi Technologies Pvt Ltd\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeIn {\n//             0% {\n//               opacity: 0;\n//               transform: scale(0.9);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: scale(1);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           input:focus {\n//             outline: none !important;\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-3px) !important;\n//           }\n\n//           a:hover {\n//             color: #A855F7 !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\n//responsiveness","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/auth/Login.js"],"sourcesContent":["\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../context/AuthContext\"; // Adjusted path to src/context/AuthContext.js\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [error, setError] = useState(\"\"); // Added error state for UI feedback\n//   const [isHovered, setIsHovered] = useState(false);\n//   const [activeInput, setActiveInput] = useState(null);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n//   // Floating animation elements\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n\n//   const navigate = useNavigate();\n//   const { login } = useAuth();\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 20 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs\n//     const newOrbs = Array.from({ length: 8 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 150 + 50,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler\n//     const handleMouseMove = (e) => {\n//       setMousePosition({\n//         x: (e.clientX / window.innerWidth) * 100,\n//         y: (e.clientY / window.innerHeight) * 100,\n//       });\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n//     setError(\"\");\n\n//     // Basic client-side validation\n//     if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n//       setError(\"Please enter a valid email address.\");\n//       setIsLoading(false);\n//       return;\n//     }\n//     if (password.length < 6) {\n//       setError(\"Password must be at least 6 characters long.\");\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Simulate API call\n//       await new Promise((resolve) => setTimeout(resolve, 1500));\n\n//       const userData = {\n//         name: email.split(\"@\")[0],\n//         email,\n//         avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(\n//           email.split(\"@\")[0]\n//         )}&background=3B82F6&color=fff`,\n//       };\n\n//       // Update AuthContext and localStorage\n//       login(userData);\n\n//       console.log(\"Login successful:\", userData);\n\n//       // Navigate to ForYou page\n//       navigate(\"/for-you\", { replace: true });\n//     } catch (error) {\n//       console.error(\"Login failed:\", error);\n//       setError(\"Login failed. Please check your credentials.\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: \"20px\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\n//       `,\n//       transition: \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: 0.4,\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     card: {\n//       backgroundColor: \"rgba(15, 15, 25, 0.7)\",\n//       backdropFilter: \"blur(25px)\",\n//       padding: \"50px 40px\",\n//       borderRadius: \"24px\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       width: \"100%\",\n//       maxWidth: \"420px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       position: \"relative\",\n//       zIndex: 10,\n//       animation: \"slideUp 1s ease-out\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: \"24px 24px 0 0\",\n//     },\n//     logo: {\n//       textAlign: \"center\",\n//       marginBottom: \"40px\",\n//       animation: \"fadeIn 1.2s ease-out\",\n//     },\n//     logoText: {\n//       fontSize: \"44px\",\n//       fontWeight: \"900\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0\",\n//       letterSpacing: \"-0.02em\",\n//       animation: \"textShimmer 3s ease-in-out infinite\",\n//     },\n//     tagline: {\n//       textAlign: \"center\",\n//       color: \"#94A3B8\",\n//       fontSize: \"14px\",\n//       marginTop: \"8px\",\n//       fontWeight: \"400\",\n//       letterSpacing: \"0.02em\",\n//     },\n//     title: {\n//       textAlign: \"center\",\n//       marginBottom: \"35px\",\n//       fontSize: \"28px\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       marginTop: \"0\",\n//     },\n//     inputGroup: {\n//       marginBottom: \"25px\",\n//       position: \"relative\",\n//     },\n//     label: {\n//       display: \"block\",\n//       marginBottom: \"8px\",\n//       fontSize: \"14px\",\n//       fontWeight: \"600\",\n//       color: \"#E2E8F0\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     inputContainer: {\n//       position: \"relative\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     input: {\n//       width: \"100%\",\n//       padding: \"16px 50px 16px 20px\",\n//       borderRadius: \"16px\",\n//       border: \"2px solid rgba(255, 255, 255, 0.08)\",\n//       fontSize: \"15px\",\n//       color: \"#F1F5F9\",\n//       backgroundColor: \"rgba(255, 255, 255, 0.03)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       boxSizing: \"border-box\",\n//       fontFamily: \"inherit\",\n//     },\n//     inputFocus: {\n//       borderColor: \"rgba(96, 165, 250, 0.5)\",\n//       backgroundColor: \"rgba(96, 165, 250, 0.05)\",\n//       boxShadow: \"0 0 0 4px rgba(96, 165, 250, 0.1)\",\n//       transform: \"translateY(-2px)\",\n//     },\n//     inputIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#94A3B8\",\n//       transition: \"all 0.3s ease\",\n//       fontSize: \"18px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//     },\n//     eyeIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#94A3B8\",\n//       transition: \"all 0.3s ease\",\n//       cursor: \"pointer\",\n//       fontSize: \"18px\",\n//       background: \"none\",\n//       border: \"none\",\n//       padding: \"5px\",\n//       borderRadius: \"8px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\",\n//     },\n//     eyeIconHover: {\n//       backgroundColor: \"rgba(96, 165, 250, 0.1)\",\n//       color: \"#60A5FA\",\n//     },\n//     button: {\n//       width: \"100%\",\n//       padding: \"16px\",\n//       border: \"none\",\n//       borderRadius: \"16px\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       color: \"#FFFFFF\",\n//       fontWeight: \"600\",\n//       fontSize: \"15px\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.3)\",\n//     },\n//     buttonHover: {\n//       transform: \"translateY(-3px)\",\n//       boxShadow: \"0 12px 40px rgba(96, 165, 250, 0.4)\",\n//       filter: \"brightness(1.1)\",\n//     },\n//     buttonDisabled: {\n//       opacity: \"0.6\",\n//       cursor: \"not-allowed\",\n//       transform: \"none\",\n//     },\n//     buttonGlow: {\n//       position: \"absolute\",\n//       top: \"0\",\n//       left: \"-100%\",\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent)\",\n//       transition: \"left 0.6s ease\",\n//     },\n//     loadingSpinner: {\n//       width: \"20px\",\n//       height: \"20px\",\n//       border: \"2px solid rgba(255,255,255,0.3)\",\n//       borderTop: \"2px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//       margin: \"0 auto\",\n//     },\n//     footer: {\n//       textAlign: \"center\",\n//       marginTop: \"30px\",\n//       paddingTop: \"25px\",\n//       borderTop: \"1px solid rgba(255, 255, 255, 0.08)\",\n//     },\n//     footerText: {\n//       color: \"#94A3B8\",\n//       fontSize: \"12px\",\n//       margin: \"0\",\n//     },\n//     link: {\n//       color: \"#60A5FA\",\n//       textDecoration: \"none\",\n//       fontWeight: \"500\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\",\n//     },\n//     linkHover: {\n//       color: \"#A855F7\",\n//     },\n//     errorText: {\n//       color: \"#EC4899\",\n//       textAlign: \"center\",\n//       fontSize: \"14px\",\n//       marginTop: \"15px\",\n//     },\n//   };\n\n//   const isFormValid = email && password;\n//   const [isEyeHovered, setIsEyeHovered] = useState(false);\n\n//   // SVG Icons\n//   const EmailIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\" />\n//       <polyline points=\"22,6 12,13 2,6\" />\n//     </svg>\n//   );\n\n//   const EyeIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\" />\n//       <circle cx=\"12\" cy=\"12\" r=\"3\" />\n//     </svg>\n//   );\n\n//   const EyeOffIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\" />\n//       <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\" />\n//     </svg>\n//   );\n\n//   const LockIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\" />\n//       <path d=\"M7 11V7a5 5 0 0 1 10 0v4\" />\n//     </svg>\n//   );\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Login Card */}\n//       <div style={styles.card}>\n//         <div style={styles.cardGlow} />\n\n//         {/* Logo Section */}\n//         <div style={styles.logo}>\n//           <h1 style={styles.logoText}>Flow Track</h1>\n//           <p style={styles.tagline}>Modern Project Management Solution</p>\n//         </div>\n\n//         <h2 style={styles.title}>Welcome User</h2>\n\n//         <form onSubmit={handleSubmit}>\n//           {/* Email Input */}\n//           <div style={styles.inputGroup}>\n//             <label htmlFor=\"email\" style={styles.label}>\n//               Email Address\n//             </label>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type=\"email\"\n//                 id=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 onFocus={() => setActiveInput(\"email\")}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === \"email\" || email ? styles.inputFocus : {}),\n//                 }}\n//                 aria-label=\"Email address\"\n//                 disabled={isLoading}\n//               />\n//               <span style={styles.inputIcon}>\n//                 <EmailIcon />\n//               </span>\n//             </div>\n//           </div>\n\n//           {/* Password Input */}\n//           <div style={styles.inputGroup}>\n//             <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n//               <label htmlFor=\"password\" style={styles.label}>\n//                 Password\n//               </label>\n//             </div>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 id=\"password\"\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 onFocus={() => setActiveInput(\"password\")}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === \"password\" || password ? styles.inputFocus : {}),\n//                 }}\n//                 aria-label=\"Password\"\n//                 disabled={isLoading}\n//               />\n//               <span style={styles.inputIcon}>\n//                 <LockIcon />\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 style={{\n//                   ...styles.eyeIcon,\n//                   ...(isEyeHovered ? styles.eyeIconHover : {}),\n//                 }}\n//                 onClick={togglePasswordVisibility}\n//                 onMouseEnter={() => setIsEyeHovered(true)}\n//                 onMouseLeave={() => setIsEyeHovered(false)}\n//                 title={showPassword ? \"Hide password\" : \"Show password\"}\n//                 disabled={isLoading}\n//               >\n//                 {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n//               </button>\n//             </div>\n//           </div>\n\n//           {/* Error Message */}\n//           {error && <p style={styles.errorText}>{error}</p>}\n\n//           {/* Submit Button */}\n//           <button\n//             type=\"submit\"\n//             style={{\n//               ...styles.button,\n//               ...(isFormValid && !isLoading && isHovered ? styles.buttonHover : {}),\n//               ...(!isFormValid || isLoading ? styles.buttonDisabled : {}),\n//             }}\n//             disabled={!isFormValid || isLoading}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//           >\n//             {isLoading ? (\n//               <div style={styles.loadingSpinner}></div>\n//             ) : (\n//               <>\n//                 Sign In\n//                 <div\n//                   style={{\n//                     ...styles.buttonGlow,\n//                     left: isHovered ? \"100%\" : \"-100%\",\n//                   }}\n//                 />\n//               </>\n//             )}\n//           </button>\n//         </form>\n\n//         {/* Footer */}\n//         <div style={styles.footer}>\n//           <p style={styles.footerText}>\n//             New to Flow Track?{\" \"}\n//             <a\n//               href=\"#\"\n//               style={styles.link}\n//               onMouseEnter={() => setIsHovered(true)}\n//               onMouseLeave={() => setIsHovered(false)}\n//             >\n//               Get started\n//             </a>\n//           </p>\n//           <p style={{ ...styles.footerText, marginTop: \"10px\" }}>\n//             © 2025 Vunathi Technologies Pvt Ltd\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeIn {\n//             0% {\n//               opacity: 0;\n//               transform: scale(0.9);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: scale(1);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           input:focus {\n//             outline: none !important;\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-3px) !important;\n//           }\n\n//           a:hover {\n//             color: #A855F7 !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;\n\n\n\n\n//responsiveness\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}