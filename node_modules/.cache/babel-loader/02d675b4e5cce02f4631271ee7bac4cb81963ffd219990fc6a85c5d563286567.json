{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\projects\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName(''); setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(() => {\n// //     listProjects().then(setProjects);\n// //   }, []);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName('');\n// //     setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Name\n// //             <input value={name} onChange={e => setName(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Key\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <button className=\"btn\" onClick={create}>\n// //           <FiPlus /> Create\n// //         </button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>\n// //           {projects.map(p => (\n// //             <li key={p.id}>\n// //               <Link to={'/projects/' + p.id}>\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n// //               </Link>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n//  //////////////////////\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [lead, setLead] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLead, setEditLead] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     setProjects(await listProjects());\n//   };\n\n//   const create = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       lead: lead || 'Unassigned',\n//       description: '',\n//       leads: [],\n//       lastUpdated: now\n//     };\n//     await addProject(p);\n//     await loadProjects();\n//     setName('');\n//     setKey('');\n//     setLead('');\n//     setType('Software');\n//   };\n\n//   const remove = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       await loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLead(p.lead || '');\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditName('');\n//     setEditKey('');\n//     setEditLead('');\n//     setEditType('');\n//   };\n\n//   const saveEdit = async (id) => {\n//     const now = new Date().toISOString();\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       lead: editLead,\n//       type: editType,\n//       lastUpdated: now\n//     });\n//     setEditingId(null);\n//     await loadProjects();\n//   };\n\n//   const avatarStyle = {\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '50%',\n//     background: '#0052cc',\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: '600',\n//     marginRight: '8px',\n//     fontSize: '12px'\n//   };\n\n//   const typeBadgeStyle = (t) => {\n//     const colors = {\n//       Software: { bg: '#e3fcef', color: '#006644' },\n//       Business: { bg: '#deebff', color: '#0747a6' },\n//       Service: { bg: '#ffebe6', color: '#de350b' }\n//     };\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\n//     return {\n//       background: c.bg,\n//       color: c.color,\n//       padding: '0.25rem 0.6rem',\n//       borderRadius: '4px',\n//       fontSize: '12px',\n//       fontWeight: 600\n//     };\n//   };\n\n//   const getProjectColor = (id) => {\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\n//     const index = id.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const projectIconStyle = (id) => ({\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '4px',\n//     background: getProjectColor(id),\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: 600,\n//     marginRight: '8px',\n//     fontSize: '12px',\n//     textTransform: 'uppercase'\n//   });\n\n//   // Filtering\n//   const filteredProjects = projects.filter(p =>\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\n//   );\n\n//   // Sorting\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n//     return 0;\n//   });\n\n//   const toggleSort = (key) => {\n//     setSortConfig((prev) =>\n//       prev.key === key\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\n//         : { key, direction: 'asc' }\n//     );\n//   };\n\n//   const sortIcon = (col) => {\n//     if (sortConfig.key !== col) return null;\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\n//   };\n\n//   return (\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\n//       {/* Create Project */}\n//       {/* ... (same as before, keeping form part unchanged) ... */}\n\n//       {/* Project Table */}\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\n\n//         <input\n//           type=\"text\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//           placeholder=\"Search projects...\"\n//           style={{\n//             width: '100%',\n//             padding: '0.6rem',\n//             marginBottom: '1rem',\n//             border: '1px solid #dfe1e6',\n//             borderRadius: '4px'\n//           }}\n//         />\n\n//         {sortedProjects.length === 0 ? (\n//           <p>No projects found.</p>\n//         ) : (\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//             <thead>\n//               <tr>\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Key {sortIcon('key')}\n//                 </th>\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Name {sortIcon('name')}\n//                 </th>\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Type {sortIcon('type')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Lead {sortIcon('lead')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Last Updated {sortIcon('lastUpdated')}\n//                 </th>\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {sortedProjects.map(p => (\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\n//                     {editingId === p.id ? (\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\n//                     ) : (\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\n//                         {p.name}\n//                       </Link>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\n//                     ) : (\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\n//                         {p.lead || 'Unassigned'}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\n//                     {editingId === p.id ? (\n//                       <>\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\n//                         <button onClick={cancelEdit}><FiX /></button>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [leads, setLeads] = useState([]);\n  const [type, setType] = useState('Software');\n  const [editingId, setEditingId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editKey, setEditKey] = useState('');\n  const [editLeads, setEditLeads] = useState([]);\n  const [editType, setEditType] = useState('');\n  useEffect(() => {\n    loadProjects();\n  }, []);\n  const loadProjects = async () => setProjects(await listProjects());\n  const createProject = async () => {\n    if (!name.trim()) return;\n    const now = new Date().toISOString();\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      type,\n      leads: leads.length ? leads : ['Unassigned'],\n      description: '',\n      lastUpdated: now,\n      createdAt: now\n    };\n    await addProject(p);\n    setName('');\n    setKey('');\n    setLeads([]);\n    setType('Software');\n    loadProjects();\n  };\n  const removeProject = async id => {\n    if (window.confirm(\"Are you sure you want to delete this project?\")) {\n      await deleteProject(id);\n      loadProjects();\n    }\n  };\n  const startEdit = p => {\n    setEditingId(p.id);\n    setEditName(p.name);\n    setEditKey(p.key);\n    setEditLeads(p.leads || []);\n    setEditType(p.type || 'Software');\n  };\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditName('');\n    setEditKey('');\n    setEditLeads([]);\n    setEditType('');\n  };\n  const saveEdit = async id => {\n    await updateProject(id, {\n      name: editName,\n      key: editKey.toUpperCase(),\n      leads: editLeads.length ? editLeads : ['Unassigned'],\n      type: editType,\n      lastUpdated: new Date().toISOString()\n    });\n    cancelEdit();\n    loadProjects();\n  };\n  const leadColor = name => {\n    const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n    if (!name) return '#6B778C';\n    const index = name.charCodeAt(0) % colors.length;\n    return colors[index];\n  };\n  const typeBadgeStyle = t => {\n    const colors = {\n      Software: {\n        bg: '#E3FCF7',\n        color: '#006644'\n      },\n      Business: {\n        bg: '#DEEBFF',\n        color: '#0747A6'\n      },\n      Service: {\n        bg: '#FFEBE6',\n        color: '#DE350B'\n      }\n    };\n    const c = colors[t] || {\n      bg: '#F4F5F7',\n      color: '#172B4D'\n    };\n    return {\n      background: c.bg,\n      color: c.color,\n      padding: '0.25rem 0.6rem',\n      borderRadius: '4px',\n      fontSize: '12px',\n      fontWeight: 600\n    };\n  };\n  const renderLeads = leadsArr => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: leadsArr.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      title: l,\n      style: {\n        width: '28px',\n        height: '28px',\n        borderRadius: '50%',\n        background: leadColor(l),\n        color: '#fff',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '12px',\n        fontWeight: 600,\n        marginLeft: i > 0 ? -8 : 0,\n        border: '2px solid #fff'\n      },\n      children: l.charAt(0).toUpperCase()\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 540,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'grid',\n      gridTemplateColumns: '1fr 3fr',\n      gap: '2rem',\n      padding: '2rem',\n      fontFamily: 'Arial,sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#fff',\n        padding: '1.5rem',\n        borderRadius: '8px',\n        boxShadow: '0 2px 6px rgba(0,0,0,0.1)'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: '1rem',\n          fontSize: '18px',\n          color: '#172b4d'\n        },\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Project Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: name,\n          onChange: e => setName(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Project Key\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: key,\n          onChange: e => setKey(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Leads (comma separated)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: leads.join(','),\n          onChange: e => setLeads(e.target.value.split(',').map(l => l.trim())),\n          style: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 84\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 46\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          style: {\n            width: '100%',\n            padding: '8px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Software\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 209\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Business\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 234\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 259\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProject,\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '6px',\n          background: '#0052CC',\n          color: '#fff',\n          border: 'none',\n          padding: '10px 16px',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 210\n        }, this), \" Create\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(auto-fill,minmax(300px,1fr))',\n        gap: '1rem'\n      },\n      children: projects.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          padding: '1rem',\n          borderRadius: '6px',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)',\n          position: 'relative',\n          borderLeft: `6px solid ${leadColor(p.leads[0])}`,\n          transition: 'transform 0.2s'\n        },\n        onMouseEnter: e => e.currentTarget.style.transform = 'translateY(-3px)',\n        onMouseLeave: e => e.currentTarget.style.transform = 'translateY(0)',\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 600,\n              fontSize: '16px',\n              color: '#172b4d'\n            },\n            children: editingId === p.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editName,\n              onChange: e => setEditName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 99\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 168\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '6px',\n              opacity: 0.7\n            },\n            children: editingId === p.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(p.id),\n                children: /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 578,\n                  columnNumber: 56\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: cancelEdit,\n                children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => startEdit(p),\n                children: /*#__PURE__*/_jsxDEV(FiEdit2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 581,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => removeProject(p.id),\n                children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 61\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0.5rem 0',\n            color: '#6b778c',\n            fontSize: '13px'\n          },\n          children: p.key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '0.5rem 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: typeBadgeStyle(p.type),\n            children: p.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 'auto',\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [editingId === p.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n            value: editLeads.join(','),\n            onChange: e => setEditLeads(e.target.value.split(',').map(l => l.trim()))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 33\n          }, this) : renderLeads(p.leads), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px',\n              color: '#6b778c'\n            },\n            children: p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), {\n              addSuffix: true\n            }) : '—'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 13\n        }, this)]\n      }, p.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 552,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"gqyWWh+SgrYiN22dRbtSbj/OlxE=\");\n_c = ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","listProjects","addProject","deleteProject","updateProject","v4","uuidv4","FiPlus","FiTrash2","FiEdit2","FiCheck","FiX","formatDistanceToNow","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectList","_s","projects","setProjects","name","setName","key","setKey","leads","setLeads","type","setType","editingId","setEditingId","editName","setEditName","editKey","setEditKey","editLeads","setEditLeads","editType","setEditType","loadProjects","createProject","trim","now","Date","toISOString","p","id","toUpperCase","length","description","lastUpdated","createdAt","removeProject","window","confirm","startEdit","cancelEdit","saveEdit","leadColor","colors","index","charCodeAt","typeBadgeStyle","t","Software","bg","color","Business","Service","c","background","padding","borderRadius","fontSize","fontWeight","renderLeads","leadsArr","style","display","alignItems","children","map","l","i","title","width","height","justifyContent","marginLeft","border","charAt","fileName","_jsxFileName","lineNumber","columnNumber","gridTemplateColumns","gap","fontFamily","boxShadow","marginBottom","value","onChange","e","target","join","split","onClick","cursor","flexDirection","position","borderLeft","transition","onMouseEnter","currentTarget","transform","onMouseLeave","opacity","margin","marginTop","addSuffix","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/projects/ProjectList.js"],"sourcesContent":["\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName(''); setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n \n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n \n// //   useEffect(() => {\n// //     listProjects().then(setProjects);\n// //   }, []);\n \n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName('');\n// //     setKey('');\n// //   };\n \n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Name\n// //             <input value={name} onChange={e => setName(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Key\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <button className=\"btn\" onClick={create}>\n// //           <FiPlus /> Create\n// //         </button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>\n// //           {projects.map(p => (\n// //             <li key={p.id}>\n// //               <Link to={'/projects/' + p.id}>\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n// //               </Link>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n \n//  //////////////////////\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n \n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n \n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n \n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n \n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [lead, setLead] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLead, setEditLead] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     setProjects(await listProjects());\n//   };\n\n//   const create = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       lead: lead || 'Unassigned',\n//       description: '',\n//       leads: [],\n//       lastUpdated: now\n//     };\n//     await addProject(p);\n//     await loadProjects();\n//     setName('');\n//     setKey('');\n//     setLead('');\n//     setType('Software');\n//   };\n\n//   const remove = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       await loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLead(p.lead || '');\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditName('');\n//     setEditKey('');\n//     setEditLead('');\n//     setEditType('');\n//   };\n\n//   const saveEdit = async (id) => {\n//     const now = new Date().toISOString();\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       lead: editLead,\n//       type: editType,\n//       lastUpdated: now\n//     });\n//     setEditingId(null);\n//     await loadProjects();\n//   };\n\n//   const avatarStyle = {\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '50%',\n//     background: '#0052cc',\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: '600',\n//     marginRight: '8px',\n//     fontSize: '12px'\n//   };\n\n//   const typeBadgeStyle = (t) => {\n//     const colors = {\n//       Software: { bg: '#e3fcef', color: '#006644' },\n//       Business: { bg: '#deebff', color: '#0747a6' },\n//       Service: { bg: '#ffebe6', color: '#de350b' }\n//     };\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\n//     return {\n//       background: c.bg,\n//       color: c.color,\n//       padding: '0.25rem 0.6rem',\n//       borderRadius: '4px',\n//       fontSize: '12px',\n//       fontWeight: 600\n//     };\n//   };\n\n//   const getProjectColor = (id) => {\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\n//     const index = id.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const projectIconStyle = (id) => ({\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '4px',\n//     background: getProjectColor(id),\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: 600,\n//     marginRight: '8px',\n//     fontSize: '12px',\n//     textTransform: 'uppercase'\n//   });\n\n//   // Filtering\n//   const filteredProjects = projects.filter(p =>\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\n//   );\n\n//   // Sorting\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n//     return 0;\n//   });\n\n//   const toggleSort = (key) => {\n//     setSortConfig((prev) =>\n//       prev.key === key\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\n//         : { key, direction: 'asc' }\n//     );\n//   };\n\n//   const sortIcon = (col) => {\n//     if (sortConfig.key !== col) return null;\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\n//   };\n\n//   return (\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\n//       {/* Create Project */}\n//       {/* ... (same as before, keeping form part unchanged) ... */}\n\n//       {/* Project Table */}\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\n\n//         <input\n//           type=\"text\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//           placeholder=\"Search projects...\"\n//           style={{\n//             width: '100%',\n//             padding: '0.6rem',\n//             marginBottom: '1rem',\n//             border: '1px solid #dfe1e6',\n//             borderRadius: '4px'\n//           }}\n//         />\n\n//         {sortedProjects.length === 0 ? (\n//           <p>No projects found.</p>\n//         ) : (\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//             <thead>\n//               <tr>\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Key {sortIcon('key')}\n//                 </th>\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Name {sortIcon('name')}\n//                 </th>\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Type {sortIcon('type')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Lead {sortIcon('lead')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Last Updated {sortIcon('lastUpdated')}\n//                 </th>\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {sortedProjects.map(p => (\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\n//                     {editingId === p.id ? (\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\n//                     ) : (\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\n//                         {p.name}\n//                       </Link>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\n//                     ) : (\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\n//                         {p.lead || 'Unassigned'}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\n//                     {editingId === p.id ? (\n//                       <>\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\n//                         <button onClick={cancelEdit}><FiX /></button>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function ProjectList() {\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [leads, setLeads] = useState([]);\n  const [type, setType] = useState('Software');\n  const [editingId, setEditingId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editKey, setEditKey] = useState('');\n  const [editLeads, setEditLeads] = useState([]);\n  const [editType, setEditType] = useState('');\n\n  useEffect(() => { loadProjects(); }, []);\n  const loadProjects = async () => setProjects(await listProjects());\n\n  const createProject = async () => {\n    if (!name.trim()) return;\n    const now = new Date().toISOString();\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      type,\n      leads: leads.length ? leads : ['Unassigned'],\n      description: '',\n      lastUpdated: now,\n      createdAt: now\n    };\n    await addProject(p);\n    setName(''); setKey(''); setLeads([]); setType('Software');\n    loadProjects();\n  };\n\n  const removeProject = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this project?\")) {\n      await deleteProject(id);\n      loadProjects();\n    }\n  };\n\n  const startEdit = (p) => {\n    setEditingId(p.id);\n    setEditName(p.name);\n    setEditKey(p.key);\n    setEditLeads(p.leads || []);\n    setEditType(p.type || 'Software');\n  };\n  const cancelEdit = () => { setEditingId(null); setEditName(''); setEditKey(''); setEditLeads([]); setEditType(''); };\n  const saveEdit = async (id) => {\n    await updateProject(id, {\n      name: editName,\n      key: editKey.toUpperCase(),\n      leads: editLeads.length ? editLeads : ['Unassigned'],\n      type: editType,\n      lastUpdated: new Date().toISOString()\n    });\n    cancelEdit();\n    loadProjects();\n  };\n\n  const leadColor = (name) => {\n    const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n    if (!name) return '#6B778C';\n    const index = name.charCodeAt(0) % colors.length;\n    return colors[index];\n  };\n\n  const typeBadgeStyle = t => {\n    const colors = {\n      Software: { bg: '#E3FCF7', color: '#006644' },\n      Business: { bg: '#DEEBFF', color: '#0747A6' },\n      Service: { bg: '#FFEBE6', color: '#DE350B' }\n    };\n    const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D' };\n    return { background: c.bg, color: c.color, padding:'0.25rem 0.6rem', borderRadius:'4px', fontSize:'12px', fontWeight:600 };\n  };\n\n  const renderLeads = (leadsArr) => (\n    <div style={{ display:'flex', alignItems:'center' }}>\n      {leadsArr.map((l,i) => (\n        <div key={i} title={l} style={{\n          width:'28px', height:'28px', borderRadius:'50%', background:leadColor(l), color:'#fff',\n          display:'flex', alignItems:'center', justifyContent:'center',\n          fontSize:'12px', fontWeight:600, marginLeft:i>0?-8:0, border:'2px solid #fff'\n        }}>{l.charAt(0).toUpperCase()}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div style={{ display:'grid', gridTemplateColumns:'1fr 3fr', gap:'2rem', padding:'2rem', fontFamily:'Arial,sans-serif' }}>\n      {/* Create Project Form */}\n      <div style={{ background:'#fff', padding:'1.5rem', borderRadius:'8px', boxShadow:'0 2px 6px rgba(0,0,0,0.1)' }}>\n        <h2 style={{ marginBottom:'1rem', fontSize:'18px', color:'#172b4d' }}>Create Project</h2>\n        <div style={{ marginBottom:'1rem' }}><label>Project Name</label><input value={name} onChange={e=>setName(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n        <div style={{ marginBottom:'1rem' }}><label>Project Key</label><input value={key} onChange={e=>setKey(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n        <div style={{ marginBottom:'1rem' }}><label>Leads (comma separated)</label><input value={leads.join(',')} onChange={e=>setLeads(e.target.value.split(',').map(l=>l.trim()))} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n        <div style={{ marginBottom:'1rem' }}><label>Type</label><select value={type} onChange={e=>setType(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }}><option>Software</option><option>Business</option><option>Service</option></select></div>\n        <button onClick={createProject} style={{ display:'flex', alignItems:'center', gap:'6px', background:'#0052CC', color:'#fff', border:'none', padding:'10px 16px', borderRadius:'4px', cursor:'pointer' }}><FiPlus /> Create</button>\n      </div>\n\n      {/* Jira-style Project Cards */}\n      <div style={{ display:'grid', gridTemplateColumns:'repeat(auto-fill,minmax(300px,1fr))', gap:'1rem' }}>\n        {projects.map(p => (\n          <div key={p.id} style={{\n            display:'flex', flexDirection:'column', padding:'1rem', borderRadius:'6px',\n            boxShadow:'0 1px 3px rgba(0,0,0,0.1)', position:'relative',\n            borderLeft:`6px solid ${leadColor(p.leads[0])}`, transition:'transform 0.2s',\n          }}\n          onMouseEnter={e=>e.currentTarget.style.transform='translateY(-3px)'}\n          onMouseLeave={e=>e.currentTarget.style.transform='translateY(0)'}\n          >\n            <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n              <div style={{ fontWeight:600, fontSize:'16px', color:'#172b4d' }}>{editingId===p.id?<input value={editName} onChange={e=>setEditName(e.target.value)} />:<span>{p.name}</span>}</div>\n              <div style={{ display:'flex', gap:'6px', opacity:0.7 }}>\n                {editingId===p.id?(<>\n                  <button onClick={()=>saveEdit(p.id)}><FiCheck /></button>\n                  <button onClick={cancelEdit}><FiX /></button>\n                </>):(<>\n                  <button onClick={()=>startEdit(p)}><FiEdit2 /></button>\n                  <button onClick={()=>removeProject(p.id)}><FiTrash2 /></button>\n                </>)}\n              </div>\n            </div>\n            <div style={{ margin:'0.5rem 0', color:'#6b778c', fontSize:'13px' }}>{p.key}</div>\n            <div style={{ margin:'0.5rem 0' }}><span style={typeBadgeStyle(p.type)}>{p.type}</span></div>\n            <div style={{ marginTop:'auto', display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n              {editingId===p.id?<input value={editLeads.join(',')} onChange={e=>setEditLeads(e.target.value.split(',').map(l=>l.trim()))} />:renderLeads(p.leads)}\n              <div style={{ fontSize:'12px', color:'#6b778c' }}>{p.lastUpdated?formatDistanceToNow(new Date(p.lastUpdated),{addSuffix:true}):'—'}</div>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,wBAAwB;AAC/F,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,MAAM,EAAEC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,GAAG,QAAQ,gBAAgB;AACxE,SAASC,mBAAmB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}