{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\boards\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useRef } from 'react';\n// import { listIssues, moveIssue } from '../../services/mockApi';\n// import { useParams } from 'react-router-dom';\n\n// /*\n//   Enhancements:\n//   - Keyboard-only moves: when a card is focused, user can press ArrowLeft/ArrowRight to move between columns.\n//   - Buttons for accessibility to move left/right.\n//   - Export/Import CSV for issues in the top header.\n// */\n\n// const STATUSES = ['todo','inprogress','review','done'];\n\n// function issuesToCSV(issues) {\n//   const headers = ['id','projectId','title','status','priority','assignee','type','storyPoints','createdAt'];\n//   const rows = issues.map(i => headers.map(h => `\"${(i[h]||'').toString().replace(/\"/g,'\"\"')}\"`).join(','));\n//   return [headers.join(','), ...rows].join('\\n');\n// }\n\n// function csvToIssues(csv) {\n//   const lines = csv.split(/\\r?\\n/).filter(Boolean);\n//   if(lines.length < 2) return [];\n//   const headers = lines[0].split(',').map(h => h.replace(/(^\"|\"$)/g,''));\n//   const res = [];\n//   for(let i=1;i<lines.length;i++){\n//     const cols = lines[i].split(',').map(c => c.replace(/(^\"|\"$)/g,''));\n//     const obj = {};\n//     headers.forEach((h,idx)=> obj[h]=cols[idx]||'');\n//     res.push(obj);\n//   }\n//   return res;\n// }\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const fileRef = useRef(null);\n\n//   useEffect(()=>{ listIssues(projectId).then(setIssues); },[projectId]);\n\n//   const refresh = async ()=> setIssues(await listIssues(projectId));\n\n//   const onDrop = async (e, status) => {\n//     const id = e.dataTransfer.getData('text/plain');\n//     await moveIssue(id, status);\n//     refresh();\n//   };\n//   const onDragStart = (e,id) => { e.dataTransfer.setData('text/plain', id); };\n\n//   const byStatus = s => issues.filter(i=>i.status===s);\n\n//   // keyboard move handler: ArrowLeft/ArrowRight move between columns\n//   const handleKey = async (e, issue) => {\n//     if(e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n//       e.preventDefault();\n//       const idx = STATUSES.indexOf(issue.status);\n//       let targetIdx = idx + (e.key === 'ArrowRight' ? 1 : -1);\n//       targetIdx = Math.max(0, Math.min(STATUSES.length-1, targetIdx));\n//       const target = STATUSES[targetIdx];\n//       if(target !== issue.status) {\n//         await moveIssue(issue.id, target);\n//         refresh();\n//       }\n//     }\n//   };\n\n//   const moveLeft = async (id) => {\n//     const issue = issues.find(i=>i.id===id);\n//     const idx = STATUSES.indexOf(issue.status);\n//     const target = STATUSES[Math.max(0, idx-1)];\n//     if(target !== issue.status){ await moveIssue(id,target); refresh(); }\n//   };\n//   const moveRight = async (id) => {\n//     const issue = issues.find(i=>i.id===id);\n//     const idx = STATUSES.indexOf(issue.status);\n//     const target = STATUSES[Math.min(STATUSES.length-1, idx+1)];\n//     if(target !== issue.status){ await moveIssue(id,target); refresh(); }\n//   };\n\n//   // Export CSV\n//   const exportCSV = () => {\n//     const csv = issuesToCSV(issues);\n//     const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url; a.download = `issues_export_${projectId||'all'}.csv`; a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   // Import CSV\n//   const importCSV = (e) => {\n//     const file = e.target.files && e.target.files[0];\n//     if(!file) return;\n//     const reader = new FileReader();\n//     reader.onload = async (ev) => {\n//       try {\n//         const text = ev.target.result;\n//         const imported = csvToIssues(text);\n//         // Merge with existing issues: simple append with new IDs\n//         for(const row of imported){\n//           // only minimal fields handled; createIssue is not imported here to avoid API mismatch\n//           // createIssue would be used for full import; for demo we push to localStorage directly\n//           // but here we attempt to call moveIssue or update if id exists. fallback: ignore.\n//         }\n//         alert('Import parsed ' + imported.length + ' rows. For full import to central DB, use backend import.');\n//       } catch(err) {\n//         alert('CSV parse error: ' + err.message);\n//       }\n//     };\n//     reader.readAsText(file);\n//     // reset file input\n//     e.target.value = '';\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-label=\"Kanban board\">\n//       <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:12}}>\n//         <h2 style={{margin:0}}>Kanban Board {projectId?`- ${projectId}`:''}</h2>\n//         <div style={{display:'flex',gap:8,alignItems:'center'}}>\n//           <button className=\"btn-ghost\" onClick={exportCSV} aria-label=\"Export issues as CSV\">Export CSV</button>\n//           <label className=\"btn-ghost\" style={{cursor:'pointer'}}>\n//             Import CSV\n//             <input ref={fileRef} type=\"file\" accept=\".csv,text/csv\" onChange={importCSV} style={{display:'none'}} aria-hidden=\"true\"/>\n//           </label>\n//           <button className=\"btn\" onClick={()=>window.print()} aria-label=\"Print board\">Print</button>\n//         </div>\n//       </div>\n\n//       <div className=\"kanban\" role=\"list\">\n//         {STATUSES.map(s=>(\n//           <section key={s} className=\"kanban-column\" aria-labelledby={`col-${s}`} onDragOver={e=>e.preventDefault()} onDrop={e=>onDrop(e,s)}>\n//             <h4 id={`col-${s}`}>{s.toUpperCase()}</h4>\n//             {byStatus(s).map(i=>(\n//               <article key={i.id} className=\"card-item\" role=\"listitem\" tabIndex=\"0\" data-priority={i.priority}\n//                 draggable onDragStart={e=>onDragStart(e,i.id)}\n//                 onKeyDown={(e)=>handleKey(e,i)}\n//                 aria-describedby={`desc-${i.id}`}>\n//                 <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n//                   <strong>{i.title}</strong>\n//                   <div style={{display:'flex',gap:6}}>\n//                     <button className=\"btn-ghost\" onClick={(e)=>{ e.stopPropagation(); moveLeft(i.id); }} aria-label={`Move ${i.title} left`}>◀</button>\n//                     <button className=\"btn-ghost\" onClick={(e)=>{ e.stopPropagation(); moveRight(i.id); }} aria-label={`Move ${i.title} right`}>▶</button>\n//                   </div>\n//                 </div>\n//                 <div id={`desc-${i.id}`} className=\"small\">Assignee: {i.assignee} • {i.storyPoints} pts</div>\n//               </article>\n//             ))}\n//           </section>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { listIssues, moveIssue } from '../../services/mockApi';\nimport { useParams } from 'react-router-dom';\nimport { useProjects } from '../../context/ProjectContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STATUSES = ['todo', 'inprogress', 'review', 'done'];\nexport default function KanbanBoard() {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const {\n    projects\n  } = useProjects();\n  const [issues, setIssues] = useState([]);\n  const fileRef = useRef(null);\n  useEffect(() => {\n    listIssues(projectId).then(setIssues);\n  }, [projectId]);\n  const refresh = async () => setIssues(await listIssues(projectId));\n  const onDrop = async (e, status) => {\n    const id = e.dataTransfer.getData('text/plain');\n    await moveIssue(id, status);\n    refresh();\n  };\n  const onDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id);\n  };\n  const moveLeft = async id => {\n    const issue = issues.find(i => i.id === id);\n    const idx = STATUSES.indexOf(issue.status);\n    const target = STATUSES[Math.max(0, idx - 1)];\n    if (target !== issue.status) {\n      await moveIssue(id, target);\n      refresh();\n    }\n  };\n  const moveRight = async id => {\n    const issue = issues.find(i => i.id === id);\n    const idx = STATUSES.indexOf(issue.status);\n    const target = STATUSES[Math.min(STATUSES.length - 1, idx + 1)];\n    if (target !== issue.status) {\n      await moveIssue(id, target);\n      refresh();\n    }\n  };\n  const byStatus = s => issues.filter(i => i.status === s);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    role: \"region\",\n    \"aria-label\": \"Kanban board\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: 0\n        },\n        children: [\"Kanban Board \", projectId ? `- ${projectId}` : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8,\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => window.print(),\n          \"aria-label\": \"Print board\",\n          children: \"Print\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kanban\",\n      role: \"list\",\n      children: STATUSES.map(s => /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"kanban-column\",\n        \"aria-labelledby\": `col-${s}`,\n        onDragOver: e => e.preventDefault(),\n        onDrop: e => onDrop(e, s),\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          id: `col-${s}`,\n          children: s.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), byStatus(s).map(i => /*#__PURE__*/_jsxDEV(\"article\", {\n          className: \"card-item\",\n          role: \"listitem\",\n          tabIndex: \"0\",\n          \"data-priority\": i.priority,\n          draggable: true,\n          onDragStart: e => onDragStart(e, i.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: i.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: 6\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-ghost\",\n                onClick: e => {\n                  e.stopPropagation();\n                  moveLeft(i.id);\n                },\n                children: \"\\u25C0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-ghost\",\n                onClick: e => {\n                  e.stopPropagation();\n                  moveRight(i.id);\n                },\n                children: \"\\u25B6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"small\",\n            children: [\"Assignee: \", i.assignee, \" \\u2022 \", i.storyPoints, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)]\n        }, i.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }, this))]\n      }, s, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCB Projects from Timeline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: p.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), \" \\u2014 Starts: \", p.start_date, \", Duration: \", p.duration, \" days\"]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"0zg7Si3HpJsUp4G7lz/Kb4K/U3U=\", false, function () {\n  return [useParams, useProjects];\n});\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","listIssues","moveIssue","useParams","useProjects","jsxDEV","_jsxDEV","STATUSES","KanbanBoard","_s","projectId","projects","issues","setIssues","fileRef","then","refresh","onDrop","e","status","id","dataTransfer","getData","onDragStart","setData","moveLeft","issue","find","i","idx","indexOf","target","Math","max","moveRight","min","length","byStatus","s","filter","className","role","children","style","display","justifyContent","alignItems","marginBottom","margin","fileName","_jsxFileName","lineNumber","columnNumber","gap","onClick","window","print","map","onDragOver","preventDefault","toUpperCase","tabIndex","priority","draggable","title","stopPropagation","assignee","storyPoints","marginTop","p","text","start_date","duration","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/boards/KanbanBoard.js"],"sourcesContent":["\n// import React, { useEffect, useState, useRef } from 'react';\n// import { listIssues, moveIssue } from '../../services/mockApi';\n// import { useParams } from 'react-router-dom';\n\n// /*\n//   Enhancements:\n//   - Keyboard-only moves: when a card is focused, user can press ArrowLeft/ArrowRight to move between columns.\n//   - Buttons for accessibility to move left/right.\n//   - Export/Import CSV for issues in the top header.\n// */\n\n// const STATUSES = ['todo','inprogress','review','done'];\n\n// function issuesToCSV(issues) {\n//   const headers = ['id','projectId','title','status','priority','assignee','type','storyPoints','createdAt'];\n//   const rows = issues.map(i => headers.map(h => `\"${(i[h]||'').toString().replace(/\"/g,'\"\"')}\"`).join(','));\n//   return [headers.join(','), ...rows].join('\\n');\n// }\n\n// function csvToIssues(csv) {\n//   const lines = csv.split(/\\r?\\n/).filter(Boolean);\n//   if(lines.length < 2) return [];\n//   const headers = lines[0].split(',').map(h => h.replace(/(^\"|\"$)/g,''));\n//   const res = [];\n//   for(let i=1;i<lines.length;i++){\n//     const cols = lines[i].split(',').map(c => c.replace(/(^\"|\"$)/g,''));\n//     const obj = {};\n//     headers.forEach((h,idx)=> obj[h]=cols[idx]||'');\n//     res.push(obj);\n//   }\n//   return res;\n// }\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const fileRef = useRef(null);\n\n//   useEffect(()=>{ listIssues(projectId).then(setIssues); },[projectId]);\n\n//   const refresh = async ()=> setIssues(await listIssues(projectId));\n\n//   const onDrop = async (e, status) => {\n//     const id = e.dataTransfer.getData('text/plain');\n//     await moveIssue(id, status);\n//     refresh();\n//   };\n//   const onDragStart = (e,id) => { e.dataTransfer.setData('text/plain', id); };\n\n//   const byStatus = s => issues.filter(i=>i.status===s);\n\n//   // keyboard move handler: ArrowLeft/ArrowRight move between columns\n//   const handleKey = async (e, issue) => {\n//     if(e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n//       e.preventDefault();\n//       const idx = STATUSES.indexOf(issue.status);\n//       let targetIdx = idx + (e.key === 'ArrowRight' ? 1 : -1);\n//       targetIdx = Math.max(0, Math.min(STATUSES.length-1, targetIdx));\n//       const target = STATUSES[targetIdx];\n//       if(target !== issue.status) {\n//         await moveIssue(issue.id, target);\n//         refresh();\n//       }\n//     }\n//   };\n\n//   const moveLeft = async (id) => {\n//     const issue = issues.find(i=>i.id===id);\n//     const idx = STATUSES.indexOf(issue.status);\n//     const target = STATUSES[Math.max(0, idx-1)];\n//     if(target !== issue.status){ await moveIssue(id,target); refresh(); }\n//   };\n//   const moveRight = async (id) => {\n//     const issue = issues.find(i=>i.id===id);\n//     const idx = STATUSES.indexOf(issue.status);\n//     const target = STATUSES[Math.min(STATUSES.length-1, idx+1)];\n//     if(target !== issue.status){ await moveIssue(id,target); refresh(); }\n//   };\n\n//   // Export CSV\n//   const exportCSV = () => {\n//     const csv = issuesToCSV(issues);\n//     const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });\n//     const url = URL.createObjectURL(blob);\n//     const a = document.createElement('a');\n//     a.href = url; a.download = `issues_export_${projectId||'all'}.csv`; a.click();\n//     URL.revokeObjectURL(url);\n//   };\n\n//   // Import CSV\n//   const importCSV = (e) => {\n//     const file = e.target.files && e.target.files[0];\n//     if(!file) return;\n//     const reader = new FileReader();\n//     reader.onload = async (ev) => {\n//       try {\n//         const text = ev.target.result;\n//         const imported = csvToIssues(text);\n//         // Merge with existing issues: simple append with new IDs\n//         for(const row of imported){\n//           // only minimal fields handled; createIssue is not imported here to avoid API mismatch\n//           // createIssue would be used for full import; for demo we push to localStorage directly\n//           // but here we attempt to call moveIssue or update if id exists. fallback: ignore.\n//         }\n//         alert('Import parsed ' + imported.length + ' rows. For full import to central DB, use backend import.');\n//       } catch(err) {\n//         alert('CSV parse error: ' + err.message);\n//       }\n//     };\n//     reader.readAsText(file);\n//     // reset file input\n//     e.target.value = '';\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-label=\"Kanban board\">\n//       <div style={{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:12}}>\n//         <h2 style={{margin:0}}>Kanban Board {projectId?`- ${projectId}`:''}</h2>\n//         <div style={{display:'flex',gap:8,alignItems:'center'}}>\n//           <button className=\"btn-ghost\" onClick={exportCSV} aria-label=\"Export issues as CSV\">Export CSV</button>\n//           <label className=\"btn-ghost\" style={{cursor:'pointer'}}>\n//             Import CSV\n//             <input ref={fileRef} type=\"file\" accept=\".csv,text/csv\" onChange={importCSV} style={{display:'none'}} aria-hidden=\"true\"/>\n//           </label>\n//           <button className=\"btn\" onClick={()=>window.print()} aria-label=\"Print board\">Print</button>\n//         </div>\n//       </div>\n\n//       <div className=\"kanban\" role=\"list\">\n//         {STATUSES.map(s=>(\n//           <section key={s} className=\"kanban-column\" aria-labelledby={`col-${s}`} onDragOver={e=>e.preventDefault()} onDrop={e=>onDrop(e,s)}>\n//             <h4 id={`col-${s}`}>{s.toUpperCase()}</h4>\n//             {byStatus(s).map(i=>(\n//               <article key={i.id} className=\"card-item\" role=\"listitem\" tabIndex=\"0\" data-priority={i.priority}\n//                 draggable onDragStart={e=>onDragStart(e,i.id)}\n//                 onKeyDown={(e)=>handleKey(e,i)}\n//                 aria-describedby={`desc-${i.id}`}>\n//                 <div style={{display:'flex',justifyContent:'space-between',alignItems:'center'}}>\n//                   <strong>{i.title}</strong>\n//                   <div style={{display:'flex',gap:6}}>\n//                     <button className=\"btn-ghost\" onClick={(e)=>{ e.stopPropagation(); moveLeft(i.id); }} aria-label={`Move ${i.title} left`}>◀</button>\n//                     <button className=\"btn-ghost\" onClick={(e)=>{ e.stopPropagation(); moveRight(i.id); }} aria-label={`Move ${i.title} right`}>▶</button>\n//                   </div>\n//                 </div>\n//                 <div id={`desc-${i.id}`} className=\"small\">Assignee: {i.assignee} • {i.storyPoints} pts</div>\n//               </article>\n//             ))}\n//           </section>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { listIssues, moveIssue } from '../../services/mockApi';\nimport { useParams } from 'react-router-dom';\nimport { useProjects } from '../../context/ProjectContext';\n\nconst STATUSES = ['todo', 'inprogress', 'review', 'done'];\n\nexport default function KanbanBoard() {\n  const { projectId } = useParams();\n  const { projects } = useProjects();\n  const [issues, setIssues] = useState([]);\n  const fileRef = useRef(null);\n\n  useEffect(() => {\n    listIssues(projectId).then(setIssues);\n  }, [projectId]);\n\n  const refresh = async () => setIssues(await listIssues(projectId));\n\n  const onDrop = async (e, status) => {\n    const id = e.dataTransfer.getData('text/plain');\n    await moveIssue(id, status);\n    refresh();\n  };\n\n  const onDragStart = (e, id) => {\n    e.dataTransfer.setData('text/plain', id);\n  };\n\n  const moveLeft = async (id) => {\n    const issue = issues.find(i => i.id === id);\n    const idx = STATUSES.indexOf(issue.status);\n    const target = STATUSES[Math.max(0, idx - 1)];\n    if (target !== issue.status) {\n      await moveIssue(id, target);\n      refresh();\n    }\n  };\n\n  const moveRight = async (id) => {\n    const issue = issues.find(i => i.id === id);\n    const idx = STATUSES.indexOf(issue.status);\n    const target = STATUSES[Math.min(STATUSES.length - 1, idx + 1)];\n    if (target !== issue.status) {\n      await moveIssue(id, target);\n      refresh();\n    }\n  };\n\n  const byStatus = (s) => issues.filter(i => i.status === s);\n\n  return (\n    <div className=\"card\" role=\"region\" aria-label=\"Kanban board\">\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: 12 }}>\n        <h2 style={{ margin: 0 }}>Kanban Board {projectId ? `- ${projectId}` : ''}</h2>\n        <div style={{ display: 'flex', gap: 8, alignItems: 'center' }}>\n          <button className=\"btn\" onClick={() => window.print()} aria-label=\"Print board\">Print</button>\n        </div>\n      </div>\n\n      <div className=\"kanban\" role=\"list\">\n        {STATUSES.map(s => (\n          <section key={s} className=\"kanban-column\" aria-labelledby={`col-${s}`} onDragOver={e => e.preventDefault()} onDrop={e => onDrop(e, s)}>\n            <h4 id={`col-${s}`}>{s.toUpperCase()}</h4>\n            {byStatus(s).map(i => (\n              <article key={i.id} className=\"card-item\" role=\"listitem\" tabIndex=\"0\" data-priority={i.priority}\n                draggable onDragStart={e => onDragStart(e, i.id)}>\n                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                  <strong>{i.title}</strong>\n                  <div style={{ display: 'flex', gap: 6 }}>\n                    <button className=\"btn-ghost\" onClick={(e) => { e.stopPropagation(); moveLeft(i.id); }}>◀</button>\n                    <button className=\"btn-ghost\" onClick={(e) => { e.stopPropagation(); moveRight(i.id); }}>▶</button>\n                  </div>\n                </div>\n                <div className=\"small\">Assignee: {i.assignee} • {i.storyPoints} pts</div>\n              </article>\n            ))}\n          </section>\n        ))}\n      </div>\n\n      <div style={{ marginTop: 20 }}>\n        <h3>📋 Projects from Timeline</h3>\n        <ul>\n          {projects.map(p => (\n            <li key={p.id}>\n              <strong>{p.text}</strong> — Starts: {p.start_date}, Duration: {p.duration} days\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\n"],"mappings":";;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,UAAU,EAAEC,SAAS,QAAQ,wBAAwB;AAC9D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,CAAC;AAEzD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAU,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAM;IAAEQ;EAAS,CAAC,GAAGP,WAAW,CAAC,CAAC;EAClC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMe,OAAO,GAAGd,MAAM,CAAC,IAAI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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}