{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import { getCurrentUser, listIssues, listNotifs } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function ForYou() {\n//   const navigate = useNavigate();\n//   const [user, setUser] = useState(getCurrentUser());\n//   const [issues, setIssues] = useState([]); // always an array\n//   const [notifications, setNotifications] = useState([]);\n//   const [showTodayOnly, setShowTodayOnly] = useState(false);\n\n//   useEffect(() => {\n//     listIssues().then((res) => {\n//       // Ensure issues is always an array\n//       if (Array.isArray(res)) {\n//         setIssues(res);\n//       } else if (res?.data && Array.isArray(res.data)) {\n//         setIssues(res.data);\n//       } else {\n//         setIssues([]); // fallback\n//       }\n//     });\n\n//     listNotifs().then((res) => {\n//       if (Array.isArray(res)) {\n//         setNotifications(res);\n//       } else if (res?.data && Array.isArray(res.data)) {\n//         setNotifications(res.data);\n//       } else {\n//         setNotifications([]);\n//       }\n//     });\n//   }, []);\n\n//   // Only filter if issues is an array\n//   const mine = Array.isArray(issues)\n//     ? issues.filter((i) => i.assignee === user?.id)\n//     : [];\n\n//   const today = new Date().toISOString().slice(0, 10);\n//   const thisWeek = new Date();\n//   thisWeek.setDate(thisWeek.getDate() + 7);\n//   const weekEnd = thisWeek.toISOString().slice(0, 10);\n\n//   const filteredIssues = mine.filter((i) => {\n//     if (!i.dueDate) return false;\n//     if (showTodayOnly) return i.dueDate === today;\n//     return i.dueDate >= today && i.dueDate <= weekEnd;\n//   });\n\n//   const containerStyle = { padding: '2rem', fontFamily: 'Segoe UI, sans-serif', backgroundColor: '#f4f6f8' };\n//   const headerStyle = { marginBottom: '2rem' };\n//   const gridStyle = { display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem' };\n//   const cardStyle = { background: '#fff', borderRadius: '8px', padding: '1.5rem', boxShadow: '0 2px 8px rgba(0,0,0,0.05)' };\n//   const btnStyle = { backgroundColor: '#1976d2', color: 'white', padding: '0.6rem 1rem', borderRadius: '6px', textAlign: 'center', marginBottom: '0.5rem', cursor: 'pointer', border: 'none' };\n//   const statusStyle = (status) => ({\n//     fontSize: '0.85rem',\n//     padding: '0.2rem 0.5rem',\n//     borderRadius: '4px',\n//     marginRight: '0.5rem',\n//     backgroundColor: status === 'Open' ? '#e0f7fa' : '#fbe9e7',\n//     color: status === 'Open' ? '#00796b' : '#d84315',\n//   });\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>\n//         <h1>üëã Welcome, {user?.name}</h1>\n//         <p>Here‚Äôs what‚Äôs happening this week</p>\n//       </div>\n\n//       <div style={gridStyle}>\n//         {/* Assigned Tasks */}\n//         <div style={cardStyle}>\n//           <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             <h2>üóÇÔ∏è Your Boards</h2>\n//             <label style={{ fontSize: '0.9rem' }}>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={showTodayOnly}\n//                 onChange={() => setShowTodayOnly(!showTodayOnly)}\n//                 style={{ marginRight: '0.5rem' }}\n//               />\n//               Show only today's tasks\n//             </label>\n//           </div>\n//           <ul style={{ listStyle: 'none', padding: 0, marginTop: '1rem' }}>\n//             {filteredIssues.length > 0 ? (\n//               filteredIssues.map((i) => (\n//                 <li key={i.id} style={{ padding: '0.5rem 0', borderBottom: '1px solid #eee' }}>\n//                   <strong>{i.title}</strong>\n//                   <br />\n//                   <span style={statusStyle(i.status)}>{i.status}</span>\n//                   <span style={{ fontSize: '0.8rem', color: '#666' }}> Due: {i.dueDate}</span>\n//                 </li>\n//               ))\n//             ) : (\n//               <li style={{ color: '#999', fontStyle: 'italic' }}>No tasks found</li>\n//             )}\n//           </ul>\n//         </div>\n\n//         {/* Recently Viewed */}\n//         <div style={cardStyle}>\n//           <h2>üïµÔ∏è Recently Viewed</h2>\n//           <p style={{ color: '#aaa', fontSize: '0.9rem' }}>Feature coming soon</p>\n//         </div>\n\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/dashboard/ForYou.js"],"sourcesContent":["\n\n// import React, { useEffect, useState } from 'react';\n// import { getCurrentUser, listIssues, listNotifs } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function ForYou() {\n//   const navigate = useNavigate();\n//   const [user, setUser] = useState(getCurrentUser());\n//   const [issues, setIssues] = useState([]); // always an array\n//   const [notifications, setNotifications] = useState([]);\n//   const [showTodayOnly, setShowTodayOnly] = useState(false);\n\n//   useEffect(() => {\n//     listIssues().then((res) => {\n//       // Ensure issues is always an array\n//       if (Array.isArray(res)) {\n//         setIssues(res);\n//       } else if (res?.data && Array.isArray(res.data)) {\n//         setIssues(res.data);\n//       } else {\n//         setIssues([]); // fallback\n//       }\n//     });\n\n//     listNotifs().then((res) => {\n//       if (Array.isArray(res)) {\n//         setNotifications(res);\n//       } else if (res?.data && Array.isArray(res.data)) {\n//         setNotifications(res.data);\n//       } else {\n//         setNotifications([]);\n//       }\n//     });\n//   }, []);\n\n//   // Only filter if issues is an array\n//   const mine = Array.isArray(issues)\n//     ? issues.filter((i) => i.assignee === user?.id)\n//     : [];\n\n//   const today = new Date().toISOString().slice(0, 10);\n//   const thisWeek = new Date();\n//   thisWeek.setDate(thisWeek.getDate() + 7);\n//   const weekEnd = thisWeek.toISOString().slice(0, 10);\n\n//   const filteredIssues = mine.filter((i) => {\n//     if (!i.dueDate) return false;\n//     if (showTodayOnly) return i.dueDate === today;\n//     return i.dueDate >= today && i.dueDate <= weekEnd;\n//   });\n\n//   const containerStyle = { padding: '2rem', fontFamily: 'Segoe UI, sans-serif', backgroundColor: '#f4f6f8' };\n//   const headerStyle = { marginBottom: '2rem' };\n//   const gridStyle = { display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '1.5rem' };\n//   const cardStyle = { background: '#fff', borderRadius: '8px', padding: '1.5rem', boxShadow: '0 2px 8px rgba(0,0,0,0.05)' };\n//   const btnStyle = { backgroundColor: '#1976d2', color: 'white', padding: '0.6rem 1rem', borderRadius: '6px', textAlign: 'center', marginBottom: '0.5rem', cursor: 'pointer', border: 'none' };\n//   const statusStyle = (status) => ({\n//     fontSize: '0.85rem',\n//     padding: '0.2rem 0.5rem',\n//     borderRadius: '4px',\n//     marginRight: '0.5rem',\n//     backgroundColor: status === 'Open' ? '#e0f7fa' : '#fbe9e7',\n//     color: status === 'Open' ? '#00796b' : '#d84315',\n//   });\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>\n//         <h1>üëã Welcome, {user?.name}</h1>\n//         <p>Here‚Äôs what‚Äôs happening this week</p>\n//       </div>\n\n//       <div style={gridStyle}>\n//         {/* Assigned Tasks */}\n//         <div style={cardStyle}>\n//           <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n//             <h2>üóÇÔ∏è Your Boards</h2>\n//             <label style={{ fontSize: '0.9rem' }}>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={showTodayOnly}\n//                 onChange={() => setShowTodayOnly(!showTodayOnly)}\n//                 style={{ marginRight: '0.5rem' }}\n//               />\n//               Show only today's tasks\n//             </label>\n//           </div>\n//           <ul style={{ listStyle: 'none', padding: 0, marginTop: '1rem' }}>\n//             {filteredIssues.length > 0 ? (\n//               filteredIssues.map((i) => (\n//                 <li key={i.id} style={{ padding: '0.5rem 0', borderBottom: '1px solid #eee' }}>\n//                   <strong>{i.title}</strong>\n//                   <br />\n//                   <span style={statusStyle(i.status)}>{i.status}</span>\n//                   <span style={{ fontSize: '0.8rem', color: '#666' }}> Due: {i.dueDate}</span>\n//                 </li>\n//               ))\n//             ) : (\n//               <li style={{ color: '#999', fontStyle: 'italic' }}>No tasks found</li>\n//             )}\n//           </ul>\n//         </div>\n\n//         {/* Recently Viewed */}\n//         <div style={cardStyle}>\n//           <h2>üïµÔ∏è Recently Viewed</h2>\n//           <p style={{ color: '#aaa', fontSize: '0.9rem' }}>Feature coming soon</p>\n//         </div>\n\n\n      \n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}