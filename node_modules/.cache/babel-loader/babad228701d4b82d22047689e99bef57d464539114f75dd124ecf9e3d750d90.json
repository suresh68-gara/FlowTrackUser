{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\forusers\\\\userspage\\\\src\\\\components\\\\assets\\\\Assets.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { listAssets, addAsset } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// export default function AssetsBoard() {\n//   const [assets, setAssets] = useState([]);\n//   const [name, setName] = useState(\"\");\n//   const [type, setType] = useState(\"Laptop\");\n//   const [owner, setOwner] = useState(\"\");\n//   const [editingId, setEditingId] = useState(null);\n//   const [editFields, setEditFields] = useState({});\n//   const [hoveredId, setHoveredId] = useState({});\n//   const [quickAdd, setQuickAdd] = useState({});\n\n//   useEffect(() => {\n//     listAssets().then(setAssets);\n//   }, []);\n\n//   const add = async (status = \"active\") => {\n//     const assetName = status === \"form\" ? name : quickAdd[status]?.name;\n//     const assetType = status === \"form\" ? type : quickAdd[status]?.type || \"Laptop\";\n//     const assetOwner = status === \"form\" ? owner : quickAdd[status]?.owner || \"\";\n//     if (!assetName?.trim()) return;\n\n//     const a = { id: uuidv4(), name: assetName, type: assetType, owner: assetOwner, status: status === \"form\" ? \"active\" : status };\n//     await addAsset(a);\n//     setAssets(await listAssets());\n\n//     if (status === \"form\") { setName(\"\"); setType(\"Laptop\"); setOwner(\"\"); }\n//     else { setQuickAdd(prev => ({ ...prev, [status]: { name: \"\", type: \"\", owner: \"\" } })); }\n//   };\n\n//   // const statusColumns = {\n//   //   active: { title: \"Active\", color: \"#36B37E\" },\n//   //   maintenance: { title: \"Maintenance\", color: \"#FFAB00\" },\n//   //   inactive: { title: \"Inactive\", color: \"#A5ADBA\" },\n//   // };\n\n//   const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n//     acc[status] = assets.filter(a => a.status === status);\n//     return acc;\n//   }, {});\n\n//   const onDragEnd = (result) => {\n//     if (!result.destination) return;\n//     const { source, destination, draggableId } = result;\n//     if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n//     const asset = assets.find(a => a.id === draggableId);\n//     const updatedAsset = { ...asset, status: destination.droppableId };\n//     setAssets(assets.map(a => (a.id === draggableId ? updatedAsset : a)));\n//   };\n\n//   const startEditing = (asset) => { setEditingId(asset.id); setEditFields({ ...asset }); };\n//   const saveEdit = (id) => { setAssets(assets.map(a => (a.id === id ? { ...a, ...editFields } : a))); setEditingId(null); };\n//   const cancelEdit = () => setEditingId(null);\n//   const deleteAsset = (id) => setAssets(assets.filter(a => a.id !== id));\n\n//   return (\n//     <div style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\", background: \"#F4F5F7\", minHeight: \"100vh\" }}>\n//       {/* Add Asset Top Form */}\n//       <div style={{\n//         marginBottom: \"2rem\",\n//         background: \"#fff\",\n//         padding: \"1.5rem\",\n//         borderRadius: \"8px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n//       }}>\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>Add Asset</h2>\n//         <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n//           <input placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <input placeholder=\"Type\" value={type} onChange={e => setType(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <input placeholder=\"Owner\" value={owner} onChange={e => setOwner(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <button onClick={() => add(\"form\")} style={{ padding: \"0.5rem 1rem\", background: \"#0052CC\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>Add</button>\n//         </div>\n//       </div>\n\n//       {/* Kanban Board */}\n//       <DragDropContext onDragEnd={onDragEnd}>\n//         <div style={{ display: \"flex\", gap: \"1rem\" }}>\n//           {Object.keys(statusColumns).map(status => (\n//             <Droppable droppableId={status} key={status}>\n//               {(provided) => (\n//                 <div ref={provided.innerRef} {...provided.droppableProps}\n//                   style={{ flex: 1, background: \"#EBECF0\", padding: \"1rem\", borderRadius: \"8px\", minHeight: \"300px\" }}>\n//                   <h3 style={{ color: statusColumns[status].color }}>{statusColumns[status].title}</h3>\n\n//                   {/* Assets */}\n//                   {groupedAssets[status].map((a, index) => (\n//                     <Draggable draggableId={a.id} index={index} key={a.id}>\n//                       {(provided, snapshot) => (\n//                         <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n//                           onMouseEnter={() => setHoveredId(a.id)}\n//                           onMouseLeave={() => setHoveredId(null)}\n//                           style={{\n//                             padding: \"0.75rem 1rem\",\n//                             marginBottom: \"0.5rem\",\n//                             borderRadius: \"6px\",\n//                             background: snapshot.isDragging ? \"#D2E5FF\" : \"#fff\",\n//                             boxShadow: snapshot.isDragging ? \"0 2px 8px rgba(0,0,0,0.2)\" : \"none\",\n//                             position: \"relative\",\n//                             ...provided.draggableProps.style\n//                           }}>\n//                           {editingId === a.id ? (\n//                             <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}>\n//                               <input value={editFields.name} onChange={e => setEditFields({ ...editFields, name: e.target.value })} />\n//                               <input value={editFields.type} onChange={e => setEditFields({ ...editFields, type: e.target.value })} />\n//                               <input value={editFields.owner} onChange={e => setEditFields({ ...editFields, owner: e.target.value })} />\n//                               <select value={editFields.status} onChange={e => setEditFields({ ...editFields, status: e.target.value })}>\n//                                 {Object.keys(statusColumns).map(s => <option key={s} value={s}>{statusColumns[s].title}</option>)}\n//                               </select>\n//                               <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n//                                 <button onClick={() => saveEdit(a.id)} style={{ background: \"#36B37E\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\" }}>Save</button>\n//                                 <button onClick={cancelEdit} style={{ background: \"#DE350B\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\" }}>Cancel</button>\n//                               </div>\n//                             </div>\n//                           ) : (\n//                             <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\n//                               <div style={{ fontWeight: \"bold\" }}>{a.name}</div>\n//                               <div style={{ fontSize: \"0.85rem\", color: \"#555\" }}>{a.type} | {a.owner || \"-\"}</div>\n//                             </div>\n//                           )}\n\n//                           {/* Hover Toolbar */}\n//                           {hoveredId === a.id && editingId !== a.id && (\n//                             <div style={{\n//                               position: \"absolute\",\n//                               top: \"4px\",\n//                               right: \"4px\",\n//                               display: \"flex\",\n//                               gap: \"0.5rem\"\n//                             }}>\n//                               <button onClick={() => startEditing(a)} style={{ background: \"transparent\", border: \"none\", color: \"#0052CC\", cursor: \"pointer\", fontWeight: \"bold\" }}>Edit</button>\n//                               <button onClick={() => deleteAsset(a.id)} style={{ background: \"transparent\", border: \"none\", color: \"#DE350B\", cursor: \"pointer\", fontWeight: \"bold\" }}>Delete</button>\n//                             </div>\n//                           )}\n//                         </div>\n//                       )}\n//                     </Draggable>\n//                   ))}\n//                   {provided.placeholder}\n\n//                   {/* Quick Add in Column */}\n//                   <div style={{ marginTop: \"0.5rem\", display: \"flex\", flexDirection: \"column\", gap: \"0.25rem\" }}>\n//                     <input placeholder=\"Name\" value={quickAdd[status]?.name || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], name: e.target.value } }))} />\n//                     <input placeholder=\"Type\" value={quickAdd[status]?.type || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], type: e.target.value } }))} />\n//                     <input placeholder=\"Owner\" value={quickAdd[status]?.owner || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], owner: e.target.value } }))} />\n//                     <button onClick={() => add(status)} style={{ background: \"#0052CC\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\", cursor: \"pointer\" }}>Add</button>\n//                   </div>\n\n//                 </div>\n//               )}\n//             </Droppable>\n//           ))}\n//         </div>\n//       </DragDropContext>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from \"react\";\nimport { listAssets } from \"../../services/mockApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserAssetsBoard({\n  currentUser\n}) {\n  _s();\n  var _statusColumns$select, _statusColumns$select2;\n  const [assets, setAssets] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedAsset, setSelectedAsset] = useState(null); // for modal\n\n  useEffect(() => {\n    listAssets().then(data => {\n      // Only show assets assigned to this user\n      const userAssets = data.filter(a => {\n        var _a$owner;\n        return ((_a$owner = a.owner) === null || _a$owner === void 0 ? void 0 : _a$owner.toLowerCase()) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.toLowerCase());\n      });\n      setAssets(userAssets);\n    });\n  }, [currentUser]);\n  const statusColumns = {\n    active: {\n      title: \"Active\",\n      color: \"#36B37E\"\n    },\n    maintenance: {\n      title: \"Maintenance\",\n      color: \"#FFAB00\"\n    },\n    inactive: {\n      title: \"Inactive\",\n      color: \"#A5ADBA\"\n    }\n  };\n  const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n    acc[status] = assets.filter(a => a.status === status && (a.name.toLowerCase().includes(search.toLowerCase()) || a.type.toLowerCase().includes(search.toLowerCase())));\n    return acc;\n  }, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"Arial, sans-serif\",\n      background: \"#F4F5F7\",\n      minHeight: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: \"1rem\",\n        fontSize: \"1.5rem\"\n      },\n      children: \"My Assets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2rem\",\n        background: \"#fff\",\n        padding: \"1rem\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name or type...\",\n        value: search,\n        onChange: e => setSearch(e.target.value),\n        style: {\n          width: \"100%\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"1rem\"\n      },\n      children: Object.keys(statusColumns).map(status => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          background: \"#EBECF0\",\n          padding: \"1rem\",\n          borderRadius: \"8px\",\n          minHeight: \"300px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: statusColumns[status].color\n          },\n          children: statusColumns[status].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), groupedAssets[status].length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"#888\",\n            fontSize: \"0.9rem\"\n          },\n          children: \"No assets in this category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }, this) : groupedAssets[status].map(a => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedAsset(a),\n          style: {\n            padding: \"0.75rem 1rem\",\n            marginBottom: \"0.5rem\",\n            borderRadius: \"6px\",\n            background: \"#fff\",\n            boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            children: a.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: \"0.85rem\",\n              color: \"#555\"\n            },\n            children: [a.type, \" | \", a.owner || \"-\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 19\n          }, this)]\n        }, a.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this))]\n      }, status, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), selectedAsset && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        background: \"rgba(0,0,0,0.5)\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        zIndex: 1000\n      },\n      onClick: () => setSelectedAsset(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => e.stopPropagation(),\n        style: {\n          background: \"#fff\",\n          padding: \"2rem\",\n          borderRadius: \"8px\",\n          width: \"400px\",\n          maxHeight: \"80vh\",\n          overflowY: \"auto\",\n          boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginBottom: \"1rem\"\n          },\n          children: selectedAsset.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), \" \", selectedAsset.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: (_statusColumns$select = statusColumns[selectedAsset.status]) === null || _statusColumns$select === void 0 ? void 0 : _statusColumns$select.color\n            },\n            children: (_statusColumns$select2 = statusColumns[selectedAsset.status]) === null || _statusColumns$select2 === void 0 ? void 0 : _statusColumns$select2.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Owner:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 15\n          }, this), \" \", selectedAsset.owner || \"-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 15\n          }, this), \" \", selectedAsset.description || \"No description available\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedAsset(null),\n          style: {\n            marginTop: \"1.5rem\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"4px\",\n            border: \"none\",\n            background: \"#0052CC\",\n            color: \"#fff\",\n            cursor: \"pointer\"\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(UserAssetsBoard, \"bvFiixcpS43+NfAvYew9agLNqe0=\");\n_c = UserAssetsBoard;\nvar _c;\n$RefreshReg$(_c, \"UserAssetsBoard\");","map":{"version":3,"names":["React","useEffect","useState","listAssets","jsxDEV","_jsxDEV","UserAssetsBoard","currentUser","_s","_statusColumns$select","_statusColumns$select2","assets","setAssets","search","setSearch","selectedAsset","setSelectedAsset","then","data","userAssets","filter","a","_a$owner","owner","toLowerCase","statusColumns","active","title","color","maintenance","inactive","groupedAssets","Object","keys","reduce","acc","status","name","includes","type","style","padding","fontFamily","background","minHeight","children","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","borderRadius","boxShadow","placeholder","value","onChange","e","target","width","border","display","gap","map","flex","length","onClick","cursor","fontWeight","id","position","top","left","height","alignItems","justifyContent","zIndex","stopPropagation","maxHeight","overflowY","description","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/assets/Assets.js"],"sourcesContent":["\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { listAssets, addAsset } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// export default function AssetsBoard() {\n//   const [assets, setAssets] = useState([]);\n//   const [name, setName] = useState(\"\");\n//   const [type, setType] = useState(\"Laptop\");\n//   const [owner, setOwner] = useState(\"\");\n//   const [editingId, setEditingId] = useState(null);\n//   const [editFields, setEditFields] = useState({});\n//   const [hoveredId, setHoveredId] = useState({});\n//   const [quickAdd, setQuickAdd] = useState({});\n\n//   useEffect(() => {\n//     listAssets().then(setAssets);\n//   }, []);\n\n//   const add = async (status = \"active\") => {\n//     const assetName = status === \"form\" ? name : quickAdd[status]?.name;\n//     const assetType = status === \"form\" ? type : quickAdd[status]?.type || \"Laptop\";\n//     const assetOwner = status === \"form\" ? owner : quickAdd[status]?.owner || \"\";\n//     if (!assetName?.trim()) return;\n\n//     const a = { id: uuidv4(), name: assetName, type: assetType, owner: assetOwner, status: status === \"form\" ? \"active\" : status };\n//     await addAsset(a);\n//     setAssets(await listAssets());\n\n//     if (status === \"form\") { setName(\"\"); setType(\"Laptop\"); setOwner(\"\"); }\n//     else { setQuickAdd(prev => ({ ...prev, [status]: { name: \"\", type: \"\", owner: \"\" } })); }\n//   };\n\n//   // const statusColumns = {\n//   //   active: { title: \"Active\", color: \"#36B37E\" },\n//   //   maintenance: { title: \"Maintenance\", color: \"#FFAB00\" },\n//   //   inactive: { title: \"Inactive\", color: \"#A5ADBA\" },\n//   // };\n\n//   const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n//     acc[status] = assets.filter(a => a.status === status);\n//     return acc;\n//   }, {});\n\n//   const onDragEnd = (result) => {\n//     if (!result.destination) return;\n//     const { source, destination, draggableId } = result;\n//     if (source.droppableId === destination.droppableId && source.index === destination.index) return;\n\n//     const asset = assets.find(a => a.id === draggableId);\n//     const updatedAsset = { ...asset, status: destination.droppableId };\n//     setAssets(assets.map(a => (a.id === draggableId ? updatedAsset : a)));\n//   };\n\n//   const startEditing = (asset) => { setEditingId(asset.id); setEditFields({ ...asset }); };\n//   const saveEdit = (id) => { setAssets(assets.map(a => (a.id === id ? { ...a, ...editFields } : a))); setEditingId(null); };\n//   const cancelEdit = () => setEditingId(null);\n//   const deleteAsset = (id) => setAssets(assets.filter(a => a.id !== id));\n\n//   return (\n//     <div style={{ padding: \"2rem\", fontFamily: \"Arial, sans-serif\", background: \"#F4F5F7\", minHeight: \"100vh\" }}>\n//       {/* Add Asset Top Form */}\n//       <div style={{\n//         marginBottom: \"2rem\",\n//         background: \"#fff\",\n//         padding: \"1.5rem\",\n//         borderRadius: \"8px\",\n//         boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n//       }}>\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>Add Asset</h2>\n//         <div style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}>\n//           <input placeholder=\"Name\" value={name} onChange={e => setName(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <input placeholder=\"Type\" value={type} onChange={e => setType(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <input placeholder=\"Owner\" value={owner} onChange={e => setOwner(e.target.value)}\n//             style={{ flex: 1, padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }} />\n//           <button onClick={() => add(\"form\")} style={{ padding: \"0.5rem 1rem\", background: \"#0052CC\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", cursor: \"pointer\" }}>Add</button>\n//         </div>\n//       </div>\n\n//       {/* Kanban Board */}\n//       <DragDropContext onDragEnd={onDragEnd}>\n//         <div style={{ display: \"flex\", gap: \"1rem\" }}>\n//           {Object.keys(statusColumns).map(status => (\n//             <Droppable droppableId={status} key={status}>\n//               {(provided) => (\n//                 <div ref={provided.innerRef} {...provided.droppableProps}\n//                   style={{ flex: 1, background: \"#EBECF0\", padding: \"1rem\", borderRadius: \"8px\", minHeight: \"300px\" }}>\n//                   <h3 style={{ color: statusColumns[status].color }}>{statusColumns[status].title}</h3>\n\n//                   {/* Assets */}\n//                   {groupedAssets[status].map((a, index) => (\n//                     <Draggable draggableId={a.id} index={index} key={a.id}>\n//                       {(provided, snapshot) => (\n//                         <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}\n//                           onMouseEnter={() => setHoveredId(a.id)}\n//                           onMouseLeave={() => setHoveredId(null)}\n//                           style={{\n//                             padding: \"0.75rem 1rem\",\n//                             marginBottom: \"0.5rem\",\n//                             borderRadius: \"6px\",\n//                             background: snapshot.isDragging ? \"#D2E5FF\" : \"#fff\",\n//                             boxShadow: snapshot.isDragging ? \"0 2px 8px rgba(0,0,0,0.2)\" : \"none\",\n//                             position: \"relative\",\n//                             ...provided.draggableProps.style\n//                           }}>\n//                           {editingId === a.id ? (\n//                             <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}>\n//                               <input value={editFields.name} onChange={e => setEditFields({ ...editFields, name: e.target.value })} />\n//                               <input value={editFields.type} onChange={e => setEditFields({ ...editFields, type: e.target.value })} />\n//                               <input value={editFields.owner} onChange={e => setEditFields({ ...editFields, owner: e.target.value })} />\n//                               <select value={editFields.status} onChange={e => setEditFields({ ...editFields, status: e.target.value })}>\n//                                 {Object.keys(statusColumns).map(s => <option key={s} value={s}>{statusColumns[s].title}</option>)}\n//                               </select>\n//                               <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n//                                 <button onClick={() => saveEdit(a.id)} style={{ background: \"#36B37E\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\" }}>Save</button>\n//                                 <button onClick={cancelEdit} style={{ background: \"#DE350B\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\" }}>Cancel</button>\n//                               </div>\n//                             </div>\n//                           ) : (\n//                             <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\n//                               <div style={{ fontWeight: \"bold\" }}>{a.name}</div>\n//                               <div style={{ fontSize: \"0.85rem\", color: \"#555\" }}>{a.type} | {a.owner || \"-\"}</div>\n//                             </div>\n//                           )}\n\n//                           {/* Hover Toolbar */}\n//                           {hoveredId === a.id && editingId !== a.id && (\n//                             <div style={{\n//                               position: \"absolute\",\n//                               top: \"4px\",\n//                               right: \"4px\",\n//                               display: \"flex\",\n//                               gap: \"0.5rem\"\n//                             }}>\n//                               <button onClick={() => startEditing(a)} style={{ background: \"transparent\", border: \"none\", color: \"#0052CC\", cursor: \"pointer\", fontWeight: \"bold\" }}>Edit</button>\n//                               <button onClick={() => deleteAsset(a.id)} style={{ background: \"transparent\", border: \"none\", color: \"#DE350B\", cursor: \"pointer\", fontWeight: \"bold\" }}>Delete</button>\n//                             </div>\n//                           )}\n//                         </div>\n//                       )}\n//                     </Draggable>\n//                   ))}\n//                   {provided.placeholder}\n\n//                   {/* Quick Add in Column */}\n//                   <div style={{ marginTop: \"0.5rem\", display: \"flex\", flexDirection: \"column\", gap: \"0.25rem\" }}>\n//                     <input placeholder=\"Name\" value={quickAdd[status]?.name || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], name: e.target.value } }))} />\n//                     <input placeholder=\"Type\" value={quickAdd[status]?.type || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], type: e.target.value } }))} />\n//                     <input placeholder=\"Owner\" value={quickAdd[status]?.owner || \"\"} onChange={e => setQuickAdd(prev => ({ ...prev, [status]: { ...prev[status], owner: e.target.value } }))} />\n//                     <button onClick={() => add(status)} style={{ background: \"#0052CC\", color: \"#fff\", border: \"none\", borderRadius: \"4px\", padding: \"0.25rem 0.5rem\", cursor: \"pointer\" }}>Add</button>\n//                   </div>\n\n//                 </div>\n//               )}\n//             </Droppable>\n//           ))}\n//         </div>\n//       </DragDropContext>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { listAssets } from \"../../services/mockApi\";\n\nexport default function UserAssetsBoard({ currentUser }) {\n  const [assets, setAssets] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [selectedAsset, setSelectedAsset] = useState(null); // for modal\n\n  useEffect(() => {\n    listAssets().then((data) => {\n      // Only show assets assigned to this user\n      const userAssets = data.filter(\n        (a) => a.owner?.toLowerCase() === currentUser?.toLowerCase()\n      );\n      setAssets(userAssets);\n    });\n  }, [currentUser]);\n\n  const statusColumns = {\n    active: { title: \"Active\", color: \"#36B37E\" },\n    maintenance: { title: \"Maintenance\", color: \"#FFAB00\" },\n    inactive: { title: \"Inactive\", color: \"#A5ADBA\" },\n  };\n\n  const groupedAssets = Object.keys(statusColumns).reduce((acc, status) => {\n    acc[status] = assets.filter(\n      (a) =>\n        a.status === status &&\n        (a.name.toLowerCase().includes(search.toLowerCase()) ||\n          a.type.toLowerCase().includes(search.toLowerCase()))\n    );\n    return acc;\n  }, {});\n\n  return (\n    <div\n      style={{\n        padding: \"2rem\",\n        fontFamily: \"Arial, sans-serif\",\n        background: \"#F4F5F7\",\n        minHeight: \"100vh\",\n      }}\n    >\n      <h2 style={{ marginBottom: \"1rem\", fontSize: \"1.5rem\" }}>My Assets</h2>\n\n      {/* Search Bar */}\n      <div\n        style={{\n          marginBottom: \"2rem\",\n          background: \"#fff\",\n          padding: \"1rem\",\n          borderRadius: \"8px\",\n          boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\n        }}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Search by name or type...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          style={{\n            width: \"100%\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\",\n          }}\n        />\n      </div>\n\n      {/* Kanban Board */}\n      <div style={{ display: \"flex\", gap: \"1rem\" }}>\n        {Object.keys(statusColumns).map((status) => (\n          <div\n            key={status}\n            style={{\n              flex: 1,\n              background: \"#EBECF0\",\n              padding: \"1rem\",\n              borderRadius: \"8px\",\n              minHeight: \"300px\",\n            }}\n          >\n            <h3 style={{ color: statusColumns[status].color }}>\n              {statusColumns[status].title}\n            </h3>\n\n            {groupedAssets[status].length === 0 ? (\n              <p style={{ color: \"#888\", fontSize: \"0.9rem\" }}>\n                No assets in this category\n              </p>\n            ) : (\n              groupedAssets[status].map((a) => (\n                <div\n                  key={a.id}\n                  onClick={() => setSelectedAsset(a)}\n                  style={{\n                    padding: \"0.75rem 1rem\",\n                    marginBottom: \"0.5rem\",\n                    borderRadius: \"6px\",\n                    background: \"#fff\",\n                    boxShadow: \"0 1px 4px rgba(0,0,0,0.1)\",\n                    cursor: \"pointer\",\n                  }}\n                >\n                  <div style={{ fontWeight: \"bold\" }}>{a.name}</div>\n                  <div style={{ fontSize: \"0.85rem\", color: \"#555\" }}>\n                    {a.type} | {a.owner || \"-\"}\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        ))}\n      </div>\n\n      {/* Asset Details Modal */}\n      {selectedAsset && (\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            background: \"rgba(0,0,0,0.5)\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            zIndex: 1000,\n          }}\n          onClick={() => setSelectedAsset(null)}\n        >\n          <div\n            onClick={(e) => e.stopPropagation()}\n            style={{\n              background: \"#fff\",\n              padding: \"2rem\",\n              borderRadius: \"8px\",\n              width: \"400px\",\n              maxHeight: \"80vh\",\n              overflowY: \"auto\",\n              boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n            }}\n          >\n            <h2 style={{ marginBottom: \"1rem\" }}>{selectedAsset.name}</h2>\n            <p>\n              <strong>Type:</strong> {selectedAsset.type}\n            </p>\n            <p>\n              <strong>Status:</strong>{\" \"}\n              <span style={{ color: statusColumns[selectedAsset.status]?.color }}>\n                {statusColumns[selectedAsset.status]?.title}\n              </span>\n            </p>\n            <p>\n              <strong>Owner:</strong> {selectedAsset.owner || \"-\"}\n            </p>\n            <p>\n              <strong>Description:</strong>{\" \"}\n              {selectedAsset.description || \"No description available\"}\n            </p>\n\n            <button\n              onClick={() => setSelectedAsset(null)}\n              style={{\n                marginTop: \"1.5rem\",\n                padding: \"0.5rem 1rem\",\n                borderRadius: \"4px\",\n                border: \"none\",\n                background: \"#0052CC\",\n                color: \"#fff\",\n                cursor: \"pointer\",\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\n"],"mappings":";;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,eAAeA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACvD,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1DD,SAAS,CAAC,MAAM;IACdE,UAAU,CAAC,CAAC,CAACc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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}