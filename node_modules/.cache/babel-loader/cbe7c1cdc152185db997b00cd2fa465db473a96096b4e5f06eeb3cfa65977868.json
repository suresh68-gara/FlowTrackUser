{"ast":null,"code":"\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../context/AuthContext\";\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [isHovered, setIsHovered] = useState(false);\n//   const [activeInput, setActiveInput] = useState(null);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const { login } = useAuth();\n//   const navigate = useNavigate();\n\n//   // Floating animation elements\n//   const [particles, setParticles] = useState([]);\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 15 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 4 + 2,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 10 + 10\n//     }));\n//     setParticles(newParticles);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     // Simulate API call with beautiful loading animation\n//     await new Promise(resolve => setTimeout(resolve, 1500));\n\n//     const userData = {\n//       name: email.split(\"@\")[0],\n//       email,\n//       avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(email.split(\"@\")[0])}&background=3B82F6&color=fff`\n//     };\n\n//     login(userData);\n//     navigate(\"/for-you\");\n//     setIsLoading(false);\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#1f2937\",\n//       background: \"linear-gradient(135deg, #1f2937 0%, #111827 100%)\",\n//       padding: \"20px\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\"\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       backgroundColor: \"rgba(59, 130, 246, 0.3)\",\n//       borderRadius: \"50%\",\n//       animation: \"float 20s infinite linear\"\n//     },\n//     card: {\n//       backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n//       backdropFilter: \"blur(20px)\",\n//       padding: \"50px 40px\",\n//       borderRadius: \"20px\",\n//       boxShadow: `\n//         0 25px 50px -12px rgba(0, 0, 0, 0.5),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1)\n//       `,\n//       width: \"100%\",\n//       maxWidth: \"420px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.1)\",\n//       position: \"relative\",\n//       zIndex: 10,\n//       animation: \"slideUp 0.8s ease-out\"\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"1px\",\n//       background: \"linear-gradient(90deg, transparent, #3B82F6, transparent)\",\n//       animation: \"glow 3s ease-in-out infinite\"\n//     },\n//     logo: {\n//       textAlign: \"center\",\n//       marginBottom: \"40px\",\n//       animation: \"fadeIn 1s ease-out\"\n//     },\n//     logoText: {\n//       fontSize: \"42px\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #3B82F6 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0\",\n//       letterSpacing: \"-0.02em\"\n//     },\n//     tagline: {\n//       textAlign: \"center\",\n//       color: \"#9CA3AF\",\n//       fontSize: \"14px\",\n//       marginTop: \"8px\",\n//       fontWeight: \"400\",\n//       letterSpacing: \"0.02em\"\n//     },\n//     title: {\n//       textAlign: \"center\",\n//       marginBottom: \"35px\",\n//       fontSize: \"28px\",\n//       fontWeight: \"700\",\n//       color: \"#F9FAFB\",\n//       marginTop: \"0\"\n//     },\n//     inputGroup: {\n//       marginBottom: \"25px\",\n//       position: \"relative\"\n//     },\n//     label: {\n//       display: \"block\",\n//       marginBottom: \"8px\",\n//       fontSize: \"14px\",\n//       fontWeight: \"600\",\n//       color: \"#E5E7EB\",\n//       transition: \"all 0.3s ease\"\n//     },\n//     inputContainer: {\n//       position: \"relative\",\n//       transition: \"all 0.3s ease\"\n//     },\n//     input: {\n//       width: \"100%\",\n//       padding: \"16px 50px 16px 20px\",\n//       borderRadius: \"12px\",\n//       border: \"2px solid rgba(255, 255, 255, 0.1)\",\n//       fontSize: \"15px\",\n//       color: \"#F9FAFB\",\n//       backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n//       transition: \"all 0.3s ease\",\n//       boxSizing: \"border-box\",\n//       fontFamily: \"inherit\"\n//     },\n//     inputFocus: {\n//       borderColor: \"#3B82F6\",\n//       backgroundColor: \"rgba(59, 130, 246, 0.05)\",\n//       boxShadow: \"0 0 0 4px rgba(59, 130, 246, 0.1)\",\n//       transform: \"translateY(-2px)\"\n//     },\n//     inputIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#9CA3AF\",\n//       transition: \"all 0.3s ease\",\n//       fontSize: \"18px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\"\n//     },\n//     eyeIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#9CA3AF\",\n//       transition: \"all 0.3s ease\",\n//       cursor: \"pointer\",\n//       fontSize: \"18px\",\n//       background: \"none\",\n//       border: \"none\",\n//       padding: \"5px\",\n//       borderRadius: \"4px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\"\n//     },\n//     eyeIconHover: {\n//       backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n//       color: \"#3B82F6\"\n//     },\n//     button: {\n//       width: \"100%\",\n//       padding: \"16px\",\n//       border: \"none\",\n//       borderRadius: \"12px\",\n//       background: \"linear-gradient(135deg, #3B82F6 0%, #2563EB 100%)\",\n//       color: \"#FFFFFF\",\n//       fontWeight: \"600\",\n//       fontSize: \"15px\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//       boxShadow: \"0 4px 15px rgba(59, 130, 246, 0.3)\"\n//     },\n//     buttonHover: {\n//       transform: \"translateY(-3px)\",\n//       boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.4)\"\n//     },\n//     buttonDisabled: {\n//       opacity: \"0.6\",\n//       cursor: \"not-allowed\",\n//       transform: \"none\"\n//     },\n//     buttonGlow: {\n//       position: \"absolute\",\n//       top: \"0\",\n//       left: \"-100%\",\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent)\",\n//       transition: \"left 0.5s ease\"\n//     },\n//     loadingSpinner: {\n//       width: \"20px\",\n//       height: \"20px\",\n//       border: \"2px solid rgba(255,255,255,0.3)\",\n//       borderTop: \"2px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//       margin: \"0 auto\"\n//     },\n//     footer: {\n//       textAlign: \"center\",\n//       marginTop: \"30px\",\n//       paddingTop: \"25px\",\n//       borderTop: \"1px solid rgba(255, 255, 255, 0.1)\"\n//     },\n//     footerText: {\n//       color: \"#9CA3AF\",\n//       fontSize: \"12px\",\n//       margin: \"0\"\n//     },\n//     link: {\n//       color: \"#60A5FA\",\n//       textDecoration: \"none\",\n//       fontWeight: \"500\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\"\n//     },\n//     linkHover: {\n//       color: \"#3B82F6\"\n//     }\n//   };\n\n//   const isFormValid = email && password;\n//   const [isEyeHovered, setIsEyeHovered] = useState(false);\n\n//   // SVG Icons\n//   const EmailIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"/>\n//       <polyline points=\"22,6 12,13 2,6\"/>\n//     </svg>\n//   );\n\n//   const EyeIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n//       <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n//     </svg>\n//   );\n\n//   const EyeOffIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n//       <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n//     </svg>\n//   );\n\n//   const LockIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"/>\n//       <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/>\n//     </svg>\n//   );\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Animated Background Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map(particle => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Login Card */}\n//       <div style={styles.card}>\n//         <div style={styles.cardGlow} />\n\n//         {/* Logo Section */}\n//         <div style={styles.logo}>\n//           <h1 style={styles.logoText}>Flow Track</h1>\n//           <p style={styles.tagline}>Modern Project Management Solution</p>\n//         </div>\n\n//         <h2 style={styles.title}>Welcome Back</h2>\n\n//         <form onSubmit={handleSubmit}>\n//           {/* Email Input */}\n//           <div style={styles.inputGroup}>\n//             <label style={styles.label}>Email Address</label>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 onFocus={() => setActiveInput('email')}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === 'email' || email ? styles.inputFocus : {})\n//                 }}\n//                 required\n//               />\n//               <span style={styles.inputIcon}>\n//                 <EmailIcon />\n//               </span>\n//             </div>\n//           </div>\n\n//           {/* Password Input */}\n//           <div style={styles.inputGroup}>\n//             <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n//               <label style={styles.label}>Password</label>\n//               <a \n//                 href=\"#\" \n//                 style={{\n//                   ...styles.link,\n//                   fontSize: \"13px\"\n//                 }}\n//                 onMouseEnter={() => setIsHovered(true)}\n//                 onMouseLeave={() => setIsHovered(false)}\n//               >\n//                 {/* Forgot password? */}\n//               </a>\n//             </div>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 onFocus={() => setActiveInput('password')}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === 'password' || password ? styles.inputFocus : {})\n//                 }}\n//                 required\n//               />\n//               <span style={styles.inputIcon}>\n//                 <LockIcon />\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 style={{\n//                   ...styles.eyeIcon,\n//                   ...(isEyeHovered ? styles.eyeIconHover : {})\n//                 }}\n//                 onClick={togglePasswordVisibility}\n//                 onMouseEnter={() => setIsEyeHovered(true)}\n//                 onMouseLeave={() => setIsEyeHovered(false)}\n//                 title={showPassword ? \"Hide password\" : \"Show password\"}\n//               >\n//                 {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n//               </button>\n//             </div>\n//           </div>\n\n//           {/* Submit Button */}\n//           <button \n//             type=\"submit\" \n//             style={{\n//               ...styles.button,\n//               ...(isFormValid && !isLoading && isHovered ? styles.buttonHover : {}),\n//               ...(!isFormValid || isLoading ? styles.buttonDisabled : {})\n//             }}\n//             disabled={!isFormValid || isLoading}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//           >\n//             {isLoading ? (\n//               <div style={styles.loadingSpinner}></div>\n//             ) : (\n//               <>\n//                 Sign In\n//                 <div style={{\n//                   ...styles.buttonGlow,\n//                   left: isHovered ? '100%' : '-100%'\n//                 }} />\n//               </>\n//             )}\n//           </button>\n//         </form>\n\n//         {/* Footer */}\n//         <div style={styles.footer}>\n//           <p style={styles.footerText}>\n//             New to Flow Track?{\" \"}\n//             <a \n//               href=\"#\" \n//               style={styles.link}\n//               onMouseEnter={() => setIsHovered(true)}\n//               onMouseLeave={() => setIsHovered(false)}\n//             >\n//               Get started\n//             </a>\n//           </p>\n//           <p style={{ ...styles.footerText, marginTop: \"10px\" }}>\n//             © 2025 Vunathi Technologies Pvt Ltd\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes float {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(30px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes fadeIn {\n//             0% {\n//               opacity: 0;\n//               transform: scale(0.9);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: scale(1);\n//             }\n//           }\n\n//           @keyframes glow {\n//             0%, 100% {\n//               opacity: 0.5;\n//             }\n//             50% {\n//               opacity: 1;\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           input:focus {\n//             outline: none;\n//             border-color: #3B82F6 !important;\n//             background-color: rgba(59, 130, 246, 0.05) !important;\n//             box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1) !important;\n//             transform: translateY(-2px) !important;\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-3px) !important;\n//             box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4) !important;\n//           }\n\n//           a:hover {\n//             color: #3B82F6 !important;\n//           }\n\n//           .eye-button:hover {\n//             background-color: rgba(255, 255, 255, 0.1) !important;\n//             color: #3B82F6 !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/auth/Login.js"],"sourcesContent":["\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useAuth } from \"../../context/AuthContext\";\n\n// function LoginPage() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [isHovered, setIsHovered] = useState(false);\n//   const [activeInput, setActiveInput] = useState(null);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const { login } = useAuth();\n//   const navigate = useNavigate();\n\n//   // Floating animation elements\n//   const [particles, setParticles] = useState([]);\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 15 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 4 + 2,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 10 + 10\n//     }));\n//     setParticles(newParticles);\n//   }, []);\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsLoading(true);\n\n//     // Simulate API call with beautiful loading animation\n//     await new Promise(resolve => setTimeout(resolve, 1500));\n\n//     const userData = {\n//       name: email.split(\"@\")[0],\n//       email,\n//       avatar: `https://ui-avatars.com/api/?name=${encodeURIComponent(email.split(\"@\")[0])}&background=3B82F6&color=fff`\n//     };\n\n//     login(userData);\n//     navigate(\"/for-you\");\n//     setIsLoading(false);\n//   };\n\n//   const togglePasswordVisibility = () => {\n//     setShowPassword(!showPassword);\n//   };\n\n//   const styles = {\n//     container: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#1f2937\",\n//       background: \"linear-gradient(135deg, #1f2937 0%, #111827 100%)\",\n//       padding: \"20px\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\"\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       backgroundColor: \"rgba(59, 130, 246, 0.3)\",\n//       borderRadius: \"50%\",\n//       animation: \"float 20s infinite linear\"\n//     },\n//     card: {\n//       backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n//       backdropFilter: \"blur(20px)\",\n//       padding: \"50px 40px\",\n//       borderRadius: \"20px\",\n//       boxShadow: `\n//         0 25px 50px -12px rgba(0, 0, 0, 0.5),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1)\n//       `,\n//       width: \"100%\",\n//       maxWidth: \"420px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.1)\",\n//       position: \"relative\",\n//       zIndex: 10,\n//       animation: \"slideUp 0.8s ease-out\"\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"1px\",\n//       background: \"linear-gradient(90deg, transparent, #3B82F6, transparent)\",\n//       animation: \"glow 3s ease-in-out infinite\"\n//     },\n//     logo: {\n//       textAlign: \"center\",\n//       marginBottom: \"40px\",\n//       animation: \"fadeIn 1s ease-out\"\n//     },\n//     logoText: {\n//       fontSize: \"42px\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #3B82F6 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0\",\n//       letterSpacing: \"-0.02em\"\n//     },\n//     tagline: {\n//       textAlign: \"center\",\n//       color: \"#9CA3AF\",\n//       fontSize: \"14px\",\n//       marginTop: \"8px\",\n//       fontWeight: \"400\",\n//       letterSpacing: \"0.02em\"\n//     },\n//     title: {\n//       textAlign: \"center\",\n//       marginBottom: \"35px\",\n//       fontSize: \"28px\",\n//       fontWeight: \"700\",\n//       color: \"#F9FAFB\",\n//       marginTop: \"0\"\n//     },\n//     inputGroup: {\n//       marginBottom: \"25px\",\n//       position: \"relative\"\n//     },\n//     label: {\n//       display: \"block\",\n//       marginBottom: \"8px\",\n//       fontSize: \"14px\",\n//       fontWeight: \"600\",\n//       color: \"#E5E7EB\",\n//       transition: \"all 0.3s ease\"\n//     },\n//     inputContainer: {\n//       position: \"relative\",\n//       transition: \"all 0.3s ease\"\n//     },\n//     input: {\n//       width: \"100%\",\n//       padding: \"16px 50px 16px 20px\",\n//       borderRadius: \"12px\",\n//       border: \"2px solid rgba(255, 255, 255, 0.1)\",\n//       fontSize: \"15px\",\n//       color: \"#F9FAFB\",\n//       backgroundColor: \"rgba(255, 255, 255, 0.05)\",\n//       transition: \"all 0.3s ease\",\n//       boxSizing: \"border-box\",\n//       fontFamily: \"inherit\"\n//     },\n//     inputFocus: {\n//       borderColor: \"#3B82F6\",\n//       backgroundColor: \"rgba(59, 130, 246, 0.05)\",\n//       boxShadow: \"0 0 0 4px rgba(59, 130, 246, 0.1)\",\n//       transform: \"translateY(-2px)\"\n//     },\n//     inputIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#9CA3AF\",\n//       transition: \"all 0.3s ease\",\n//       fontSize: \"18px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\"\n//     },\n//     eyeIcon: {\n//       position: \"absolute\",\n//       right: \"15px\",\n//       top: \"50%\",\n//       transform: \"translateY(-50%)\",\n//       color: \"#9CA3AF\",\n//       transition: \"all 0.3s ease\",\n//       cursor: \"pointer\",\n//       fontSize: \"18px\",\n//       background: \"none\",\n//       border: \"none\",\n//       padding: \"5px\",\n//       borderRadius: \"4px\",\n//       width: \"20px\",\n//       height: \"20px\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       justifyContent: \"center\"\n//     },\n//     eyeIconHover: {\n//       backgroundColor: \"rgba(255, 255, 255, 0.1)\",\n//       color: \"#3B82F6\"\n//     },\n//     button: {\n//       width: \"100%\",\n//       padding: \"16px\",\n//       border: \"none\",\n//       borderRadius: \"12px\",\n//       background: \"linear-gradient(135deg, #3B82F6 0%, #2563EB 100%)\",\n//       color: \"#FFFFFF\",\n//       fontWeight: \"600\",\n//       fontSize: \"15px\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\",\n//       overflow: \"hidden\",\n//       boxShadow: \"0 4px 15px rgba(59, 130, 246, 0.3)\"\n//     },\n//     buttonHover: {\n//       transform: \"translateY(-3px)\",\n//       boxShadow: \"0 8px 25px rgba(59, 130, 246, 0.4)\"\n//     },\n//     buttonDisabled: {\n//       opacity: \"0.6\",\n//       cursor: \"not-allowed\",\n//       transform: \"none\"\n//     },\n//     buttonGlow: {\n//       position: \"absolute\",\n//       top: \"0\",\n//       left: \"-100%\",\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent)\",\n//       transition: \"left 0.5s ease\"\n//     },\n//     loadingSpinner: {\n//       width: \"20px\",\n//       height: \"20px\",\n//       border: \"2px solid rgba(255,255,255,0.3)\",\n//       borderTop: \"2px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//       margin: \"0 auto\"\n//     },\n//     footer: {\n//       textAlign: \"center\",\n//       marginTop: \"30px\",\n//       paddingTop: \"25px\",\n//       borderTop: \"1px solid rgba(255, 255, 255, 0.1)\"\n//     },\n//     footerText: {\n//       color: \"#9CA3AF\",\n//       fontSize: \"12px\",\n//       margin: \"0\"\n//     },\n//     link: {\n//       color: \"#60A5FA\",\n//       textDecoration: \"none\",\n//       fontWeight: \"500\",\n//       transition: \"all 0.3s ease\",\n//       position: \"relative\"\n//     },\n//     linkHover: {\n//       color: \"#3B82F6\"\n//     }\n//   };\n\n//   const isFormValid = email && password;\n//   const [isEyeHovered, setIsEyeHovered] = useState(false);\n\n//   // SVG Icons\n//   const EmailIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z\"/>\n//       <polyline points=\"22,6 12,13 2,6\"/>\n//     </svg>\n//   );\n\n//   const EyeIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"/>\n//       <circle cx=\"12\" cy=\"12\" r=\"3\"/>\n//     </svg>\n//   );\n\n//   const EyeOffIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <path d=\"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"/>\n//       <line x1=\"1\" y1=\"1\" x2=\"23\" y2=\"23\"/>\n//     </svg>\n//   );\n\n//   const LockIcon = () => (\n//     <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n//       <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"/>\n//       <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"/>\n//     </svg>\n//   );\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Animated Background Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map(particle => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Login Card */}\n//       <div style={styles.card}>\n//         <div style={styles.cardGlow} />\n        \n//         {/* Logo Section */}\n//         <div style={styles.logo}>\n//           <h1 style={styles.logoText}>Flow Track</h1>\n//           <p style={styles.tagline}>Modern Project Management Solution</p>\n//         </div>\n\n//         <h2 style={styles.title}>Welcome Back</h2>\n        \n//         <form onSubmit={handleSubmit}>\n//           {/* Email Input */}\n//           <div style={styles.inputGroup}>\n//             <label style={styles.label}>Email Address</label>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 onFocus={() => setActiveInput('email')}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === 'email' || email ? styles.inputFocus : {})\n//                 }}\n//                 required\n//               />\n//               <span style={styles.inputIcon}>\n//                 <EmailIcon />\n//               </span>\n//             </div>\n//           </div>\n\n//           {/* Password Input */}\n//           <div style={styles.inputGroup}>\n//             <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n//               <label style={styles.label}>Password</label>\n//               <a \n//                 href=\"#\" \n//                 style={{\n//                   ...styles.link,\n//                   fontSize: \"13px\"\n//                 }}\n//                 onMouseEnter={() => setIsHovered(true)}\n//                 onMouseLeave={() => setIsHovered(false)}\n//               >\n//                 {/* Forgot password? */}\n//               </a>\n//             </div>\n//             <div style={styles.inputContainer}>\n//               <input\n//                 type={showPassword ? \"text\" : \"password\"}\n//                 placeholder=\"Enter your password\"\n//                 value={password}\n//                 onChange={(e) => setPassword(e.target.value)}\n//                 onFocus={() => setActiveInput('password')}\n//                 onBlur={() => setActiveInput(null)}\n//                 style={{\n//                   ...styles.input,\n//                   ...(activeInput === 'password' || password ? styles.inputFocus : {})\n//                 }}\n//                 required\n//               />\n//               <span style={styles.inputIcon}>\n//                 <LockIcon />\n//               </span>\n//               <button\n//                 type=\"button\"\n//                 style={{\n//                   ...styles.eyeIcon,\n//                   ...(isEyeHovered ? styles.eyeIconHover : {})\n//                 }}\n//                 onClick={togglePasswordVisibility}\n//                 onMouseEnter={() => setIsEyeHovered(true)}\n//                 onMouseLeave={() => setIsEyeHovered(false)}\n//                 title={showPassword ? \"Hide password\" : \"Show password\"}\n//               >\n//                 {showPassword ? <EyeOffIcon /> : <EyeIcon />}\n//               </button>\n//             </div>\n//           </div>\n\n//           {/* Submit Button */}\n//           <button \n//             type=\"submit\" \n//             style={{\n//               ...styles.button,\n//               ...(isFormValid && !isLoading && isHovered ? styles.buttonHover : {}),\n//               ...(!isFormValid || isLoading ? styles.buttonDisabled : {})\n//             }}\n//             disabled={!isFormValid || isLoading}\n//             onMouseEnter={() => setIsHovered(true)}\n//             onMouseLeave={() => setIsHovered(false)}\n//           >\n//             {isLoading ? (\n//               <div style={styles.loadingSpinner}></div>\n//             ) : (\n//               <>\n//                 Sign In\n//                 <div style={{\n//                   ...styles.buttonGlow,\n//                   left: isHovered ? '100%' : '-100%'\n//                 }} />\n//               </>\n//             )}\n//           </button>\n//         </form>\n\n//         {/* Footer */}\n//         <div style={styles.footer}>\n//           <p style={styles.footerText}>\n//             New to Flow Track?{\" \"}\n//             <a \n//               href=\"#\" \n//               style={styles.link}\n//               onMouseEnter={() => setIsHovered(true)}\n//               onMouseLeave={() => setIsHovered(false)}\n//             >\n//               Get started\n//             </a>\n//           </p>\n//           <p style={{ ...styles.footerText, marginTop: \"10px\" }}>\n//             © 2025 Vunathi Technologies Pvt Ltd\n//           </p>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes float {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(30px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes fadeIn {\n//             0% {\n//               opacity: 0;\n//               transform: scale(0.9);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: scale(1);\n//             }\n//           }\n\n//           @keyframes glow {\n//             0%, 100% {\n//               opacity: 0.5;\n//             }\n//             50% {\n//               opacity: 1;\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           input:focus {\n//             outline: none;\n//             border-color: #3B82F6 !important;\n//             background-color: rgba(59, 130, 246, 0.05) !important;\n//             box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1) !important;\n//             transform: translateY(-2px) !important;\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-3px) !important;\n//             box-shadow: 0 8px 25px rgba(59, 130, 246, 0.4) !important;\n//           }\n\n//           a:hover {\n//             color: #3B82F6 !important;\n//           }\n\n//           .eye-button:hover {\n//             background-color: rgba(255, 255, 255, 0.1) !important;\n//             color: #3B82F6 !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// export default LoginPage;"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}