{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n// import { useAuth } from \"../../context/AuthContext\";\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   const { user: authUser } = useAuth();\n\n//   useEffect(() => {\n//     // Check if mobile on mount and resize\n//     const checkMobile = () => {\n//       setIsMobile(window.innerWidth < 768);\n//     };\n\n//     checkMobile();\n//     window.addEventListener('resize', checkMobile);\n\n//     return () => {\n//       window.removeEventListener('resize', checkMobile);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n\n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // Use auth user data if available\n//         if (authUser) {\n//           setUser(authUser);\n//         } else {\n//           setUser({ name: \"\" });\n//         }\n\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [authUser]);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       backgroundImage: `\n//         /* Main equation background */\n//         radial-gradient(circle at 20% 30%, rgba(120, 119, 198, 0.15) 0%, transparent 40%),\n//         radial-gradient(circle at 80% 70%, rgba(255, 119, 198, 0.15) 0%, transparent 40%),\n//         /* Mathematical equations overlay */\n//         url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='14' fill='rgba(120,119,198,0.1)' text-anchor='middle' dominant-baseline='middle'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\"),\n//         url(\"data:image/svg+xml,%3Csvg width='120' height='120' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='16' fill='rgba(255,119,198,0.1)' text-anchor='middle' dominant-baseline='middle' transform='rotate(45 60 60)'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\"),\n//         url(\"data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='12' fill='rgba(120,219,255,0.1)' text-anchor='middle' dominant-baseline='middle' transform='rotate(-30 40 40)'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\")\n//       `,\n//       backgroundSize: `\n//         auto, \n//         auto,\n//         100px 100px,\n//         120px 120px,\n//         80px 80px\n//       `,\n//       backgroundPosition: `\n//         20% 30%,\n//         80% 70%,\n//         0 0,\n//         20px 40px,\n//         60px 80px\n//       `,\n//       backgroundBlendMode: \"overlay\",\n//       padding: isMobile ? \"1rem\" : \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1400px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: isMobile ? \"2rem\" : \"3rem\",\n//       fontWeight: \"800\",\n//       background: '#F1F5F9',\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//       lineHeight: isMobile ? \"1.2\" : \"1.3\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.8)\",\n//       fontSize: isMobile ? \"1rem\" : \"1.2rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 2rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: isMobile ? \"1fr\" : \"1fr 1fr\",\n//       gap: isMobile ? \"1rem\" : \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       backdropFilter: \"blur(25px)\",\n//       padding: isMobile ? \"1.5rem\" : \"2.5rem\",\n//       borderRadius: isMobile ? \"16px\" : \"24px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       position: \"relative\",\n//       animation: \"slideUp 1.4s ease-out\",\n//       overflow: \"hidden\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: isMobile ? \"16px 16px 0 0\" : \"24px 24px 0 0\",\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\",\n//       marginBottom: isMobile ? \"1.5rem\" : \"2rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"1rem\" : \"0\"\n//     },\n//     cardTitle: {\n//       fontSize: isMobile ? \"1.25rem\" : \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: isMobile ? \"0.75rem\" : \"1rem\"\n//     },\n//     boardItem: {\n//       padding: isMobile ? \"1rem\" : \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.05)\",\n//       borderRadius: isMobile ? \"12px\" : \"16px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(10px)\",\n//     },\n//     boardItemHover: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-2px)\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\n//     },\n//     boardTitle: {\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#F1F5F9\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.75rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: isMobile ? \"0.75rem\" : \"0.85rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"0.5rem\" : \"0\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\"\n//     },\n//     teamBadge: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       color: \"#60A5FA\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//     },\n//     itemsCount: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(168, 85, 247, 0.2)\",\n//       color: \"#A855F7\",\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: isMobile ? \"16px\" : \"20px\",\n//       borderRadius: \"2px\",\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"rgba(255, 255, 255, 0.6)\",\n//       padding: isMobile ? \"2rem 1rem\" : \"3rem 1rem\",\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontStyle: \"italic\",\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: isMobile ? \"3rem\" : \"5rem\",\n//       color: \"#FFFFFF\",\n//       position: \"relative\",\n//       zIndex: 10,\n//     },\n//     spinner: {\n//       width: isMobile ? \"40px\" : \"50px\",\n//       height: isMobile ? \"40px\" : \"50px\",\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\n//       borderTop: \"3px solid #60A5FA\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//     },\n//     viewAllButton: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//       color: \"#60A5FA\",\n//       padding: isMobile ? \"0.4rem 0.8rem\" : \"0.5rem 1rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.8rem\" : \"0.9rem\",\n//       fontWeight: \"600\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//       width: isMobile ? \"100%\" : \"auto\",\n//       textAlign: \"center\",\n//     },\n//     viewAllButtonHover: {\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-1px)\",\n//     },\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n\n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           ๐ Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Responsive Grid Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>๐ Recently Viewed</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }} \n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Viewed {board.lastViewed || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>๐๏ธ Your Boards</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }}\n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Updated {board.updated || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: ${isMobile ? 'scale(1.02)' : 'translateY(-1px)'} !important;\n//           }\n\n//           /* Mobile-specific optimizations */\n//           @media (max-width: 768px) {\n//             body {\n//               -webkit-tap-highlight-color: transparent;\n//             }\n\n//             button:active {\n//               transform: scale(0.98) !important;\n//             }\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// for UI/UX","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/dashboard/ForYou.js"],"sourcesContent":["\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useAuth } from \"../../context/AuthContext\";\r\n\r\n// export default function ForYou() {\r\n//   const [user, setUser] = useState(null);\r\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\r\n//   const [yourBoards, setYourBoards] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\r\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\r\n//   const [isMobile, setIsMobile] = useState(false);\r\n\r\n//   const { user: authUser } = useAuth();\r\n\r\n//   useEffect(() => {\r\n//     // Check if mobile on mount and resize\r\n//     const checkMobile = () => {\r\n//       setIsMobile(window.innerWidth < 768);\r\n//     };\r\n\r\n//     checkMobile();\r\n//     window.addEventListener('resize', checkMobile);\r\n\r\n//     return () => {\r\n//       window.removeEventListener('resize', checkMobile);\r\n//     };\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     // Initialize empty data structures\r\n//     setRecentlyViewed([]);\r\n//     setYourBoards([]);\r\n    \r\n//     // Simulate API call to backend\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         setLoading(true);\r\n        \r\n//         // Use auth user data if available\r\n//         if (authUser) {\r\n//           setUser(authUser);\r\n//         } else {\r\n//           setUser({ name: \"\" });\r\n//         }\r\n        \r\n//         setTimeout(() => {\r\n//           setLoading(false);\r\n//         }, 1000);\r\n        \r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//         setLoading(false);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [authUser]);\r\n\r\n//   const styles = {\r\n//     container: {\r\n//       minHeight: \"100vh\",\r\n//       backgroundColor: \"#0a0a0f\",\r\n//       backgroundImage: `\r\n//         /* Main equation background */\r\n//         radial-gradient(circle at 20% 30%, rgba(120, 119, 198, 0.15) 0%, transparent 40%),\r\n//         radial-gradient(circle at 80% 70%, rgba(255, 119, 198, 0.15) 0%, transparent 40%),\r\n//         /* Mathematical equations overlay */\r\n//         url(\"data:image/svg+xml,%3Csvg width='100' height='100' viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='14' fill='rgba(120,119,198,0.1)' text-anchor='middle' dominant-baseline='middle'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\"),\r\n//         url(\"data:image/svg+xml,%3Csvg width='120' height='120' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='16' fill='rgba(255,119,198,0.1)' text-anchor='middle' dominant-baseline='middle' transform='rotate(45 60 60)'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\"),\r\n//         url(\"data:image/svg+xml,%3Csvg width='80' height='80' viewBox='0 0 80 80' xmlns='http://www.w3.org/2000/svg'%3E%3Ctext x='50%25' y='50%25' font-family='monospace' font-size='12' fill='rgba(120,219,255,0.1)' text-anchor='middle' dominant-baseline='middle' transform='rotate(-30 40 40)'%3E1 2 รท 3 = 4%3C/text%3E%3C/svg%3E\")\r\n//       `,\r\n//       backgroundSize: `\r\n//         auto, \r\n//         auto,\r\n//         100px 100px,\r\n//         120px 120px,\r\n//         80px 80px\r\n//       `,\r\n//       backgroundPosition: `\r\n//         20% 30%,\r\n//         80% 70%,\r\n//         0 0,\r\n//         20px 40px,\r\n//         60px 80px\r\n//       `,\r\n//       backgroundBlendMode: \"overlay\",\r\n//       padding: isMobile ? \"1rem\" : \"2rem\",\r\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\r\n//       position: \"relative\",\r\n//       overflow: \"hidden\"\r\n//     },\r\n//     content: {\r\n//       position: \"relative\",\r\n//       zIndex: 10,\r\n//       maxWidth: \"1400px\",\r\n//       margin: \"0 auto\"\r\n//     },\r\n//     welcomeTitle: {\r\n//       fontSize: isMobile ? \"2rem\" : \"3rem\",\r\n//       fontWeight: \"800\",\r\n//       background: '#F1F5F9',\r\n//       WebkitBackgroundClip: \"text\",\r\n//       WebkitTextFillColor: \"transparent\",\r\n//       backgroundClip: \"text\",\r\n//       margin: \"0 0 0.5rem 0\",\r\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\r\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\",\r\n//       textAlign: isMobile ? \"center\" : \"left\",\r\n//       lineHeight: isMobile ? \"1.2\" : \"1.3\"\r\n//     },\r\n//     subtitle: {\r\n//       color: \"rgba(255, 255, 255, 0.8)\",\r\n//       fontSize: isMobile ? \"1rem\" : \"1.2rem\",\r\n//       fontWeight: \"400\",\r\n//       margin: \"0 0 2rem 0\",\r\n//       animation: \"fadeInUp 1.2s ease-out\",\r\n//       textAlign: isMobile ? \"center\" : \"left\",\r\n//     },\r\n//     cardsContainer: {\r\n//       display: \"grid\",\r\n//       gridTemplateColumns: isMobile ? \"1fr\" : \"1fr 1fr\",\r\n//       gap: isMobile ? \"1rem\" : \"2rem\",\r\n//       marginBottom: \"2rem\"\r\n//     },\r\n//     card: {\r\n//       backdropFilter: \"blur(25px)\",\r\n//       padding: isMobile ? \"1.5rem\" : \"2.5rem\",\r\n//       borderRadius: isMobile ? \"16px\" : \"24px\",\r\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\r\n//       boxShadow: `\r\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\r\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\r\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\r\n//       `,\r\n//       position: \"relative\",\r\n//       animation: \"slideUp 1.4s ease-out\",\r\n//       overflow: \"hidden\",\r\n//     },\r\n//     cardGlow: {\r\n//       position: \"absolute\",\r\n//       top: 0,\r\n//       left: 0,\r\n//       right: 0,\r\n//       height: \"2px\",\r\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\r\n//       animation: \"cardGlow 4s ease-in-out infinite\",\r\n//       borderRadius: isMobile ? \"16px 16px 0 0\" : \"24px 24px 0 0\",\r\n//     },\r\n//     cardHeader: {\r\n//       display: \"flex\",\r\n//       justifyContent: \"space-between\",\r\n//       alignItems: isMobile ? \"flex-start\" : \"center\",\r\n//       marginBottom: isMobile ? \"1.5rem\" : \"2rem\",\r\n//       flexDirection: isMobile ? \"column\" : \"row\",\r\n//       gap: isMobile ? \"1rem\" : \"0\"\r\n//     },\r\n//     cardTitle: {\r\n//       fontSize: isMobile ? \"1.25rem\" : \"1.5rem\",\r\n//       fontWeight: \"700\",\r\n//       color: \"#F1F5F9\",\r\n//       margin: \"0\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       gap: \"0.5rem\"\r\n//     },\r\n//     boardList: {\r\n//       listStyle: \"none\",\r\n//       padding: \"0\",\r\n//       margin: \"0\",\r\n//       display: \"flex\",\r\n//       flexDirection: \"column\",\r\n//       gap: isMobile ? \"0.75rem\" : \"1rem\"\r\n//     },\r\n//     boardItem: {\r\n//       padding: isMobile ? \"1rem\" : \"1.25rem\",\r\n//       background: \"rgba(255, 255, 255, 0.05)\",\r\n//       borderRadius: isMobile ? \"12px\" : \"16px\",\r\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\r\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\r\n//       cursor: \"pointer\",\r\n//       backdropFilter: \"blur(10px)\",\r\n//     },\r\n//     boardItemHover: {\r\n//       background: \"rgba(96, 165, 250, 0.1)\",\r\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\r\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-2px)\",\r\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\r\n//     },\r\n//     boardTitle: {\r\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\r\n//       fontWeight: \"600\",\r\n//       color: \"#F1F5F9\",\r\n//       margin: \"0 0 0.5rem 0\",\r\n//       display: \"flex\",\r\n//       alignItems: \"center\",\r\n//       gap: \"0.75rem\"\r\n//     },\r\n//     boardMeta: {\r\n//       display: \"flex\",\r\n//       justifyContent: \"space-between\",\r\n//       alignItems: \"center\",\r\n//       fontSize: isMobile ? \"0.75rem\" : \"0.85rem\",\r\n//       flexDirection: isMobile ? \"column\" : \"row\",\r\n//       gap: isMobile ? \"0.5rem\" : \"0\",\r\n//       alignItems: isMobile ? \"flex-start\" : \"center\"\r\n//     },\r\n//     teamBadge: {\r\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\r\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\r\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\r\n//       fontWeight: \"600\",\r\n//       background: \"rgba(96, 165, 250, 0.2)\",\r\n//       color: \"#60A5FA\",\r\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\r\n//     },\r\n//     itemsCount: {\r\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\r\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\r\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\r\n//       fontWeight: \"600\",\r\n//       background: \"rgba(168, 85, 247, 0.2)\",\r\n//       color: \"#A855F7\",\r\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\r\n//     },\r\n//     colorIndicator: {\r\n//       width: \"4px\",\r\n//       height: isMobile ? \"16px\" : \"20px\",\r\n//       borderRadius: \"2px\",\r\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\r\n//     },\r\n//     emptyState: {\r\n//       textAlign: \"center\",\r\n//       color: \"rgba(255, 255, 255, 0.6)\",\r\n//       padding: isMobile ? \"2rem 1rem\" : \"3rem 1rem\",\r\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\r\n//       fontStyle: \"italic\",\r\n//     },\r\n//     loadingSpinner: {\r\n//       display: \"flex\",\r\n//       justifyContent: \"center\",\r\n//       alignItems: \"center\",\r\n//       padding: isMobile ? \"3rem\" : \"5rem\",\r\n//       color: \"#FFFFFF\",\r\n//       position: \"relative\",\r\n//       zIndex: 10,\r\n//     },\r\n//     spinner: {\r\n//       width: isMobile ? \"40px\" : \"50px\",\r\n//       height: isMobile ? \"40px\" : \"50px\",\r\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\r\n//       borderTop: \"3px solid #60A5FA\",\r\n//       borderRadius: \"50%\",\r\n//       animation: \"spin 1s linear infinite\",\r\n//     },\r\n//     viewAllButton: {\r\n//       background: \"rgba(96, 165, 250, 0.1)\",\r\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\r\n//       color: \"#60A5FA\",\r\n//       padding: isMobile ? \"0.4rem 0.8rem\" : \"0.5rem 1rem\",\r\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\r\n//       fontSize: isMobile ? \"0.8rem\" : \"0.9rem\",\r\n//       fontWeight: \"600\",\r\n//       cursor: \"pointer\",\r\n//       transition: \"all 0.3s ease\",\r\n//       width: isMobile ? \"100%\" : \"auto\",\r\n//       textAlign: \"center\",\r\n//     },\r\n//     viewAllButtonHover: {\r\n//       background: \"rgba(96, 165, 250, 0.2)\",\r\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-1px)\",\r\n//     },\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return (\r\n//       <div style={styles.container}>\r\n//         <div style={styles.loadingSpinner}>\r\n//           <div style={styles.spinner}></div>\r\n//         </div>\r\n        \r\n//         <style>\r\n//           {`\r\n//             @keyframes spin {\r\n//               0% { transform: rotate(0deg); }\r\n//               100% { transform: rotate(360deg); }\r\n//             }\r\n//           `}\r\n//         </style>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   return (\r\n//     <div style={styles.container}>\r\n//       <div style={styles.content}>\r\n//         {/* Header */}\r\n//         <h1 style={styles.welcomeTitle}>\r\n//           ๐ Welcome{user?.name ? `, ${user.name}` : ''}\r\n//         </h1>\r\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\r\n\r\n//         {/* Responsive Grid Layout */}\r\n//         <div style={styles.cardsContainer}>\r\n//           {/* Recently Viewed Card */}\r\n//           <div style={styles.card}>\r\n//             <div style={styles.cardGlow} />\r\n//             <div style={styles.cardHeader}>\r\n//               <h2 style={styles.cardTitle}>๐ Recently Viewed</h2>\r\n//               <button \r\n//                 style={{\r\n//                   ...styles.viewAllButton,\r\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\r\n//                 }}\r\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\r\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\r\n//                 onTouchStart={() => setIsViewAllHovered(true)}\r\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\r\n//               >\r\n//                 View All\r\n//               </button>\r\n//             </div>\r\n//             <ul style={styles.boardList}>\r\n//               {recentlyViewed.length > 0 ? (\r\n//                 recentlyViewed.map((board) => (\r\n//                   <li \r\n//                     key={board.id} \r\n//                     style={{\r\n//                       ...styles.boardItem,\r\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\r\n//                     }} \r\n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\r\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\r\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\r\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\r\n//                   >\r\n//                     <div style={styles.boardTitle}>\r\n//                       <div style={styles.colorIndicator} />\r\n//                       {board.title}\r\n//                     </div>\r\n//                     <div style={styles.boardMeta}>\r\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\r\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\r\n//                         Viewed {board.lastViewed || \"recently\"}\r\n//                       </span>\r\n//                     </div>\r\n//                   </li>\r\n//                 ))\r\n//               ) : (\r\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\r\n//               )}\r\n//             </ul>\r\n//           </div>\r\n\r\n//           {/* Your Boards Card */}\r\n//           <div style={styles.card}>\r\n//             <div style={styles.cardGlow} />\r\n//             <div style={styles.cardHeader}>\r\n//               <h2 style={styles.cardTitle}>๐๏ธ Your Boards</h2>\r\n//               <button \r\n//                 style={{\r\n//                   ...styles.viewAllButton,\r\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\r\n//                 }}\r\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\r\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\r\n//                 onTouchStart={() => setIsViewAllHovered(true)}\r\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\r\n//               >\r\n//                 View All\r\n//               </button>\r\n//             </div>\r\n//             <ul style={styles.boardList}>\r\n//               {yourBoards.length > 0 ? (\r\n//                 yourBoards.map((board) => (\r\n//                   <li \r\n//                     key={board.id} \r\n//                     style={{\r\n//                       ...styles.boardItem,\r\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\r\n//                     }}\r\n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\r\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\r\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\r\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\r\n//                   >\r\n//                     <div style={styles.boardTitle}>\r\n//                       <div style={styles.colorIndicator} />\r\n//                       {board.title}\r\n//                     </div>\r\n//                     <div style={styles.boardMeta}>\r\n//                       <span style={styles.itemsCount}>\r\n//                         {board.items || 0} items\r\n//                       </span>\r\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\r\n//                         Updated {board.updated || \"recently\"}\r\n//                       </span>\r\n//                     </div>\r\n//                   </li>\r\n//                 ))\r\n//               ) : (\r\n//                 <li style={styles.emptyState}>No boards created yet</li>\r\n//               )}\r\n//             </ul>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n\r\n//       {/* Enhanced CSS Animations */}\r\n//       <style>\r\n//         {`\r\n//           @keyframes textShimmer {\r\n//             0%, 100% {\r\n//               background-position: 0% 50%;\r\n//             }\r\n//             50% {\r\n//               background-position: 100% 50%;\r\n//             }\r\n//           }\r\n\r\n//           @keyframes cardGlow {\r\n//             0%, 100% {\r\n//               opacity: 0.5;\r\n//               transform: scaleX(0.8);\r\n//             }\r\n//             50% {\r\n//               opacity: 1;\r\n//               transform: scaleX(1);\r\n//             }\r\n//           }\r\n\r\n//           @keyframes slideUp {\r\n//             0% {\r\n//               opacity: 0;\r\n//               transform: translateY(40px) scale(0.95);\r\n//             }\r\n//             100% {\r\n//               opacity: 1;\r\n//               transform: translateY(0) scale(1);\r\n//             }\r\n//           }\r\n\r\n//           @keyframes fadeInUp {\r\n//             0% {\r\n//               opacity: 0;\r\n//               transform: translateY(20px);\r\n//             }\r\n//             100% {\r\n//               opacity: 1;\r\n//               transform: translateY(0);\r\n//             }\r\n//           }\r\n\r\n//           @keyframes spin {\r\n//             0% { transform: rotate(0deg); }\r\n//             100% { transform: rotate(360deg); }\r\n//           }\r\n\r\n//           button:hover:not(:disabled) {\r\n//             transform: ${isMobile ? 'scale(1.02)' : 'translateY(-1px)'} !important;\r\n//           }\r\n\r\n//           /* Mobile-specific optimizations */\r\n//           @media (max-width: 768px) {\r\n//             body {\r\n//               -webkit-tap-highlight-color: transparent;\r\n//             }\r\n            \r\n//             button:active {\r\n//               transform: scale(0.98) !important;\r\n//             }\r\n//           }\r\n//         `}\r\n//       </style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for UI/UX  \r\n\r\n"],"mappingsqBA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}