{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battina srinuvasurao\\\\OneDrive\\\\Desktop\\\\userstool\\\\src\\\\components\\\\projects\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName(''); setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(() => {\n// //     listProjects().then(setProjects);\n// //   }, []);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName('');\n// //     setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Name\n// //             <input value={name} onChange={e => setName(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Key\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <button className=\"btn\" onClick={create}>\n// //           <FiPlus /> Create\n// //         </button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>\n// //           {projects.map(p => (\n// //             <li key={p.id}>\n// //               <Link to={'/projects/' + p.id}>\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n// //               </Link>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n//  //////////////////////\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [lead, setLead] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLead, setEditLead] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     setProjects(await listProjects());\n//   };\n\n//   const create = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       lead: lead || 'Unassigned',\n//       description: '',\n//       leads: [],\n//       lastUpdated: now\n//     };\n//     await addProject(p);\n//     await loadProjects();\n//     setName('');\n//     setKey('');\n//     setLead('');\n//     setType('Software');\n//   };\n\n//   const remove = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       await loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLead(p.lead || '');\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditName('');\n//     setEditKey('');\n//     setEditLead('');\n//     setEditType('');\n//   };\n\n//   const saveEdit = async (id) => {\n//     const now = new Date().toISOString();\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       lead: editLead,\n//       type: editType,\n//       lastUpdated: now\n//     });\n//     setEditingId(null);\n//     await loadProjects();\n//   };\n\n//   const avatarStyle = {\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '50%',\n//     background: '#0052cc',\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: '600',\n//     marginRight: '8px',\n//     fontSize: '12px'\n//   };\n\n//   const typeBadgeStyle = (t) => {\n//     const colors = {\n//       Software: { bg: '#e3fcef', color: '#006644' },\n//       Business: { bg: '#deebff', color: '#0747a6' },\n//       Service: { bg: '#ffebe6', color: '#de350b' }\n//     };\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\n//     return {\n//       background: c.bg,\n//       color: c.color,\n//       padding: '0.25rem 0.6rem',\n//       borderRadius: '4px',\n//       fontSize: '12px',\n//       fontWeight: 600\n//     };\n//   };\n\n//   const getProjectColor = (id) => {\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\n//     const index = id.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const projectIconStyle = (id) => ({\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '4px',\n//     background: getProjectColor(id),\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: 600,\n//     marginRight: '8px',\n//     fontSize: '12px',\n//     textTransform: 'uppercase'\n//   });\n\n//   // Filtering\n//   const filteredProjects = projects.filter(p =>\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\n//   );\n\n//   // Sorting\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n//     return 0;\n//   });\n\n//   const toggleSort = (key) => {\n//     setSortConfig((prev) =>\n//       prev.key === key\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\n//         : { key, direction: 'asc' }\n//     );\n//   };\n\n//   const sortIcon = (col) => {\n//     if (sortConfig.key !== col) return null;\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\n//   };\n\n//   return (\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\n//       {/* Create Project */}\n//       {/* ... (same as before, keeping form part unchanged) ... */}\n\n//       {/* Project Table */}\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\n\n//         <input\n//           type=\"text\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//           placeholder=\"Search projects...\"\n//           style={{\n//             width: '100%',\n//             padding: '0.6rem',\n//             marginBottom: '1rem',\n//             border: '1px solid #dfe1e6',\n//             borderRadius: '4px'\n//           }}\n//         />\n\n//         {sortedProjects.length === 0 ? (\n//           <p>No projects found.</p>\n//         ) : (\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//             <thead>\n//               <tr>\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Key {sortIcon('key')}\n//                 </th>\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Name {sortIcon('name')}\n//                 </th>\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Type {sortIcon('type')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Lead {sortIcon('lead')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Last Updated {sortIcon('lastUpdated')}\n//                 </th>\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {sortedProjects.map(p => (\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\n//                     {editingId === p.id ? (\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\n//                     ) : (\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\n//                         {p.name}\n//                       </Link>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\n//                     ) : (\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\n//                         {p.lead || 'Unassigned'}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\n//                     {editingId === p.id ? (\n//                       <>\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\n//                         <button onClick={cancelEdit}><FiX /></button>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n//   const cancelEdit = () => { setEditingId(null); setEditName(''); setEditKey(''); setEditLeads([]); setEditType(''); };\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D' };\n//     return { background: c.bg, color: c.color, padding:'0.25rem 0.6rem', borderRadius:'4px', fontSize:'12px', fontWeight:600 };\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display:'flex', alignItems:'center' }}>\n//       {leadsArr.map((l,i) => (\n//         <div key={i} title={l} style={{\n//           width:'28px', height:'28px', borderRadius:'50%', background:leadColor(l), color:'#fff',\n//           display:'flex', alignItems:'center', justifyContent:'center',\n//           fontSize:'12px', fontWeight:600, marginLeft:i>0?-8:0, border:'2px solid #fff'\n//         }}>{l.charAt(0).toUpperCase()}</div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ display:'grid', gridTemplateColumns:'1fr 3fr', gap:'2rem', padding:'2rem', fontFamily:'Arial,sans-serif' }}>\n//       {/* Create Project Form */}\n//       <div style={{ background:'#fff', padding:'1.5rem', borderRadius:'8px', boxShadow:'0 2px 6px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom:'1rem', fontSize:'18px', color:'#172b4d' }}>Create Project</h2>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Name</label><input value={name} onChange={e=>setName(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Key</label><input value={key} onChange={e=>setKey(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Leads (comma separated)</label><input value={leads.join(',')} onChange={e=>setLeads(e.target.value.split(',').map(l=>l.trim()))} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Type</label><select value={type} onChange={e=>setType(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }}><option>Software</option><option>Business</option><option>Service</option></select></div>\n//         <button onClick={createProject} style={{ display:'flex', alignItems:'center', gap:'6px', background:'#0052CC', color:'#fff', border:'none', padding:'10px 16px', borderRadius:'4px', cursor:'pointer' }}><FiPlus /> Create</button>\n//       </div>\n\n//       {/* Jira-style Project Cards */}\n//       <div style={{ display:'grid', gridTemplateColumns:'repeat(auto-fill,minmax(300px,1fr))', gap:'1rem' }}>\n//         {projects.map(p => (\n//           <div key={p.id} style={{\n//             display:'flex', flexDirection:'column', padding:'1rem', borderRadius:'6px',\n//             boxShadow:'0 1px 3px rgba(0,0,0,0.1)', position:'relative',\n//             borderLeft:`6px solid ${leadColor(p.leads[0])}`, transition:'transform 0.2s',\n//           }}\n//           onMouseEnter={e=>e.currentTarget.style.transform='translateY(-3px)'}\n//           onMouseLeave={e=>e.currentTarget.style.transform='translateY(0)'}\n//           >\n//             <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               <div style={{ fontWeight:600, fontSize:'16px', color:'#172b4d' }}>{editingId===p.id?<input value={editName} onChange={e=>setEditName(e.target.value)} />:<span>{p.name}</span>}</div>\n//               <div style={{ display:'flex', gap:'6px', opacity:0.7 }}>\n//                 {editingId===p.id?(<>\n//                   <button onClick={()=>saveEdit(p.id)}><FiCheck /></button>\n//                   <button onClick={cancelEdit}><FiX /></button>\n//                 </>):(<>\n//                   <button onClick={()=>startEdit(p)}><FiEdit2 /></button>\n//                   <button onClick={()=>removeProject(p.id)}><FiTrash2 /></button>\n//                 </>)}\n//               </div>\n//             </div>\n//             <div style={{ margin:'0.5rem 0', color:'#6b778c', fontSize:'13px' }}>{p.key}</div>\n//             <div style={{ margin:'0.5rem 0' }}><span style={typeBadgeStyle(p.type)}>{p.type}</span></div>\n//             <div style={{ marginTop:'auto', display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               {editingId===p.id?<input value={editLeads.join(',')} onChange={e=>setEditLeads(e.target.value.split(',').map(l=>l.trim()))} />:renderLeads(p.leads)}\n//               <div style={{ fontSize:'12px', color:'#6b778c' }}>{p.lastUpdated?formatDistanceToNow(new Date(p.lastUpdated),{addSuffix:true}):'—'}</div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// //deepseek\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => { \n//     setEditingId(null); \n//     setEditName(''); \n//     setEditKey(''); \n//     setEditLeads([]); \n//     setEditType(''); \n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\n//     return c;\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//       <FiUsers size={14} color=\"#6B778C\" />\n//       {leadsArr.map((l, i) => (\n//         <div key={i} title={l} style={{\n//           width: '28px', \n//           height: '28px', \n//           borderRadius: '50%', \n//           background: leadColor(l), \n//           color: '#fff',\n//           display: 'flex', \n//           alignItems: 'center', \n//           justifyContent: 'center',\n//           fontSize: '12px', \n//           fontWeight: 600, \n//           marginLeft: i > 0 ? -8 : 0, \n//           border: '2px solid #fff',\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n//         }}>\n//           {l.charAt(0).toUpperCase()}\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ \n//         display: 'block', \n//         marginBottom: '4px', \n//         fontSize: '14px', \n//         fontWeight: 600, \n//         color: '#172B4D' \n//       }}>\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\n//         {label}\n//       </label>\n//       <input \n//         value={value} \n//         onChange={onChange}\n//         style={{ \n//           width: '100%', \n//           padding: '10px 12px', \n//           borderRadius: '4px', \n//           border: '1px solid #DFE1E6',\n//           fontSize: '14px',\n//           transition: 'all 0.2s'\n//         }}\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\n//         {...props}\n//       />\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ \n//       minHeight: '100vh', \n//       background: '#F4F5F7', \n//       padding: '2rem',\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n//     }}>\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n//         {/* Header */}\n//         <div style={{ marginBottom: '2rem' }}>\n//           <h1 style={{ \n//             fontSize: '24px', \n//             fontWeight: 600, \n//             color: '#172B4D',\n//             marginBottom: '4px'\n//           }}>\n//             Projects\n//           </h1>\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\n//             Manage your team's projects and settings\n//           </p>\n//         </div>\n\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\n//           {/* Create Project Form */}\n//           <div style={{ \n//             background: '#fff', \n//             padding: '1.5rem', \n//             borderRadius: '8px', \n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//             border: '1px solid #DFE1E6',\n//             height: 'fit-content',\n//             position: 'sticky',\n//             top: '2rem'\n//           }}>\n//             <h2 style={{ \n//               marginBottom: '1.5rem', \n//               fontSize: '16px', \n//               fontWeight: 600,\n//               color: '#172B4D',\n//               display: 'flex',\n//               alignItems: 'center',\n//               gap: '8px'\n//             }}>\n//               <FiPlus size={18} /> Create New Project\n//             </h2>\n\n//             <InputField \n//               label=\"Project Name\" \n//               value={name} \n//               onChange={e => setName(e.target.value)}\n//               icon={FiLayers}\n//               placeholder=\"Enter project name\"\n//             />\n\n//             <InputField \n//               label=\"Project Key\" \n//               value={key} \n//               onChange={e => setKey(e.target.value)}\n//               icon={FiKey}\n//               placeholder=\"PRJ\"\n//               style={{ textTransform: 'uppercase' }}\n//             />\n\n//             <InputField \n//               label=\"Leads (comma separated)\" \n//               value={leads.join(',')} \n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()))}\n//               icon={FiUsers}\n//               placeholder=\"John Doe, Jane Smith\"\n//             />\n\n//             <div style={{ marginBottom: '1.5rem' }}>\n//               <label style={{ \n//                 display: 'block', \n//                 marginBottom: '4px', \n//                 fontSize: '14px', \n//                 fontWeight: 600, \n//                 color: '#172B4D' \n//               }}>\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\n//                 Type\n//               </label>\n//               <select \n//                 value={type} \n//                 onChange={e => setType(e.target.value)} \n//                 style={{ \n//                   width: '100%', \n//                   padding: '10px 12px', \n//                   borderRadius: '4px', \n//                   border: '1px solid #DFE1E6',\n//                   fontSize: '14px',\n//                   background: '#fff'\n//                 }}\n//               >\n//                 <option value=\"Software\">💻 Software</option>\n//                 <option value=\"Business\">📊 Business</option>\n//                 <option value=\"Service\">🔧 Service</option>\n//               </select>\n//             </div>\n\n//             <button \n//               onClick={createProject} \n//               style={{ \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center',\n//                 gap: '8px', \n//                 background: '#0052CC', \n//                 color: '#fff', \n//                 border: 'none', \n//                 padding: '12px 20px', \n//                 borderRadius: '4px', \n//                 cursor: 'pointer',\n//                 fontSize: '14px',\n//                 fontWeight: 600,\n//                 width: '100%',\n//                 transition: 'all 0.2s'\n//               }}\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\n//             >\n//               <FiPlus size={16} /> Create Project\n//             </button>\n//           </div>\n\n//           {/* Project Grid */}\n//           <div>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               alignItems: 'center',\n//               marginBottom: '1rem'\n//             }}>\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\n//                 All Projects ({projects.length})\n//               </h3>\n//             </div>\n\n//             <div style={{ \n//               display: 'grid', \n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \n//               gap: '1rem' \n//             }}>\n//               {projects.map(p => (\n//                 <div key={p.id} style={{\n//                   display: 'flex', \n//                   flexDirection: 'column', \n//                   padding: '1.25rem',\n//                   borderRadius: '8px',\n//                   background: '#fff',\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \n//                   border: '1px solid #DFE1E6',\n//                   transition: 'all 0.2s ease',\n//                   position: 'relative',\n//                   overflow: 'hidden'\n//                 }}\n//                 onMouseEnter={e => {\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n//                 }}\n//                 onMouseLeave={e => {\n//                   e.currentTarget.style.transform = 'translateY(0)';\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n//                 }}\n//                 >\n//                   {/* Project Key Badge */}\n//                   <div style={{ \n//                     position: 'absolute',\n//                     top: '0',\n//                     right: '0',\n//                     background: '#DFE1E6',\n//                     color: '#172B4D',\n//                     padding: '4px 8px',\n//                     fontSize: '12px',\n//                     fontWeight: 600,\n//                     borderBottomLeftRadius: '4px'\n//                   }}>\n//                     {p.key}\n//                   </div>\n\n//                   {/* Project Header */}\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\n//                       {editingId === p.id ? (\n//                         <input \n//                           value={editName} \n//                           onChange={e => setEditName(e.target.value)}\n//                           style={{ \n//                             width: '100%', \n//                             padding: '6px 8px', \n//                             border: '1px solid #DFE1E6',\n//                             borderRadius: '4px',\n//                             fontSize: '14px'\n//                           }}\n//                         />\n//                       ) : (\n//                         <h4 style={{ \n//                           fontWeight: 600, \n//                           fontSize: '16px', \n//                           color: '#172B4D',\n//                           margin: 0,\n//                           lineHeight: 1.3\n//                         }}>\n//                           {p.name}\n//                         </h4>\n//                       )}\n//                     </div>\n\n//                     <div style={{ display: 'flex', gap: '4px' }}>\n//                       {editingId === p.id ? (\n//                         <>\n//                           <button \n//                             onClick={() => saveEdit(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#36B37E',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiCheck size={14} />\n//                           </button>\n//                           <button \n//                             onClick={cancelEdit}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#FF5630',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiX size={14} />\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <>\n//                           <button \n//                             onClick={() => startEdit(p)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#EBECF0';\n//                               e.target.style.color = '#172B4D';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiEdit2 size={14} />\n//                           </button>\n//                           <button \n//                             onClick={() => removeProject(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#FFEBE6';\n//                               e.target.style.color = '#DE350B';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiTrash2 size={14} />\n//                           </button>\n//                         </>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   {/* Project Type */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     <span style={{ \n//                       background: typeBadgeStyle(p.type).bg, \n//                       color: typeBadgeStyle(p.type).color, \n//                       padding: '4px 8px', \n//                       borderRadius: '4px', \n//                       fontSize: '12px', \n//                       fontWeight: 600,\n//                       display: 'inline-flex',\n//                       alignItems: 'center',\n//                       gap: '4px'\n//                     }}>\n//                       {typeBadgeStyle(p.type).icon} {p.type}\n//                     </span>\n//                   </div>\n\n//                   {/* Project Leads */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input \n//                         value={editLeads.join(',')} \n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()))}\n//                         style={{ \n//                           width: '100%', \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                         placeholder=\"Enter leads separated by commas\"\n//                       />\n//                     ) : renderLeads(p.leads)}\n//                   </div>\n\n//                   {/* Last Updated */}\n//                   <div style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     gap: '6px',\n//                     fontSize: '12px', \n//                     color: '#6B778C',\n//                     marginTop: 'auto',\n//                     paddingTop: '0.75rem',\n//                     borderTop: '1px solid #F4F5F7'\n//                   }}>\n//                     <FiCalendar size={12} />\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => { \n//     setEditingId(null); \n//     setEditName(''); \n//     setEditKey(''); \n//     setEditLeads([]); \n//     setEditType(''); \n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\n//     return c;\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//       <FiUsers size={14} color=\"#6B778C\" />\n//       {leadsArr.map((l, i) => (\n//         <div key={i} title={l} style={{\n//           width: '28px', \n//           height: '28px', \n//           borderRadius: '50%', \n//           background: leadColor(l), \n//           color: '#fff',\n//           display: 'flex', \n//           alignItems: 'center', \n//           justifyContent: 'center',\n//           fontSize: '12px', \n//           fontWeight: 600, \n//           marginLeft: i > 0 ? -8 : 0, \n//           border: '2px solid #fff',\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n//         }}>\n//           {l.charAt(0).toUpperCase()}\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ \n//         display: 'block', \n//         marginBottom: '4px', \n//         fontSize: '14px', \n//         fontWeight: 600, \n//         color: '#172B4D' \n//       }}>\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\n//         {label}\n//       </label>\n//       <input \n//         value={value} \n//         onChange={onChange}\n//         style={{ \n//           width: '100%', \n//           padding: '10px 12px', \n//           borderRadius: '4px', \n//           border: '1px solid #DFE1E6',\n//           fontSize: '14px',\n//           transition: 'all 0.2s',\n//           ...props.style // Merge additional styles\n//         }}\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\n//         {...props}\n//       />\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ \n//       minHeight: '100vh', \n//       background: '#F4F5F7', \n//       padding: '2rem',\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n//     }}>\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n//         {/* Header */}\n//         <div style={{ marginBottom: '2rem' }}>\n//           <h1 style={{ \n//             fontSize: '24px', \n//             fontWeight: 600, \n//             color: '#172B4D',\n//             marginBottom: '4px'\n//           }}>\n//             Projects\n//           </h1>\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\n//             Manage your team's projects and settings\n//           </p>\n//         </div>\n\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\n//           {/* Create Project Form */}\n//           <div style={{ \n//             background: '#fff', \n//             padding: '1.5rem', \n//             borderRadius: '8px', \n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//             border: '1px solid #DFE1E6',\n//             height: 'fit-content',\n//             position: 'sticky',\n//             top: '2rem'\n//           }}>\n//             <h2 style={{ \n//               marginBottom: '1.5rem', \n//               fontSize: '16px', \n//               fontWeight: 600,\n//               color: '#172B4D',\n//               display: 'flex',\n//               alignItems: 'center',\n//               gap: '8px'\n//             }}>\n//               <FiPlus size={18} /> Create New Project\n//             </h2>\n\n//             <InputField \n//               label=\"Project Name\" \n//               value={name} \n//               onChange={e => setName(e.target.value)}\n//               icon={FiLayers}\n//               placeholder=\"Enter project name\"\n//             />\n\n//             <InputField \n//               label=\"Project Key\" \n//               value={key} \n//               onChange={e => setKey(e.target.value.toUpperCase())} // Fixed: auto-uppercase on change\n//               icon={FiKey}\n//               placeholder=\"PRJ\"\n//               maxLength={10}\n//             />\n\n//             <InputField \n//               label=\"Leads (comma separated)\" \n//               value={leads.join(',')} \n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()).filter(l => l))}\n//               icon={FiUsers}\n//               placeholder=\"John Doe, Jane Smith\"\n//             />\n\n//             <div style={{ marginBottom: '1.5rem' }}>\n//               <label style={{ \n//                 display: 'block', \n//                 marginBottom: '4px', \n//                 fontSize: '14px', \n//                 fontWeight: 600, \n//                 color: '#172B4D' \n//               }}>\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\n//                 Type\n//               </label>\n//               <select \n//                 value={type} \n//                 onChange={e => setType(e.target.value)} \n//                 style={{ \n//                   width: '100%', \n//                   padding: '10px 12px', \n//                   borderRadius: '4px', \n//                   border: '1px solid #DFE1E6',\n//                   fontSize: '14px',\n//                   background: '#fff'\n//                 }}\n//               >\n//                 <option value=\"Software\">💻 Software</option>\n//                 <option value=\"Business\">📊 Business</option>\n//                 <option value=\"Service\">🔧 Service</option>\n//               </select>\n//             </div>\n\n//             <button \n//               onClick={createProject} \n//               style={{ \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center',\n//                 gap: '8px', \n//                 background: '#0052CC', \n//                 color: '#fff', \n//                 border: 'none', \n//                 padding: '12px 20px', \n//                 borderRadius: '4px', \n//                 cursor: 'pointer',\n//                 fontSize: '14px',\n//                 fontWeight: 600,\n//                 width: '100%',\n//                 transition: 'all 0.2s'\n//               }}\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\n//             >\n//               <FiPlus size={16} /> Create Project\n//             </button>\n//           </div>\n\n//           {/* Project Grid */}\n//           <div>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               alignItems: 'center',\n//               marginBottom: '1rem'\n//             }}>\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\n//                 All Projects ({projects.length})\n//               </h3>\n//             </div>\n\n//             <div style={{ \n//               display: 'grid', \n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \n//               gap: '1rem' \n//             }}>\n//               {projects.map(p => (\n//                 <div key={p.id} style={{\n//                   display: 'flex', \n//                   flexDirection: 'column', \n//                   padding: '1.25rem',\n//                   borderRadius: '8px',\n//                   background: '#fff',\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \n//                   border: '1px solid #DFE1E6',\n//                   transition: 'all 0.2s ease',\n//                   position: 'relative',\n//                   overflow: 'hidden'\n//                 }}\n//                 onMouseEnter={e => {\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n//                 }}\n//                 onMouseLeave={e => {\n//                   e.currentTarget.style.transform = 'translateY(0)';\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n//                 }}\n//                 >\n//                   {/* Project Key Badge */}\n//                   <div style={{ \n//                     position: 'absolute',\n//                     top: '0',\n//                     right: '0',\n//                     background: '#DFE1E6',\n//                     color: '#172B4D',\n//                     padding: '4px 8px',\n//                     fontSize: '12px',\n//                     fontWeight: 600,\n//                     borderBottomLeftRadius: '4px'\n//                   }}>\n//                     {p.key}\n//                   </div>\n\n//                   {/* Project Header */}\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\n//                       {editingId === p.id ? (\n//                         <input \n//                           value={editName} \n//                           onChange={e => setEditName(e.target.value)}\n//                           style={{ \n//                             width: '100%', \n//                             padding: '6px 8px', \n//                             border: '1px solid #DFE1E6',\n//                             borderRadius: '4px',\n//                             fontSize: '14px'\n//                           }}\n//                         />\n//                       ) : (\n//                         <h4 style={{ \n//                           fontWeight: 600, \n//                           fontSize: '16px', \n//                           color: '#172B4D',\n//                           margin: 0,\n//                           lineHeight: 1.3\n//                         }}>\n//                           {p.name}\n//                         </h4>\n//                       )}\n//                     </div>\n\n//                     <div style={{ display: 'flex', gap: '4px' }}>\n//                       {editingId === p.id ? (\n//                         <>\n//                           <button \n//                             onClick={() => saveEdit(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#36B37E',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiCheck size={14} />\n//                           </button>\n//                           <button \n//                             onClick={cancelEdit}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#FF5630',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiX size={14} />\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <>\n//                           <button \n//                             onClick={() => startEdit(p)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#EBECF0';\n//                               e.target.style.color = '#172B4D';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiEdit2 size={14} />\n//                           </button>\n//                           <button \n//                             onClick={() => removeProject(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#FFEBE6';\n//                               e.target.style.color = '#DE350B';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiTrash2 size={14} />\n//                           </button>\n//                         </>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   {/* Project Type */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select \n//                         value={editType} \n//                         onChange={e => setEditType(e.target.value)}\n//                         style={{ \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                       >\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={{ \n//                         background: typeBadgeStyle(p.type).bg, \n//                         color: typeBadgeStyle(p.type).color, \n//                         padding: '4px 8px', \n//                         borderRadius: '4px', \n//                         fontSize: '12px', \n//                         fontWeight: 600,\n//                         display: 'inline-flex',\n//                         alignItems: 'center',\n//                         gap: '4px'\n//                       }}>\n//                         {typeBadgeStyle(p.type).icon} {p.type}\n//                       </span>\n//                     )}\n//                   </div>\n\n//                   {/* Project Leads */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input \n//                         value={editLeads.join(',')} \n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()).filter(l => l))}\n//                         style={{ \n//                           width: '100%', \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                         placeholder=\"Enter leads separated by commas\"\n//                       />\n//                     ) : renderLeads(p.leads)}\n//                   </div>\n\n//                   {/* Project Key in Edit Mode */}\n//                   {editingId === p.id && (\n//                     <div style={{ marginBottom: '1rem' }}>\n//                       <label style={{ fontSize: '12px', fontWeight: 600, color: '#172B4D', display: 'block', marginBottom: '4px' }}>\n//                         Project Key\n//                       </label>\n//                       <input \n//                         value={editKey} \n//                         onChange={e => setEditKey(e.target.value.toUpperCase())}\n//                         style={{ \n//                           width: '100%', \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                         maxLength={10}\n//                       />\n//                     </div>\n//                   )}\n\n//                   {/* Last Updated */}\n//                   <div style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     gap: '6px',\n//                     fontSize: '12px', \n//                     color: '#6B778C',\n//                     marginTop: 'auto',\n//                     paddingTop: '0.75rem',\n//                     borderTop: '1px solid #F4F5F7'\n//                   }}>\n//                     <FiCalendar size={12} />\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\n\n// Reusable input component\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputField({\n  label,\n  value,\n  onChange,\n  icon: Icon,\n  placeholder,\n  maxLength\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        fontSize: '13px',\n        fontWeight: 600,\n        marginBottom: '0.25rem',\n        color: '#172B4D'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1655,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        border: '1px solid #DFE1E6',\n        borderRadius: '4px',\n        background: '#fff'\n      },\n      children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n        style: {\n          marginLeft: '8px',\n          color: '#6B778C'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1659,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: value,\n        onChange: onChange,\n        placeholder: placeholder,\n        maxLength: maxLength,\n        style: {\n          flex: 1,\n          padding: '8px',\n          border: 'none',\n          outline: 'none',\n          fontSize: '14px',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1660,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1658,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1654,\n    columnNumber: 5\n  }, this);\n}\n_c = InputField;\nexport default function ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [type, setType] = useState('Software');\n  const [leadsInput, setLeadsInput] = useState(''); // store as plain text\n  const [expanded, setExpanded] = useState({});\n  const [editingId, setEditingId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editKey, setEditKey] = useState('');\n  const [editType, setEditType] = useState('');\n  const [editLeadsInput, setEditLeadsInput] = useState('');\n  useEffect(() => {\n    loadProjects();\n  }, []);\n  const loadProjects = async () => {\n    const data = await listProjects();\n    setProjects(data);\n  };\n  const createProject = async () => {\n    if (!name.trim()) return;\n    const now = new Date().toISOString();\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      type,\n      leads: leadsInput ? leadsInput.split(',').map(l => l.trim()).filter(l => l) : ['Unassigned'],\n      description: '',\n      lastUpdated: now,\n      createdAt: now\n    };\n    await addProject(p);\n    setName('');\n    setKey('');\n    setLeadsInput('');\n    setType('Software');\n    loadProjects();\n  };\n  const removeProject = async id => {\n    await deleteProject(id);\n    loadProjects();\n  };\n  const startEdit = p => {\n    setEditingId(p.id);\n    setEditName(p.name);\n    setEditKey(p.key);\n    setEditType(p.type);\n    setEditLeadsInput(p.leads.join(', '));\n  };\n  const saveEdit = async id => {\n    const updated = {\n      ...projects.find(p => p.id === id),\n      name: editName,\n      key: editKey,\n      type: editType,\n      leads: editLeadsInput ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l) : ['Unassigned'],\n      lastUpdated: new Date().toISOString()\n    };\n    await updateProject(id, updated);\n    setEditingId(null);\n    loadProjects();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        borderRight: '1px solid #DFE1E6',\n        padding: '1rem',\n        background: '#F4F5F7'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '16px',\n          fontWeight: 'bold',\n          marginBottom: '1rem'\n        },\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Project Name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Enter project name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1760,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Project Key\",\n        value: key,\n        onChange: e => setKey(e.target.value),\n        placeholder: \"e.g. PROJ\",\n        maxLength: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1761,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Project Type\",\n        value: type,\n        onChange: e => setType(e.target.value),\n        placeholder: \"Software, Business...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1762,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        label: \"Leads (comma separated)\",\n        value: leadsInput,\n        onChange: e => setLeadsInput(e.target.value),\n        placeholder: \"John Doe, Jane Smith\",\n        icon: FiUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1763,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createProject,\n        style: {\n          width: '100%',\n          background: '#0052CC',\n          color: 'white',\n          padding: '8px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '14px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n          style: {\n            marginRight: '6px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1781,\n          columnNumber: 11\n        }, this), \" Create Project\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1765,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1757,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        padding: '2rem',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '20px',\n          fontWeight: 'bold',\n          marginBottom: '1.5rem'\n        },\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1787,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gap: '1rem',\n          gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))'\n        },\n        children: [projects.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#fff',\n            border: '1px solid #DFE1E6',\n            borderRadius: '8px',\n            padding: '1rem',\n            display: 'flex',\n            flexDirection: 'column'\n          },\n          children: [editingId === p.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputField, {\n              label: \"Name\",\n              value: editName,\n              onChange: e => setEditName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1804,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              label: \"Key\",\n              value: editKey,\n              onChange: e => setEditKey(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1805,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              label: \"Type\",\n              value: editType,\n              onChange: e => setEditType(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1806,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(InputField, {\n              label: \"Leads\",\n              value: editLeadsInput,\n              onChange: e => setEditLeadsInput(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1807,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.5rem',\n                marginTop: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => saveEdit(p.id),\n                style: {\n                  background: '#36B37E',\n                  color: '#fff',\n                  border: 'none',\n                  padding: '6px 10px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1810,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1809,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setEditingId(null),\n                style: {\n                  background: '#FF5630',\n                  color: '#fff',\n                  border: 'none',\n                  padding: '6px 10px',\n                  borderRadius: '4px',\n                  cursor: 'pointer'\n                },\n                children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1813,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1812,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1808,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '16px',\n                fontWeight: 'bold',\n                marginBottom: '0.5rem'\n              },\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/projects/${p.id}`,\n                style: {\n                  color: '#0052CC',\n                  textDecoration: 'none'\n                },\n                children: p.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1820,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1819,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                color: '#6B778C',\n                marginBottom: '0.5rem'\n              },\n              children: [p.type, \" Project\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1824,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginBottom: '0.5rem'\n              },\n              children: [\"Key: \", p.key]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1825,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontSize: '13px',\n                marginBottom: '0.5rem'\n              },\n              children: [\"Leads: \", p.leads.join(', ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1826,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginTop: '1rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  gap: '0.5rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => startEdit(p),\n                  style: {\n                    background: '#FFAB00',\n                    color: '#fff',\n                    border: 'none',\n                    padding: '6px 10px',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FiEdit2, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1831,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1830,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeProject(p.id),\n                  style: {\n                    background: '#FF5630',\n                    color: '#fff',\n                    border: 'none',\n                    padding: '6px 10px',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1834,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1833,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1829,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setExpanded({\n                  ...expanded,\n                  [p.id]: !expanded[p.id]\n                }),\n                style: {\n                  background: 'transparent',\n                  border: 'none',\n                  cursor: 'pointer',\n                  color: '#0052CC'\n                },\n                children: expanded[p.id] ? /*#__PURE__*/_jsxDEV(FiChevronUp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1838,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(FiChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1838,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1837,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1828,\n              columnNumber: 19\n            }, this), expanded[p.id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '0.5rem',\n                fontSize: '13px',\n                color: '#172B4D'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: p.description || 'No description provided.'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1844,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1843,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              marginTop: 'auto',\n              marginTop: '1rem',\n              paddingTop: '0.75rem',\n              borderTop: '1px solid #EBECF0',\n              fontSize: '12px',\n              color: '#6B778C'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: '4px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1864,\n                columnNumber: 19\n              }, this), p.createdAt ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Created \", formatDistanceToNow(new Date(p.createdAt), {\n                  addSuffix: true\n                })]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Created just now\"\n              }, void 0, false)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1863,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: p.lastUpdated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"Updated \", formatDistanceToNow(new Date(p.lastUpdated), {\n                  addSuffix: true\n                })]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: \"Updated just now\"\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1871,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1851,\n            columnNumber: 15\n          }, this)]\n        }, p.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1791,\n          columnNumber: 13\n        }, this)), projects.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            gridColumn: '1 / -1',\n            textAlign: 'center',\n            padding: '3rem 2rem',\n            background: '#fff',\n            borderRadius: '8px',\n            border: '1px dashed #DFE1E6',\n            color: '#6B778C'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginBottom: '1rem'\n            },\n            children: \"No projects yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1894,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '14px'\n            },\n            children: \"Create your first project using the form on the left.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1895,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1883,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1789,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1786,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1755,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"zJQVrYbfHavPz3Er86OoK79wWvo=\");\n_c2 = ProjectList;\nvar _c, _c2;\n$RefreshReg$(_c, \"InputField\");\n$RefreshReg$(_c2, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","listProjects","addProject","deleteProject","updateProject","Link","v4","uuidv4","FiPlus","FiTrash2","FiEdit2","FiCheck","FiX","FiChevronUp","FiChevronDown","FiUsers","FiCalendar","formatDistanceToNow","jsxDEV","_jsxDEV","Fragment","_Fragment","InputField","label","value","onChange","icon","Icon","placeholder","maxLength","style","marginBottom","children","display","fontSize","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","border","borderRadius","background","marginLeft","type","flex","padding","outline","_c","ProjectList","_s","projects","setProjects","name","setName","key","setKey","setType","leadsInput","setLeadsInput","expanded","setExpanded","editingId","setEditingId","editName","setEditName","editKey","setEditKey","editType","setEditType","editLeadsInput","setEditLeadsInput","loadProjects","data","createProject","trim","now","Date","toISOString","p","id","toUpperCase","leads","split","map","l","filter","description","lastUpdated","createdAt","removeProject","startEdit","join","saveEdit","updated","find","height","width","borderRight","e","target","onClick","cursor","justifyContent","marginRight","overflowY","gap","gridTemplateColumns","flexDirection","marginTop","to","textDecoration","paddingTop","borderTop","size","addSuffix","length","gridColumn","textAlign","_c2","$RefreshReg$"],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/projects/ProjectList.js"],"sourcesContent":["\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { listProjects, addProject } from '../../services/mockApi';\r\n// // import { Link } from 'react-router-dom';\r\n// // import { v4 as uuidv4 } from 'uuid';\r\n// // import { FiPlus } from 'react-icons/fi';\r\n\r\n// // export default function ProjectList() {\r\n// //   const [projects, setProjects] = useState([]);\r\n// //   const [name, setName] = useState('');\r\n// //   const [key, setKey] = useState('');\r\n\r\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\r\n\r\n// //   const create = async () => {\r\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\r\n// //     await addProject(p);\r\n// //     setProjects(await listProjects());\r\n// //     setName(''); setKey('');\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"grid\">\r\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\r\n// //         <h2 id=\"proj-create\">Create Project</h2>\r\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\r\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\r\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\r\n// //       </div>\r\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\r\n// //         <h2 id=\"proj-list\">Projects</h2>\r\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n// // import React, { useEffect, useState } from 'react';\r\n// // import { listProjects, addProject } from '../../services/mockApi';\r\n// // import { Link } from 'react-router-dom';\r\n// // import { v4 as uuidv4 } from 'uuid';\r\n// // import { FiPlus } from 'react-icons/fi';\r\n \r\n// // export default function ProjectList() {\r\n// //   const [projects, setProjects] = useState([]);\r\n// //   const [name, setName] = useState('');\r\n// //   const [key, setKey] = useState('');\r\n \r\n// //   useEffect(() => {\r\n// //     listProjects().then(setProjects);\r\n// //   }, []);\r\n \r\n// //   const create = async () => {\r\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\r\n// //     await addProject(p);\r\n// //     setProjects(await listProjects());\r\n// //     setName('');\r\n// //     setKey('');\r\n// //   };\r\n \r\n// //   return (\r\n// //     <div className=\"grid\">\r\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\r\n// //         <h2 id=\"proj-create\">Create Project</h2>\r\n// //         <div className=\"form-row\">\r\n// //           <label>\r\n// //             Project Name\r\n// //             <input value={name} onChange={e => setName(e.target.value)} />\r\n// //           </label>\r\n// //         </div>\r\n// //         <div className=\"form-row\">\r\n// //           <label>\r\n// //             Project Key\r\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\r\n// //           </label>\r\n// //         </div>\r\n// //         <button className=\"btn\" onClick={create}>\r\n// //           <FiPlus /> Create\r\n// //         </button>\r\n// //       </div>\r\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\r\n// //         <h2 id=\"proj-list\">Projects</h2>\r\n// //         <ul>\r\n// //           {projects.map(p => (\r\n// //             <li key={p.id}>\r\n// //               <Link to={'/projects/' + p.id}>\r\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\r\n// //               </Link>\r\n// //             </li>\r\n// //           ))}\r\n// //         </ul>\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n \r\n//  //////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject } from '../../services/mockApi';\r\n// import { Link } from 'react-router-dom';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus } from 'react-icons/fi';\r\n \r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n \r\n//   useEffect(() => {\r\n//     listProjects().then(setProjects);\r\n//   }, []);\r\n \r\n//   const create = async () => {\r\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\r\n//     await addProject(p);\r\n//     setProjects(await listProjects());\r\n//     setName('');\r\n//     setKey('');\r\n//   };\r\n \r\n//   return (\r\n//     <div className=\"grid\">\r\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\r\n//         <h2 id=\"proj-create\">Create Project</h2>\r\n//         <div className=\"form-row\">\r\n//           <label>\r\n//             Project Name\r\n//             <input value={name} onChange={e => setName(e.target.value)} />\r\n//           </label>\r\n//         </div>\r\n//         <div className=\"form-row\">\r\n//           <label>\r\n//             Project Key\r\n//             <input value={key} onChange={e => setKey(e.target.value)} />\r\n//           </label>\r\n//         </div>\r\n//         <button className=\"btn\" onClick={create}>\r\n//           <FiPlus /> Create\r\n//         </button>\r\n//       </div>\r\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\r\n//         <h2 id=\"proj-list\">Projects</h2>\r\n//         <ul>\r\n//           {projects.map(p => (\r\n//             <li key={p.id}>\r\n//               <Link to={'/projects/' + p.id}>\r\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\r\n//               </Link>\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { Link } from 'react-router-dom';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [lead, setLead] = useState('');\r\n//   const [type, setType] = useState('Software');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editLead, setEditLead] = useState('');\r\n//   const [editType, setEditType] = useState('');\r\n//   const [search, setSearch] = useState('');\r\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\r\n\r\n//   useEffect(() => {\r\n//     loadProjects();\r\n//   }, []);\r\n\r\n//   const loadProjects = async () => {\r\n//     setProjects(await listProjects());\r\n//   };\r\n\r\n//   const create = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       lead: lead || 'Unassigned',\r\n//       description: '',\r\n//       leads: [],\r\n//       lastUpdated: now\r\n//     };\r\n//     await addProject(p);\r\n//     await loadProjects();\r\n//     setName('');\r\n//     setKey('');\r\n//     setLead('');\r\n//     setType('Software');\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n//       await deleteProject(id);\r\n//       await loadProjects();\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditLead(p.lead || '');\r\n//     setEditType(p.type || 'Software');\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditName('');\r\n//     setEditKey('');\r\n//     setEditLead('');\r\n//     setEditType('');\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     const now = new Date().toISOString();\r\n//     await updateProject(id, {\r\n//       name: editName,\r\n//       key: editKey.toUpperCase(),\r\n//       lead: editLead,\r\n//       type: editType,\r\n//       lastUpdated: now\r\n//     });\r\n//     setEditingId(null);\r\n//     await loadProjects();\r\n//   };\r\n\r\n//   const avatarStyle = {\r\n//     width: '28px',\r\n//     height: '28px',\r\n//     borderRadius: '50%',\r\n//     background: '#0052cc',\r\n//     color: 'white',\r\n//     display: 'inline-flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontWeight: '600',\r\n//     marginRight: '8px',\r\n//     fontSize: '12px'\r\n//   };\r\n\r\n//   const typeBadgeStyle = (t) => {\r\n//     const colors = {\r\n//       Software: { bg: '#e3fcef', color: '#006644' },\r\n//       Business: { bg: '#deebff', color: '#0747a6' },\r\n//       Service: { bg: '#ffebe6', color: '#de350b' }\r\n//     };\r\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\r\n//     return {\r\n//       background: c.bg,\r\n//       color: c.color,\r\n//       padding: '0.25rem 0.6rem',\r\n//       borderRadius: '4px',\r\n//       fontSize: '12px',\r\n//       fontWeight: 600\r\n//     };\r\n//   };\r\n\r\n//   const getProjectColor = (id) => {\r\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\r\n//     const index = id.charCodeAt(0) % colors.length;\r\n//     return colors[index];\r\n//   };\r\n\r\n//   const projectIconStyle = (id) => ({\r\n//     width: '28px',\r\n//     height: '28px',\r\n//     borderRadius: '4px',\r\n//     background: getProjectColor(id),\r\n//     color: 'white',\r\n//     display: 'inline-flex',\r\n//     alignItems: 'center',\r\n//     justifyContent: 'center',\r\n//     fontWeight: 600,\r\n//     marginRight: '8px',\r\n//     fontSize: '12px',\r\n//     textTransform: 'uppercase'\r\n//   });\r\n\r\n//   // Filtering\r\n//   const filteredProjects = projects.filter(p =>\r\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\r\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\r\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\r\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\r\n//   );\r\n\r\n//   // Sorting\r\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\r\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\r\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\r\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\r\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\r\n//     return 0;\r\n//   });\r\n\r\n//   const toggleSort = (key) => {\r\n//     setSortConfig((prev) =>\r\n//       prev.key === key\r\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\r\n//         : { key, direction: 'asc' }\r\n//     );\r\n//   };\r\n\r\n//   const sortIcon = (col) => {\r\n//     if (sortConfig.key !== col) return null;\r\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\r\n//       {/* Create Project */}\r\n//       {/* ... (same as before, keeping form part unchanged) ... */}\r\n\r\n//       {/* Project Table */}\r\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\r\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\r\n\r\n//         <input\r\n//           type=\"text\"\r\n//           value={search}\r\n//           onChange={e => setSearch(e.target.value)}\r\n//           placeholder=\"Search projects...\"\r\n//           style={{\r\n//             width: '100%',\r\n//             padding: '0.6rem',\r\n//             marginBottom: '1rem',\r\n//             border: '1px solid #dfe1e6',\r\n//             borderRadius: '4px'\r\n//           }}\r\n//         />\r\n\r\n//         {sortedProjects.length === 0 ? (\r\n//           <p>No projects found.</p>\r\n//         ) : (\r\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\r\n//                   Key {sortIcon('key')}\r\n//                 </th>\r\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\r\n//                   Name {sortIcon('name')}\r\n//                 </th>\r\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\r\n//                   Type {sortIcon('type')}\r\n//                 </th>\r\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\r\n//                   Lead {sortIcon('lead')}\r\n//                 </th>\r\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\r\n//                   Last Updated {sortIcon('lastUpdated')}\r\n//                 </th>\r\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\r\n//                   Actions\r\n//                 </th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {sortedProjects.map(p => (\r\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\r\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\r\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\r\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\r\n//                     {editingId === p.id ? (\r\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\r\n//                     ) : (\r\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\r\n//                         {p.name}\r\n//                       </Link>\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: '0.75rem 1rem' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\r\n//                         <option value=\"Software\">Software</option>\r\n//                         <option value=\"Business\">Business</option>\r\n//                         <option value=\"Service\">Service</option>\r\n//                       </select>\r\n//                     ) : (\r\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: '0.75rem 1rem' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\r\n//                     ) : (\r\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\r\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\r\n//                         {p.lead || 'Unassigned'}\r\n//                       </div>\r\n//                     )}\r\n//                   </td>\r\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\r\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\r\n//                   </td>\r\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <>\r\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\r\n//                         <button onClick={cancelEdit}><FiX /></button>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\r\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\r\n//                       </>\r\n//                     )}\r\n//                   </td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [leads, setLeads] = useState([]);\r\n//   const [type, setType] = useState('Software');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editLeads, setEditLeads] = useState([]);\r\n//   const [editType, setEditType] = useState('');\r\n\r\n//   useEffect(() => { loadProjects(); }, []);\r\n//   const loadProjects = async () => setProjects(await listProjects());\r\n\r\n//   const createProject = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       leads: leads.length ? leads : ['Unassigned'],\r\n//       description: '',\r\n//       lastUpdated: now,\r\n//       createdAt: now\r\n//     };\r\n//     await addProject(p);\r\n//     setName(''); setKey(''); setLeads([]); setType('Software');\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const removeProject = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n//       await deleteProject(id);\r\n//       loadProjects();\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditLeads(p.leads || []);\r\n//     setEditType(p.type || 'Software');\r\n//   };\r\n//   const cancelEdit = () => { setEditingId(null); setEditName(''); setEditKey(''); setEditLeads([]); setEditType(''); };\r\n//   const saveEdit = async (id) => {\r\n//     await updateProject(id, {\r\n//       name: editName,\r\n//       key: editKey.toUpperCase(),\r\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\r\n//       type: editType,\r\n//       lastUpdated: new Date().toISOString()\r\n//     });\r\n//     cancelEdit();\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const leadColor = (name) => {\r\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\r\n//     if (!name) return '#6B778C';\r\n//     const index = name.charCodeAt(0) % colors.length;\r\n//     return colors[index];\r\n//   };\r\n\r\n//   const typeBadgeStyle = t => {\r\n//     const colors = {\r\n//       Software: { bg: '#E3FCF7', color: '#006644' },\r\n//       Business: { bg: '#DEEBFF', color: '#0747A6' },\r\n//       Service: { bg: '#FFEBE6', color: '#DE350B' }\r\n//     };\r\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D' };\r\n//     return { background: c.bg, color: c.color, padding:'0.25rem 0.6rem', borderRadius:'4px', fontSize:'12px', fontWeight:600 };\r\n//   };\r\n\r\n//   const renderLeads = (leadsArr) => (\r\n//     <div style={{ display:'flex', alignItems:'center' }}>\r\n//       {leadsArr.map((l,i) => (\r\n//         <div key={i} title={l} style={{\r\n//           width:'28px', height:'28px', borderRadius:'50%', background:leadColor(l), color:'#fff',\r\n//           display:'flex', alignItems:'center', justifyContent:'center',\r\n//           fontSize:'12px', fontWeight:600, marginLeft:i>0?-8:0, border:'2px solid #fff'\r\n//         }}>{l.charAt(0).toUpperCase()}</div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div style={{ display:'grid', gridTemplateColumns:'1fr 3fr', gap:'2rem', padding:'2rem', fontFamily:'Arial,sans-serif' }}>\r\n//       {/* Create Project Form */}\r\n//       <div style={{ background:'#fff', padding:'1.5rem', borderRadius:'8px', boxShadow:'0 2px 6px rgba(0,0,0,0.1)' }}>\r\n//         <h2 style={{ marginBottom:'1rem', fontSize:'18px', color:'#172b4d' }}>Create Project</h2>\r\n//         <div style={{ marginBottom:'1rem' }}><label>Project Name</label><input value={name} onChange={e=>setName(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\r\n//         <div style={{ marginBottom:'1rem' }}><label>Project Key</label><input value={key} onChange={e=>setKey(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\r\n//         <div style={{ marginBottom:'1rem' }}><label>Leads (comma separated)</label><input value={leads.join(',')} onChange={e=>setLeads(e.target.value.split(',').map(l=>l.trim()))} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\r\n//         <div style={{ marginBottom:'1rem' }}><label>Type</label><select value={type} onChange={e=>setType(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }}><option>Software</option><option>Business</option><option>Service</option></select></div>\r\n//         <button onClick={createProject} style={{ display:'flex', alignItems:'center', gap:'6px', background:'#0052CC', color:'#fff', border:'none', padding:'10px 16px', borderRadius:'4px', cursor:'pointer' }}><FiPlus /> Create</button>\r\n//       </div>\r\n\r\n//       {/* Jira-style Project Cards */}\r\n//       <div style={{ display:'grid', gridTemplateColumns:'repeat(auto-fill,minmax(300px,1fr))', gap:'1rem' }}>\r\n//         {projects.map(p => (\r\n//           <div key={p.id} style={{\r\n//             display:'flex', flexDirection:'column', padding:'1rem', borderRadius:'6px',\r\n//             boxShadow:'0 1px 3px rgba(0,0,0,0.1)', position:'relative',\r\n//             borderLeft:`6px solid ${leadColor(p.leads[0])}`, transition:'transform 0.2s',\r\n//           }}\r\n//           onMouseEnter={e=>e.currentTarget.style.transform='translateY(-3px)'}\r\n//           onMouseLeave={e=>e.currentTarget.style.transform='translateY(0)'}\r\n//           >\r\n//             <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>\r\n//               <div style={{ fontWeight:600, fontSize:'16px', color:'#172b4d' }}>{editingId===p.id?<input value={editName} onChange={e=>setEditName(e.target.value)} />:<span>{p.name}</span>}</div>\r\n//               <div style={{ display:'flex', gap:'6px', opacity:0.7 }}>\r\n//                 {editingId===p.id?(<>\r\n//                   <button onClick={()=>saveEdit(p.id)}><FiCheck /></button>\r\n//                   <button onClick={cancelEdit}><FiX /></button>\r\n//                 </>):(<>\r\n//                   <button onClick={()=>startEdit(p)}><FiEdit2 /></button>\r\n//                   <button onClick={()=>removeProject(p.id)}><FiTrash2 /></button>\r\n//                 </>)}\r\n//               </div>\r\n//             </div>\r\n//             <div style={{ margin:'0.5rem 0', color:'#6b778c', fontSize:'13px' }}>{p.key}</div>\r\n//             <div style={{ margin:'0.5rem 0' }}><span style={typeBadgeStyle(p.type)}>{p.type}</span></div>\r\n//             <div style={{ marginTop:'auto', display:'flex', justifyContent:'space-between', alignItems:'center' }}>\r\n//               {editingId===p.id?<input value={editLeads.join(',')} onChange={e=>setEditLeads(e.target.value.split(',').map(l=>l.trim()))} />:renderLeads(p.leads)}\r\n//               <div style={{ fontSize:'12px', color:'#6b778c' }}>{p.lastUpdated?formatDistanceToNow(new Date(p.lastUpdated),{addSuffix:true}):'—'}</div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// //deepseek\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [leads, setLeads] = useState([]);\r\n//   const [type, setType] = useState('Software');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editLeads, setEditLeads] = useState([]);\r\n//   const [editType, setEditType] = useState('');\r\n\r\n//   useEffect(() => { loadProjects(); }, []);\r\n//   const loadProjects = async () => setProjects(await listProjects());\r\n\r\n//   const createProject = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       leads: leads.length ? leads : ['Unassigned'],\r\n//       description: '',\r\n//       lastUpdated: now,\r\n//       createdAt: now\r\n//     };\r\n//     await addProject(p);\r\n//     setName(''); setKey(''); setLeads([]); setType('Software');\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const removeProject = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n//       await deleteProject(id);\r\n//       loadProjects();\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditLeads(p.leads || []);\r\n//     setEditType(p.type || 'Software');\r\n//   };\r\n  \r\n//   const cancelEdit = () => { \r\n//     setEditingId(null); \r\n//     setEditName(''); \r\n//     setEditKey(''); \r\n//     setEditLeads([]); \r\n//     setEditType(''); \r\n//   };\r\n  \r\n//   const saveEdit = async (id) => {\r\n//     await updateProject(id, {\r\n//       name: editName,\r\n//       key: editKey.toUpperCase(),\r\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\r\n//       type: editType,\r\n//       lastUpdated: new Date().toISOString()\r\n//     });\r\n//     cancelEdit();\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const leadColor = (name) => {\r\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\r\n//     if (!name) return '#6B778C';\r\n//     const index = name.charCodeAt(0) % colors.length;\r\n//     return colors[index];\r\n//   };\r\n\r\n//   const typeBadgeStyle = t => {\r\n//     const colors = {\r\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\r\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\r\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\r\n//     };\r\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\r\n//     return c;\r\n//   };\r\n\r\n//   const renderLeads = (leadsArr) => (\r\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n//       <FiUsers size={14} color=\"#6B778C\" />\r\n//       {leadsArr.map((l, i) => (\r\n//         <div key={i} title={l} style={{\r\n//           width: '28px', \r\n//           height: '28px', \r\n//           borderRadius: '50%', \r\n//           background: leadColor(l), \r\n//           color: '#fff',\r\n//           display: 'flex', \r\n//           alignItems: 'center', \r\n//           justifyContent: 'center',\r\n//           fontSize: '12px', \r\n//           fontWeight: 600, \r\n//           marginLeft: i > 0 ? -8 : 0, \r\n//           border: '2px solid #fff',\r\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n//         }}>\r\n//           {l.charAt(0).toUpperCase()}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n\r\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\r\n//     <div style={{ marginBottom: '1rem' }}>\r\n//       <label style={{ \r\n//         display: 'block', \r\n//         marginBottom: '4px', \r\n//         fontSize: '14px', \r\n//         fontWeight: 600, \r\n//         color: '#172B4D' \r\n//       }}>\r\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\r\n//         {label}\r\n//       </label>\r\n//       <input \r\n//         value={value} \r\n//         onChange={onChange}\r\n//         style={{ \r\n//           width: '100%', \r\n//           padding: '10px 12px', \r\n//           borderRadius: '4px', \r\n//           border: '1px solid #DFE1E6',\r\n//           fontSize: '14px',\r\n//           transition: 'all 0.2s'\r\n//         }}\r\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\r\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\r\n//         {...props}\r\n//       />\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div style={{ \r\n//       minHeight: '100vh', \r\n//       background: '#F4F5F7', \r\n//       padding: '2rem',\r\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\r\n//     }}>\r\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\r\n//         {/* Header */}\r\n//         <div style={{ marginBottom: '2rem' }}>\r\n//           <h1 style={{ \r\n//             fontSize: '24px', \r\n//             fontWeight: 600, \r\n//             color: '#172B4D',\r\n//             marginBottom: '4px'\r\n//           }}>\r\n//             Projects\r\n//           </h1>\r\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\r\n//             Manage your team's projects and settings\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\r\n//           {/* Create Project Form */}\r\n//           <div style={{ \r\n//             background: '#fff', \r\n//             padding: '1.5rem', \r\n//             borderRadius: '8px', \r\n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n//             border: '1px solid #DFE1E6',\r\n//             height: 'fit-content',\r\n//             position: 'sticky',\r\n//             top: '2rem'\r\n//           }}>\r\n//             <h2 style={{ \r\n//               marginBottom: '1.5rem', \r\n//               fontSize: '16px', \r\n//               fontWeight: 600,\r\n//               color: '#172B4D',\r\n//               display: 'flex',\r\n//               alignItems: 'center',\r\n//               gap: '8px'\r\n//             }}>\r\n//               <FiPlus size={18} /> Create New Project\r\n//             </h2>\r\n            \r\n//             <InputField \r\n//               label=\"Project Name\" \r\n//               value={name} \r\n//               onChange={e => setName(e.target.value)}\r\n//               icon={FiLayers}\r\n//               placeholder=\"Enter project name\"\r\n//             />\r\n            \r\n//             <InputField \r\n//               label=\"Project Key\" \r\n//               value={key} \r\n//               onChange={e => setKey(e.target.value)}\r\n//               icon={FiKey}\r\n//               placeholder=\"PRJ\"\r\n//               style={{ textTransform: 'uppercase' }}\r\n//             />\r\n            \r\n//             <InputField \r\n//               label=\"Leads (comma separated)\" \r\n//               value={leads.join(',')} \r\n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()))}\r\n//               icon={FiUsers}\r\n//               placeholder=\"John Doe, Jane Smith\"\r\n//             />\r\n            \r\n//             <div style={{ marginBottom: '1.5rem' }}>\r\n//               <label style={{ \r\n//                 display: 'block', \r\n//                 marginBottom: '4px', \r\n//                 fontSize: '14px', \r\n//                 fontWeight: 600, \r\n//                 color: '#172B4D' \r\n//               }}>\r\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\r\n//                 Type\r\n//               </label>\r\n//               <select \r\n//                 value={type} \r\n//                 onChange={e => setType(e.target.value)} \r\n//                 style={{ \r\n//                   width: '100%', \r\n//                   padding: '10px 12px', \r\n//                   borderRadius: '4px', \r\n//                   border: '1px solid #DFE1E6',\r\n//                   fontSize: '14px',\r\n//                   background: '#fff'\r\n//                 }}\r\n//               >\r\n//                 <option value=\"Software\">💻 Software</option>\r\n//                 <option value=\"Business\">📊 Business</option>\r\n//                 <option value=\"Service\">🔧 Service</option>\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <button \r\n//               onClick={createProject} \r\n//               style={{ \r\n//                 display: 'flex', \r\n//                 alignItems: 'center', \r\n//                 justifyContent: 'center',\r\n//                 gap: '8px', \r\n//                 background: '#0052CC', \r\n//                 color: '#fff', \r\n//                 border: 'none', \r\n//                 padding: '12px 20px', \r\n//                 borderRadius: '4px', \r\n//                 cursor: 'pointer',\r\n//                 fontSize: '14px',\r\n//                 fontWeight: 600,\r\n//                 width: '100%',\r\n//                 transition: 'all 0.2s'\r\n//               }}\r\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\r\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\r\n//             >\r\n//               <FiPlus size={16} /> Create Project\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Project Grid */}\r\n//           <div>\r\n//             <div style={{ \r\n//               display: 'flex', \r\n//               justifyContent: 'space-between', \r\n//               alignItems: 'center',\r\n//               marginBottom: '1rem'\r\n//             }}>\r\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\r\n//                 All Projects ({projects.length})\r\n//               </h3>\r\n//             </div>\r\n            \r\n//             <div style={{ \r\n//               display: 'grid', \r\n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \r\n//               gap: '1rem' \r\n//             }}>\r\n//               {projects.map(p => (\r\n//                 <div key={p.id} style={{\r\n//                   display: 'flex', \r\n//                   flexDirection: 'column', \r\n//                   padding: '1.25rem',\r\n//                   borderRadius: '8px',\r\n//                   background: '#fff',\r\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \r\n//                   border: '1px solid #DFE1E6',\r\n//                   transition: 'all 0.2s ease',\r\n//                   position: 'relative',\r\n//                   overflow: 'hidden'\r\n//                 }}\r\n//                 onMouseEnter={e => {\r\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\r\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\r\n//                 }}\r\n//                 onMouseLeave={e => {\r\n//                   e.currentTarget.style.transform = 'translateY(0)';\r\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\r\n//                 }}\r\n//                 >\r\n//                   {/* Project Key Badge */}\r\n//                   <div style={{ \r\n//                     position: 'absolute',\r\n//                     top: '0',\r\n//                     right: '0',\r\n//                     background: '#DFE1E6',\r\n//                     color: '#172B4D',\r\n//                     padding: '4px 8px',\r\n//                     fontSize: '12px',\r\n//                     fontWeight: 600,\r\n//                     borderBottomLeftRadius: '4px'\r\n//                   }}>\r\n//                     {p.key}\r\n//                   </div>\r\n\r\n//                   {/* Project Header */}\r\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\r\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\r\n//                       {editingId === p.id ? (\r\n//                         <input \r\n//                           value={editName} \r\n//                           onChange={e => setEditName(e.target.value)}\r\n//                           style={{ \r\n//                             width: '100%', \r\n//                             padding: '6px 8px', \r\n//                             border: '1px solid #DFE1E6',\r\n//                             borderRadius: '4px',\r\n//                             fontSize: '14px'\r\n//                           }}\r\n//                         />\r\n//                       ) : (\r\n//                         <h4 style={{ \r\n//                           fontWeight: 600, \r\n//                           fontSize: '16px', \r\n//                           color: '#172B4D',\r\n//                           margin: 0,\r\n//                           lineHeight: 1.3\r\n//                         }}>\r\n//                           {p.name}\r\n//                         </h4>\r\n//                       )}\r\n//                     </div>\r\n                    \r\n//                     <div style={{ display: 'flex', gap: '4px' }}>\r\n//                       {editingId === p.id ? (\r\n//                         <>\r\n//                           <button \r\n//                             onClick={() => saveEdit(p.id)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: '#36B37E',\r\n//                               color: 'white',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer'\r\n//                             }}\r\n//                           >\r\n//                             <FiCheck size={14} />\r\n//                           </button>\r\n//                           <button \r\n//                             onClick={cancelEdit}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: '#FF5630',\r\n//                               color: 'white',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer'\r\n//                             }}\r\n//                           >\r\n//                             <FiX size={14} />\r\n//                           </button>\r\n//                         </>\r\n//                       ) : (\r\n//                         <>\r\n//                           <button \r\n//                             onClick={() => startEdit(p)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: 'transparent',\r\n//                               color: '#6B778C',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer',\r\n//                               transition: 'all 0.2s'\r\n//                             }}\r\n//                             onMouseEnter={(e) => {\r\n//                               e.target.style.background = '#EBECF0';\r\n//                               e.target.style.color = '#172B4D';\r\n//                             }}\r\n//                             onMouseLeave={(e) => {\r\n//                               e.target.style.background = 'transparent';\r\n//                               e.target.style.color = '#6B778C';\r\n//                             }}\r\n//                           >\r\n//                             <FiEdit2 size={14} />\r\n//                           </button>\r\n//                           <button \r\n//                             onClick={() => removeProject(p.id)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: 'transparent',\r\n//                               color: '#6B778C',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer',\r\n//                               transition: 'all 0.2s'\r\n//                             }}\r\n//                             onMouseEnter={(e) => {\r\n//                               e.target.style.background = '#FFEBE6';\r\n//                               e.target.style.color = '#DE350B';\r\n//                             }}\r\n//                             onMouseLeave={(e) => {\r\n//                               e.target.style.background = 'transparent';\r\n//                               e.target.style.color = '#6B778C';\r\n//                             }}\r\n//                           >\r\n//                             <FiTrash2 size={14} />\r\n//                           </button>\r\n//                         </>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   {/* Project Type */}\r\n//                   <div style={{ marginBottom: '1rem' }}>\r\n//                     <span style={{ \r\n//                       background: typeBadgeStyle(p.type).bg, \r\n//                       color: typeBadgeStyle(p.type).color, \r\n//                       padding: '4px 8px', \r\n//                       borderRadius: '4px', \r\n//                       fontSize: '12px', \r\n//                       fontWeight: 600,\r\n//                       display: 'inline-flex',\r\n//                       alignItems: 'center',\r\n//                       gap: '4px'\r\n//                     }}>\r\n//                       {typeBadgeStyle(p.type).icon} {p.type}\r\n//                     </span>\r\n//                   </div>\r\n\r\n//                   {/* Project Leads */}\r\n//                   <div style={{ marginBottom: '1rem' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <input \r\n//                         value={editLeads.join(',')} \r\n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()))}\r\n//                         style={{ \r\n//                           width: '100%', \r\n//                           padding: '6px 8px', \r\n//                           border: '1px solid #DFE1E6',\r\n//                           borderRadius: '4px',\r\n//                           fontSize: '14px'\r\n//                         }}\r\n//                         placeholder=\"Enter leads separated by commas\"\r\n//                       />\r\n//                     ) : renderLeads(p.leads)}\r\n//                   </div>\r\n\r\n//                   {/* Last Updated */}\r\n//                   <div style={{ \r\n//                     display: 'flex', \r\n//                     alignItems: 'center', \r\n//                     gap: '6px',\r\n//                     fontSize: '12px', \r\n//                     color: '#6B778C',\r\n//                     marginTop: 'auto',\r\n//                     paddingTop: '0.75rem',\r\n//                     borderTop: '1px solid #F4F5F7'\r\n//                   }}>\r\n//                     <FiCalendar size={12} />\r\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\r\n// import { formatDistanceToNow } from 'date-fns';\r\n\r\n// export default function ProjectList() {\r\n//   const [projects, setProjects] = useState([]);\r\n//   const [name, setName] = useState('');\r\n//   const [key, setKey] = useState('');\r\n//   const [leads, setLeads] = useState([]);\r\n//   const [type, setType] = useState('Software');\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editName, setEditName] = useState('');\r\n//   const [editKey, setEditKey] = useState('');\r\n//   const [editLeads, setEditLeads] = useState([]);\r\n//   const [editType, setEditType] = useState('');\r\n\r\n//   useEffect(() => { loadProjects(); }, []);\r\n//   const loadProjects = async () => setProjects(await listProjects());\r\n\r\n//   const createProject = async () => {\r\n//     if (!name.trim()) return;\r\n//     const now = new Date().toISOString();\r\n//     const p = {\r\n//       id: uuidv4(),\r\n//       key: key.toUpperCase() || 'PRJ',\r\n//       name,\r\n//       type,\r\n//       leads: leads.length ? leads : ['Unassigned'],\r\n//       description: '',\r\n//       lastUpdated: now,\r\n//       createdAt: now\r\n//     };\r\n//     await addProject(p);\r\n//     setName(''); setKey(''); setLeads([]); setType('Software');\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const removeProject = async (id) => {\r\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\r\n//       await deleteProject(id);\r\n//       loadProjects();\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (p) => {\r\n//     setEditingId(p.id);\r\n//     setEditName(p.name);\r\n//     setEditKey(p.key);\r\n//     setEditLeads(p.leads || []);\r\n//     setEditType(p.type || 'Software');\r\n//   };\r\n  \r\n//   const cancelEdit = () => { \r\n//     setEditingId(null); \r\n//     setEditName(''); \r\n//     setEditKey(''); \r\n//     setEditLeads([]); \r\n//     setEditType(''); \r\n//   };\r\n  \r\n//   const saveEdit = async (id) => {\r\n//     await updateProject(id, {\r\n//       name: editName,\r\n//       key: editKey.toUpperCase(),\r\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\r\n//       type: editType,\r\n//       lastUpdated: new Date().toISOString()\r\n//     });\r\n//     cancelEdit();\r\n//     loadProjects();\r\n//   };\r\n\r\n//   const leadColor = (name) => {\r\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\r\n//     if (!name) return '#6B778C';\r\n//     const index = name.charCodeAt(0) % colors.length;\r\n//     return colors[index];\r\n//   };\r\n\r\n//   const typeBadgeStyle = t => {\r\n//     const colors = {\r\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\r\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\r\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\r\n//     };\r\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\r\n//     return c;\r\n//   };\r\n\r\n//   const renderLeads = (leadsArr) => (\r\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n//       <FiUsers size={14} color=\"#6B778C\" />\r\n//       {leadsArr.map((l, i) => (\r\n//         <div key={i} title={l} style={{\r\n//           width: '28px', \r\n//           height: '28px', \r\n//           borderRadius: '50%', \r\n//           background: leadColor(l), \r\n//           color: '#fff',\r\n//           display: 'flex', \r\n//           alignItems: 'center', \r\n//           justifyContent: 'center',\r\n//           fontSize: '12px', \r\n//           fontWeight: 600, \r\n//           marginLeft: i > 0 ? -8 : 0, \r\n//           border: '2px solid #fff',\r\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\r\n//         }}>\r\n//           {l.charAt(0).toUpperCase()}\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n\r\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\r\n//     <div style={{ marginBottom: '1rem' }}>\r\n//       <label style={{ \r\n//         display: 'block', \r\n//         marginBottom: '4px', \r\n//         fontSize: '14px', \r\n//         fontWeight: 600, \r\n//         color: '#172B4D' \r\n//       }}>\r\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\r\n//         {label}\r\n//       </label>\r\n//       <input \r\n//         value={value} \r\n//         onChange={onChange}\r\n//         style={{ \r\n//           width: '100%', \r\n//           padding: '10px 12px', \r\n//           borderRadius: '4px', \r\n//           border: '1px solid #DFE1E6',\r\n//           fontSize: '14px',\r\n//           transition: 'all 0.2s',\r\n//           ...props.style // Merge additional styles\r\n//         }}\r\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\r\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\r\n//         {...props}\r\n//       />\r\n//     </div>\r\n//   );\r\n\r\n//   return (\r\n//     <div style={{ \r\n//       minHeight: '100vh', \r\n//       background: '#F4F5F7', \r\n//       padding: '2rem',\r\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\r\n//     }}>\r\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\r\n//         {/* Header */}\r\n//         <div style={{ marginBottom: '2rem' }}>\r\n//           <h1 style={{ \r\n//             fontSize: '24px', \r\n//             fontWeight: 600, \r\n//             color: '#172B4D',\r\n//             marginBottom: '4px'\r\n//           }}>\r\n//             Projects\r\n//           </h1>\r\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\r\n//             Manage your team's projects and settings\r\n//           </p>\r\n//         </div>\r\n\r\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\r\n//           {/* Create Project Form */}\r\n//           <div style={{ \r\n//             background: '#fff', \r\n//             padding: '1.5rem', \r\n//             borderRadius: '8px', \r\n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\r\n//             border: '1px solid #DFE1E6',\r\n//             height: 'fit-content',\r\n//             position: 'sticky',\r\n//             top: '2rem'\r\n//           }}>\r\n//             <h2 style={{ \r\n//               marginBottom: '1.5rem', \r\n//               fontSize: '16px', \r\n//               fontWeight: 600,\r\n//               color: '#172B4D',\r\n//               display: 'flex',\r\n//               alignItems: 'center',\r\n//               gap: '8px'\r\n//             }}>\r\n//               <FiPlus size={18} /> Create New Project\r\n//             </h2>\r\n            \r\n//             <InputField \r\n//               label=\"Project Name\" \r\n//               value={name} \r\n//               onChange={e => setName(e.target.value)}\r\n//               icon={FiLayers}\r\n//               placeholder=\"Enter project name\"\r\n//             />\r\n            \r\n//             <InputField \r\n//               label=\"Project Key\" \r\n//               value={key} \r\n//               onChange={e => setKey(e.target.value.toUpperCase())} // Fixed: auto-uppercase on change\r\n//               icon={FiKey}\r\n//               placeholder=\"PRJ\"\r\n//               maxLength={10}\r\n//             />\r\n            \r\n//             <InputField \r\n//               label=\"Leads (comma separated)\" \r\n//               value={leads.join(',')} \r\n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()).filter(l => l))}\r\n//               icon={FiUsers}\r\n//               placeholder=\"John Doe, Jane Smith\"\r\n//             />\r\n            \r\n//             <div style={{ marginBottom: '1.5rem' }}>\r\n//               <label style={{ \r\n//                 display: 'block', \r\n//                 marginBottom: '4px', \r\n//                 fontSize: '14px', \r\n//                 fontWeight: 600, \r\n//                 color: '#172B4D' \r\n//               }}>\r\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\r\n//                 Type\r\n//               </label>\r\n//               <select \r\n//                 value={type} \r\n//                 onChange={e => setType(e.target.value)} \r\n//                 style={{ \r\n//                   width: '100%', \r\n//                   padding: '10px 12px', \r\n//                   borderRadius: '4px', \r\n//                   border: '1px solid #DFE1E6',\r\n//                   fontSize: '14px',\r\n//                   background: '#fff'\r\n//                 }}\r\n//               >\r\n//                 <option value=\"Software\">💻 Software</option>\r\n//                 <option value=\"Business\">📊 Business</option>\r\n//                 <option value=\"Service\">🔧 Service</option>\r\n//               </select>\r\n//             </div>\r\n            \r\n//             <button \r\n//               onClick={createProject} \r\n//               style={{ \r\n//                 display: 'flex', \r\n//                 alignItems: 'center', \r\n//                 justifyContent: 'center',\r\n//                 gap: '8px', \r\n//                 background: '#0052CC', \r\n//                 color: '#fff', \r\n//                 border: 'none', \r\n//                 padding: '12px 20px', \r\n//                 borderRadius: '4px', \r\n//                 cursor: 'pointer',\r\n//                 fontSize: '14px',\r\n//                 fontWeight: 600,\r\n//                 width: '100%',\r\n//                 transition: 'all 0.2s'\r\n//               }}\r\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\r\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\r\n//             >\r\n//               <FiPlus size={16} /> Create Project\r\n//             </button>\r\n//           </div>\r\n\r\n//           {/* Project Grid */}\r\n//           <div>\r\n//             <div style={{ \r\n//               display: 'flex', \r\n//               justifyContent: 'space-between', \r\n//               alignItems: 'center',\r\n//               marginBottom: '1rem'\r\n//             }}>\r\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\r\n//                 All Projects ({projects.length})\r\n//               </h3>\r\n//             </div>\r\n            \r\n//             <div style={{ \r\n//               display: 'grid', \r\n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \r\n//               gap: '1rem' \r\n//             }}>\r\n//               {projects.map(p => (\r\n//                 <div key={p.id} style={{\r\n//                   display: 'flex', \r\n//                   flexDirection: 'column', \r\n//                   padding: '1.25rem',\r\n//                   borderRadius: '8px',\r\n//                   background: '#fff',\r\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \r\n//                   border: '1px solid #DFE1E6',\r\n//                   transition: 'all 0.2s ease',\r\n//                   position: 'relative',\r\n//                   overflow: 'hidden'\r\n//                 }}\r\n//                 onMouseEnter={e => {\r\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\r\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\r\n//                 }}\r\n//                 onMouseLeave={e => {\r\n//                   e.currentTarget.style.transform = 'translateY(0)';\r\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\r\n//                 }}\r\n//                 >\r\n//                   {/* Project Key Badge */}\r\n//                   <div style={{ \r\n//                     position: 'absolute',\r\n//                     top: '0',\r\n//                     right: '0',\r\n//                     background: '#DFE1E6',\r\n//                     color: '#172B4D',\r\n//                     padding: '4px 8px',\r\n//                     fontSize: '12px',\r\n//                     fontWeight: 600,\r\n//                     borderBottomLeftRadius: '4px'\r\n//                   }}>\r\n//                     {p.key}\r\n//                   </div>\r\n\r\n//                   {/* Project Header */}\r\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\r\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\r\n//                       {editingId === p.id ? (\r\n//                         <input \r\n//                           value={editName} \r\n//                           onChange={e => setEditName(e.target.value)}\r\n//                           style={{ \r\n//                             width: '100%', \r\n//                             padding: '6px 8px', \r\n//                             border: '1px solid #DFE1E6',\r\n//                             borderRadius: '4px',\r\n//                             fontSize: '14px'\r\n//                           }}\r\n//                         />\r\n//                       ) : (\r\n//                         <h4 style={{ \r\n//                           fontWeight: 600, \r\n//                           fontSize: '16px', \r\n//                           color: '#172B4D',\r\n//                           margin: 0,\r\n//                           lineHeight: 1.3\r\n//                         }}>\r\n//                           {p.name}\r\n//                         </h4>\r\n//                       )}\r\n//                     </div>\r\n                    \r\n//                     <div style={{ display: 'flex', gap: '4px' }}>\r\n//                       {editingId === p.id ? (\r\n//                         <>\r\n//                           <button \r\n//                             onClick={() => saveEdit(p.id)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: '#36B37E',\r\n//                               color: 'white',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer'\r\n//                             }}\r\n//                           >\r\n//                             <FiCheck size={14} />\r\n//                           </button>\r\n//                           <button \r\n//                             onClick={cancelEdit}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: '#FF5630',\r\n//                               color: 'white',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer'\r\n//                             }}\r\n//                           >\r\n//                             <FiX size={14} />\r\n//                           </button>\r\n//                         </>\r\n//                       ) : (\r\n//                         <>\r\n//                           <button \r\n//                             onClick={() => startEdit(p)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: 'transparent',\r\n//                               color: '#6B778C',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer',\r\n//                               transition: 'all 0.2s'\r\n//                             }}\r\n//                             onMouseEnter={(e) => {\r\n//                               e.target.style.background = '#EBECF0';\r\n//                               e.target.style.color = '#172B4D';\r\n//                             }}\r\n//                             onMouseLeave={(e) => {\r\n//                               e.target.style.background = 'transparent';\r\n//                               e.target.style.color = '#6B778C';\r\n//                             }}\r\n//                           >\r\n//                             <FiEdit2 size={14} />\r\n//                           </button>\r\n//                           <button \r\n//                             onClick={() => removeProject(p.id)}\r\n//                             style={{\r\n//                               padding: '6px',\r\n//                               border: 'none',\r\n//                               background: 'transparent',\r\n//                               color: '#6B778C',\r\n//                               borderRadius: '4px',\r\n//                               cursor: 'pointer',\r\n//                               transition: 'all 0.2s'\r\n//                             }}\r\n//                             onMouseEnter={(e) => {\r\n//                               e.target.style.background = '#FFEBE6';\r\n//                               e.target.style.color = '#DE350B';\r\n//                             }}\r\n//                             onMouseLeave={(e) => {\r\n//                               e.target.style.background = 'transparent';\r\n//                               e.target.style.color = '#6B778C';\r\n//                             }}\r\n//                           >\r\n//                             <FiTrash2 size={14} />\r\n//                           </button>\r\n//                         </>\r\n//                       )}\r\n//                     </div>\r\n//                   </div>\r\n\r\n//                   {/* Project Type */}\r\n//                   <div style={{ marginBottom: '1rem' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <select \r\n//                         value={editType} \r\n//                         onChange={e => setEditType(e.target.value)}\r\n//                         style={{ \r\n//                           padding: '6px 8px', \r\n//                           border: '1px solid #DFE1E6',\r\n//                           borderRadius: '4px',\r\n//                           fontSize: '14px'\r\n//                         }}\r\n//                       >\r\n//                         <option value=\"Software\">Software</option>\r\n//                         <option value=\"Business\">Business</option>\r\n//                         <option value=\"Service\">Service</option>\r\n//                       </select>\r\n//                     ) : (\r\n//                       <span style={{ \r\n//                         background: typeBadgeStyle(p.type).bg, \r\n//                         color: typeBadgeStyle(p.type).color, \r\n//                         padding: '4px 8px', \r\n//                         borderRadius: '4px', \r\n//                         fontSize: '12px', \r\n//                         fontWeight: 600,\r\n//                         display: 'inline-flex',\r\n//                         alignItems: 'center',\r\n//                         gap: '4px'\r\n//                       }}>\r\n//                         {typeBadgeStyle(p.type).icon} {p.type}\r\n//                       </span>\r\n//                     )}\r\n//                   </div>\r\n\r\n//                   {/* Project Leads */}\r\n//                   <div style={{ marginBottom: '1rem' }}>\r\n//                     {editingId === p.id ? (\r\n//                       <input \r\n//                         value={editLeads.join(',')} \r\n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()).filter(l => l))}\r\n//                         style={{ \r\n//                           width: '100%', \r\n//                           padding: '6px 8px', \r\n//                           border: '1px solid #DFE1E6',\r\n//                           borderRadius: '4px',\r\n//                           fontSize: '14px'\r\n//                         }}\r\n//                         placeholder=\"Enter leads separated by commas\"\r\n//                       />\r\n//                     ) : renderLeads(p.leads)}\r\n//                   </div>\r\n\r\n//                   {/* Project Key in Edit Mode */}\r\n//                   {editingId === p.id && (\r\n//                     <div style={{ marginBottom: '1rem' }}>\r\n//                       <label style={{ fontSize: '12px', fontWeight: 600, color: '#172B4D', display: 'block', marginBottom: '4px' }}>\r\n//                         Project Key\r\n//                       </label>\r\n//                       <input \r\n//                         value={editKey} \r\n//                         onChange={e => setEditKey(e.target.value.toUpperCase())}\r\n//                         style={{ \r\n//                           width: '100%', \r\n//                           padding: '6px 8px', \r\n//                           border: '1px solid #DFE1E6',\r\n//                           borderRadius: '4px',\r\n//                           fontSize: '14px'\r\n//                         }}\r\n//                         maxLength={10}\r\n//                       />\r\n//                     </div>\r\n//                   )}\r\n\r\n//                   {/* Last Updated */}\r\n//                   <div style={{ \r\n//                     display: 'flex', \r\n//                     alignItems: 'center', \r\n//                     gap: '6px',\r\n//                     fontSize: '12px', \r\n//                     color: '#6B778C',\r\n//                     marginTop: 'auto',\r\n//                     paddingTop: '0.75rem',\r\n//                     borderTop: '1px solid #F4F5F7'\r\n//                   }}>\r\n//                     <FiCalendar size={12} />\r\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\r\n//                   </div>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\r\nimport { Link } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown, FiUsers, FiCalendar } from 'react-icons/fi';\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\n// Reusable input component\r\nfunction InputField({ label, value, onChange, icon: Icon, placeholder, maxLength }) {\r\n  return (\r\n    <div style={{ marginBottom: '1rem' }}>\r\n      <label style={{ display: 'block', fontSize: '13px', fontWeight: 600, marginBottom: '0.25rem', color: '#172B4D' }}>\r\n        {label}\r\n      </label>\r\n      <div style={{ display: 'flex', alignItems: 'center', border: '1px solid #DFE1E6', borderRadius: '4px', background: '#fff' }}>\r\n        {Icon && <Icon style={{ marginLeft: '8px', color: '#6B778C' }} />}\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder={placeholder}\r\n          maxLength={maxLength}\r\n          style={{\r\n            flex: 1,\r\n            padding: '8px',\r\n            border: 'none',\r\n            outline: 'none',\r\n            fontSize: '14px',\r\n            borderRadius: '4px',\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ProjectList() {\r\n  const [projects, setProjects] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [key, setKey] = useState('');\r\n  const [type, setType] = useState('Software');\r\n  const [leadsInput, setLeadsInput] = useState(''); // store as plain text\r\n  const [expanded, setExpanded] = useState({});\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editName, setEditName] = useState('');\r\n  const [editKey, setEditKey] = useState('');\r\n  const [editType, setEditType] = useState('');\r\n  const [editLeadsInput, setEditLeadsInput] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadProjects();\r\n  }, []);\r\n\r\n  const loadProjects = async () => {\r\n    const data = await listProjects();\r\n    setProjects(data);\r\n  };\r\n\r\n  const createProject = async () => {\r\n    if (!name.trim()) return;\r\n    const now = new Date().toISOString();\r\n    const p = {\r\n      id: uuidv4(),\r\n      key: key.toUpperCase() || 'PRJ',\r\n      name,\r\n      type,\r\n      leads: leadsInput\r\n        ? leadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n        : ['Unassigned'],\r\n      description: '',\r\n      lastUpdated: now,\r\n      createdAt: now,\r\n    };\r\n    await addProject(p);\r\n    setName('');\r\n    setKey('');\r\n    setLeadsInput('');\r\n    setType('Software');\r\n    loadProjects();\r\n  };\r\n\r\n  const removeProject = async (id) => {\r\n    await deleteProject(id);\r\n    loadProjects();\r\n  };\r\n\r\n  const startEdit = (p) => {\r\n    setEditingId(p.id);\r\n    setEditName(p.name);\r\n    setEditKey(p.key);\r\n    setEditType(p.type);\r\n    setEditLeadsInput(p.leads.join(', '));\r\n  };\r\n\r\n  const saveEdit = async (id) => {\r\n    const updated = {\r\n      ...projects.find(p => p.id === id),\r\n      name: editName,\r\n      key: editKey,\r\n      type: editType,\r\n      leads: editLeadsInput\r\n        ? editLeadsInput.split(',').map(l => l.trim()).filter(l => l)\r\n        : ['Unassigned'],\r\n      lastUpdated: new Date().toISOString(),\r\n    };\r\n    await updateProject(id, updated);\r\n    setEditingId(null);\r\n    loadProjects();\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', height: '100vh' }}>\r\n      {/* Sidebar create project form */}\r\n      <div style={{ width: '320px', borderRight: '1px solid #DFE1E6', padding: '1rem', background: '#F4F5F7' }}>\r\n        <h2 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '1rem' }}>Create Project</h2>\r\n\r\n        <InputField label=\"Project Name\" value={name} onChange={e => setName(e.target.value)} placeholder=\"Enter project name\" />\r\n        <InputField label=\"Project Key\" value={key} onChange={e => setKey(e.target.value)} placeholder=\"e.g. PROJ\" maxLength={10} />\r\n        <InputField label=\"Project Type\" value={type} onChange={e => setType(e.target.value)} placeholder=\"Software, Business...\" />\r\n        <InputField label=\"Leads (comma separated)\" value={leadsInput} onChange={e => setLeadsInput(e.target.value)} placeholder=\"John Doe, Jane Smith\" icon={FiUsers} />\r\n\r\n        <button\r\n          onClick={createProject}\r\n          style={{\r\n            width: '100%',\r\n            background: '#0052CC',\r\n            color: 'white',\r\n            padding: '8px',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            fontSize: '14px',\r\n          }}\r\n        >\r\n          <FiPlus style={{ marginRight: '6px' }} /> Create Project\r\n        </button>\r\n      </div>\r\n\r\n      {/* Main project list */}\r\n      <div style={{ flex: 1, padding: '2rem', overflowY: 'auto' }}>\r\n        <h2 style={{ fontSize: '20px', fontWeight: 'bold', marginBottom: '1.5rem' }}>Projects</h2>\r\n\r\n        <div style={{ display: 'grid', gap: '1rem', gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))' }}>\r\n          {projects.map(p => (\r\n            <div\r\n              key={p.id}\r\n              style={{\r\n                background: '#fff',\r\n                border: '1px solid #DFE1E6',\r\n                borderRadius: '8px',\r\n                padding: '1rem',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}\r\n            >\r\n              {editingId === p.id ? (\r\n                <>\r\n                  <InputField label=\"Name\" value={editName} onChange={e => setEditName(e.target.value)} />\r\n                  <InputField label=\"Key\" value={editKey} onChange={e => setEditKey(e.target.value)} />\r\n                  <InputField label=\"Type\" value={editType} onChange={e => setEditType(e.target.value)} />\r\n                  <InputField label=\"Leads\" value={editLeadsInput} onChange={e => setEditLeadsInput(e.target.value)} />\r\n                  <div style={{ display: 'flex', gap: '0.5rem', marginTop: '0.5rem' }}>\r\n                    <button onClick={() => saveEdit(p.id)} style={{ background: '#36B37E', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n                      <FiCheck />\r\n                    </button>\r\n                    <button onClick={() => setEditingId(null)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n                      <FiX />\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <h3 style={{ fontSize: '16px', fontWeight: 'bold', marginBottom: '0.5rem' }}>\r\n                    <Link to={`/projects/${p.id}`} style={{ color: '#0052CC', textDecoration: 'none' }}>\r\n                      {p.name}\r\n                    </Link>\r\n                  </h3>\r\n                  <p style={{ fontSize: '13px', color: '#6B778C', marginBottom: '0.5rem' }}>{p.type} Project</p>\r\n                  <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Key: {p.key}</p>\r\n                  <p style={{ fontSize: '13px', marginBottom: '0.5rem' }}>Leads: {p.leads.join(', ')}</p>\r\n\r\n                  <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '1rem' }}>\r\n                    <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n                      <button onClick={() => startEdit(p)} style={{ background: '#FFAB00', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n                        <FiEdit2 />\r\n                      </button>\r\n                      <button onClick={() => removeProject(p.id)} style={{ background: '#FF5630', color: '#fff', border: 'none', padding: '6px 10px', borderRadius: '4px', cursor: 'pointer' }}>\r\n                        <FiTrash2 />\r\n                      </button>\r\n                    </div>\r\n                    <button onClick={() => setExpanded({ ...expanded, [p.id]: !expanded[p.id] })} style={{ background: 'transparent', border: 'none', cursor: 'pointer', color: '#0052CC' }}>\r\n                      {expanded[p.id] ? <FiChevronUp /> : <FiChevronDown />}\r\n                    </button>\r\n                  </div>\r\n\r\n                  {expanded[p.id] && (\r\n                    <div style={{ marginTop: '0.5rem', fontSize: '13px', color: '#172B4D' }}>\r\n                      <p>{p.description || 'No description provided.'}</p>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n\r\n              {/* Metadata */}\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  marginTop: 'auto',\r\n                  marginTop: '1rem',\r\n                  paddingTop: '0.75rem',\r\n                  borderTop: '1px solid #EBECF0',\r\n                  fontSize: '12px',\r\n                  color: '#6B778C',\r\n                }}\r\n              >\r\n                <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\r\n                  <FiCalendar size={12} />\r\n                  {p.createdAt ? (\r\n                    <>Created {formatDistanceToNow(new Date(p.createdAt), { addSuffix: true })}</>\r\n                  ) : (\r\n                    <>Created just now</>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  {p.lastUpdated ? (\r\n                    <>Updated {formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true })}</>\r\n                  ) : (\r\n                    <>Updated just now</>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n          {projects.length === 0 && (\r\n            <div\r\n              style={{\r\n                gridColumn: '1 / -1',\r\n                textAlign: 'center',\r\n                padding: '3rem 2rem',\r\n                background: '#fff',\r\n                borderRadius: '8px',\r\n                border: '1px dashed #DFE1E6',\r\n                color: '#6B778C',\r\n              }}\r\n            >\r\n              <p style={{ marginBottom: '1rem' }}>No projects yet.</p>\r\n              <p style={{ fontSize: '14px' }}>Create your first project using the form on the left.</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}