{"ast":null,"code":"\n\n// full code   ok \n\n// import React, { useEffect, useRef, useState } from \"react\";\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\n// import gantt from \"dhtmlx-gantt\";\n// import { useProjects } from \"../../context/ProjectContext\";\n\n// const Timeline = () => {\n//   const ganttContainer = useRef(null);\n//   const { projects, addProject } = useProjects();\n//   const [newProjectText, setNewProjectText] = useState(\"\");\n//   const [hover, setHover] = useState(false);\n//   const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n//   const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n//   const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\n\n//   useEffect(() => {\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n//     gantt.config.readonly = false;\n//     gantt.config.drag_move = true;\n//     gantt.config.drag_resize = true;\n//     gantt.config.drag_links = true;\n//     gantt.config.auto_scheduling = true;\n//     gantt.config.show_errors = false;\n//     gantt.config.highlight_critical_path = true;\n\n//     // Responsive Gantt configuration\n//     gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\n//     gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\n//     gantt.config.subscales = windowWidth > 768 ? [\n//       { unit: \"week\", step: 1, date: \"%j, %D\" }\n//     ] : [\n//       { unit: \"day\", step: 1, date: \"%d\" }\n//     ];\n\n//     gantt.init(ganttContainer.current);\n\n//     gantt.clearAll();\n//     gantt.parse({\n//       data: projects,\n//       links: [\n//         { id: 1, source: 1, target: 2, type: \"0\" },\n//         { id: 2, source: 2, target: 3, type: \"0\" },\n//         { id: 3, source: 3, target: 4, type: \"0\" },\n//         { id: 4, source: 4, target: 5, type: \"0\" },\n//       ],\n//     });\n\n//     // Re-render Gantt on window resize\n//     gantt.render();\n//   }, [projects, windowWidth]);\n\n//   useEffect(() => {\n//     const handleResize = () => {\n//       const width = window.innerWidth;\n//       setWindowWidth(width);\n//       setIsMobile(width <= 768);\n//       setIsSmallMobile(width <= 480);\n//     };\n\n//     window.addEventListener(\"resize\", handleResize);\n\n//     // Cleanup function\n//     return () => window.removeEventListener(\"resize\", handleResize);\n//   }, []);\n\n//   const handleCreateProject = () => {\n//     if (!newProjectText.trim()) return;\n//     const newProject = {\n//       id: Date.now(),\n//       text: newProjectText,\n//       start_date: \"2025-12-10 00:00\",\n//       duration: 10,\n//       progress: 0,\n//     };\n//     addProject(newProject);\n//     setNewProjectText(\"\");\n//   };\n\n//   const handleKeyPress = (e) => {\n//     if (e.key === \"Enter\") {\n//       handleCreateProject();\n//     }\n//   };\n\n//   // Responsive styles\n//   const containerStyle = {\n//     margin: isMobile ? \"15px 10px\" : \"30px auto\",\n//     maxWidth: \"1200px\",\n//     borderRadius: \"16px\",\n//     boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\n//     overflow: \"hidden\",\n//     background: \"#D0F0F4\",\n//     fontFamily: \"Segoe UI, sans-serif\",\n//     transform: \"perspective(1000px)\",\n//     transition: \"transform 0.3s ease-in-out\",\n//   };\n\n//   const headerStyle = {\n//     padding: isMobile ? \"18px 15px\" : \"25px\",\n//     background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\n//     color: \"#fff\",\n//     fontSize: isMobile ? \"22px\" : \"28px\",\n//     fontWeight: \"700\",\n//     textAlign: \"center\",\n//     letterSpacing: \"0.8px\",\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n//     textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\",\n//   };\n\n//   const ganttStyle = {\n//     height: isMobile ? (isSmallMobile ? \"350px\" : \"400px\") : \"600px\",\n//     width: \"100%\",\n//     borderTop: \"1px solid #ccc\",\n//     overflow: \"auto\",\n//   };\n\n//   const inputContainerStyle = {\n//     padding: isMobile ? \"15px\" : \"20px\",\n//     display: \"flex\",\n//     gap: \"12px\",\n//     flexDirection: isSmallMobile ? \"column\" : \"row\",\n//     alignItems: isSmallMobile ? \"stretch\" : \"center\",\n//   };\n\n//   const inputStyle = {\n//     flex: \"1\",\n//     padding: isMobile ? \"10px 14px\" : \"12px 16px\",\n//     fontSize: isMobile ? \"14px\" : \"16px\",\n//     borderRadius: \"8px\",\n//     border: \"1px solid #ccc\",\n//     boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\n//     transition: \"all 0.3s ease\",\n//     outline: \"none\",\n//     minWidth: \"0\",\n//   };\n\n//   const buttonStyle = {\n//     padding: isMobile ? \"10px 16px\" : \"12px 20px\",\n//     fontSize: isMobile ? \"14px\" : \"16px\",\n//     borderRadius: \"8px\",\n//     background: \"#8c6deaff\",\n//     color: \"#fff\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n//     transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\n//     whiteSpace: \"nowrap\",\n//     minWidth: isSmallMobile ? \"100%\" : \"auto\",\n//   };\n\n//   const buttonHoverStyle = {\n//     transform: \"scale(1.05)\",\n//     boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\",\n//   };\n\n//   return (\n//     <div style={containerStyle}>\n//       <div style={headerStyle}>\n//         {isMobile ? \"ðŸ“… Timeline\" : \"ðŸ“… Project Timeline\"}\n//       </div>\n\n//       <div style={inputContainerStyle}>\n//         <input\n//           type=\"text\"\n//           value={newProjectText}\n//           onChange={(e) => setNewProjectText(e.target.value)}\n//           onKeyPress={handleKeyPress}\n//           placeholder={isMobile ? \"New project...\" : \"Enter new project name...\"}\n//           style={inputStyle}\n//           aria-label=\"New project name\"\n//         />\n//         <button\n//           onClick={handleCreateProject}\n//           style={hover ? { ...buttonStyle, ...buttonHoverStyle } : buttonStyle}\n//           onMouseEnter={() => setHover(true)}\n//           onMouseLeave={() => setHover(false)}\n//           aria-label=\"Add new project\"\n//         >\n//           {isMobile ? \"âž• Add\" : \"âž• Add Project\"}\n//         </button>\n//       </div>\n\n//       <div \n//         ref={ganttContainer} \n//         style={ganttStyle}\n//         className=\"gantt-container\"\n//       ></div>\n//     </div>\n//   );\n// };\n\n// export default Timeline;\n\n// for date and time column","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/timeline/Timeline.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// full code   ok \r\n\r\n// import React, { useEffect, useRef, useState } from \"react\";\r\n// import \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\n// import gantt from \"dhtmlx-gantt\";\r\n// import { useProjects } from \"../../context/ProjectContext\";\r\n\r\n// const Timeline = () => {\r\n//   const ganttContainer = useRef(null);\r\n//   const { projects, addProject } = useProjects();\r\n//   const [newProjectText, setNewProjectText] = useState(\"\");\r\n//   const [hover, setHover] = useState(false);\r\n//   const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n//   const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n//   const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\r\n\r\n//   useEffect(() => {\r\n//     gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n//     gantt.config.readonly = false;\r\n//     gantt.config.drag_move = true;\r\n//     gantt.config.drag_resize = true;\r\n//     gantt.config.drag_links = true;\r\n//     gantt.config.auto_scheduling = true;\r\n//     gantt.config.show_errors = false;\r\n//     gantt.config.highlight_critical_path = true;\r\n\r\n//     // Responsive Gantt configuration\r\n//     gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\r\n//     gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\r\n//     gantt.config.subscales = windowWidth > 768 ? [\r\n//       { unit: \"week\", step: 1, date: \"%j, %D\" }\r\n//     ] : [\r\n//       { unit: \"day\", step: 1, date: \"%d\" }\r\n//     ];\r\n\r\n//     gantt.init(ganttContainer.current);\r\n\r\n//     gantt.clearAll();\r\n//     gantt.parse({\r\n//       data: projects,\r\n//       links: [\r\n//         { id: 1, source: 1, target: 2, type: \"0\" },\r\n//         { id: 2, source: 2, target: 3, type: \"0\" },\r\n//         { id: 3, source: 3, target: 4, type: \"0\" },\r\n//         { id: 4, source: 4, target: 5, type: \"0\" },\r\n//       ],\r\n//     });\r\n\r\n//     // Re-render Gantt on window resize\r\n//     gantt.render();\r\n//   }, [projects, windowWidth]);\r\n\r\n//   useEffect(() => {\r\n//     const handleResize = () => {\r\n//       const width = window.innerWidth;\r\n//       setWindowWidth(width);\r\n//       setIsMobile(width <= 768);\r\n//       setIsSmallMobile(width <= 480);\r\n//     };\r\n\r\n//     window.addEventListener(\"resize\", handleResize);\r\n    \r\n//     // Cleanup function\r\n//     return () => window.removeEventListener(\"resize\", handleResize);\r\n//   }, []);\r\n\r\n//   const handleCreateProject = () => {\r\n//     if (!newProjectText.trim()) return;\r\n//     const newProject = {\r\n//       id: Date.now(),\r\n//       text: newProjectText,\r\n//       start_date: \"2025-12-10 00:00\",\r\n//       duration: 10,\r\n//       progress: 0,\r\n//     };\r\n//     addProject(newProject);\r\n//     setNewProjectText(\"\");\r\n//   };\r\n\r\n//   const handleKeyPress = (e) => {\r\n//     if (e.key === \"Enter\") {\r\n//       handleCreateProject();\r\n//     }\r\n//   };\r\n\r\n//   // Responsive styles\r\n//   const containerStyle = {\r\n//     margin: isMobile ? \"15px 10px\" : \"30px auto\",\r\n//     maxWidth: \"1200px\",\r\n//     borderRadius: \"16px\",\r\n//     boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\r\n//     overflow: \"hidden\",\r\n//     background: \"#D0F0F4\",\r\n//     fontFamily: \"Segoe UI, sans-serif\",\r\n//     transform: \"perspective(1000px)\",\r\n//     transition: \"transform 0.3s ease-in-out\",\r\n//   };\r\n\r\n//   const headerStyle = {\r\n//     padding: isMobile ? \"18px 15px\" : \"25px\",\r\n//     background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\r\n//     color: \"#fff\",\r\n//     fontSize: isMobile ? \"22px\" : \"28px\",\r\n//     fontWeight: \"700\",\r\n//     textAlign: \"center\",\r\n//     letterSpacing: \"0.8px\",\r\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\r\n//     textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\",\r\n//   };\r\n\r\n//   const ganttStyle = {\r\n//     height: isMobile ? (isSmallMobile ? \"350px\" : \"400px\") : \"600px\",\r\n//     width: \"100%\",\r\n//     borderTop: \"1px solid #ccc\",\r\n//     overflow: \"auto\",\r\n//   };\r\n\r\n//   const inputContainerStyle = {\r\n//     padding: isMobile ? \"15px\" : \"20px\",\r\n//     display: \"flex\",\r\n//     gap: \"12px\",\r\n//     flexDirection: isSmallMobile ? \"column\" : \"row\",\r\n//     alignItems: isSmallMobile ? \"stretch\" : \"center\",\r\n//   };\r\n\r\n//   const inputStyle = {\r\n//     flex: \"1\",\r\n//     padding: isMobile ? \"10px 14px\" : \"12px 16px\",\r\n//     fontSize: isMobile ? \"14px\" : \"16px\",\r\n//     borderRadius: \"8px\",\r\n//     border: \"1px solid #ccc\",\r\n//     boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\r\n//     transition: \"all 0.3s ease\",\r\n//     outline: \"none\",\r\n//     minWidth: \"0\",\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: isMobile ? \"10px 16px\" : \"12px 20px\",\r\n//     fontSize: isMobile ? \"14px\" : \"16px\",\r\n//     borderRadius: \"8px\",\r\n//     background: \"#8c6deaff\",\r\n//     color: \"#fff\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\r\n//     transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\r\n//     whiteSpace: \"nowrap\",\r\n//     minWidth: isSmallMobile ? \"100%\" : \"auto\",\r\n//   };\r\n\r\n//   const buttonHoverStyle = {\r\n//     transform: \"scale(1.05)\",\r\n//     boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={containerStyle}>\r\n//       <div style={headerStyle}>\r\n//         {isMobile ? \"ðŸ“… Timeline\" : \"ðŸ“… Project Timeline\"}\r\n//       </div>\r\n      \r\n//       <div style={inputContainerStyle}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={newProjectText}\r\n//           onChange={(e) => setNewProjectText(e.target.value)}\r\n//           onKeyPress={handleKeyPress}\r\n//           placeholder={isMobile ? \"New project...\" : \"Enter new project name...\"}\r\n//           style={inputStyle}\r\n//           aria-label=\"New project name\"\r\n//         />\r\n//         <button\r\n//           onClick={handleCreateProject}\r\n//           style={hover ? { ...buttonStyle, ...buttonHoverStyle } : buttonStyle}\r\n//           onMouseEnter={() => setHover(true)}\r\n//           onMouseLeave={() => setHover(false)}\r\n//           aria-label=\"Add new project\"\r\n//         >\r\n//           {isMobile ? \"âž• Add\" : \"âž• Add Project\"}\r\n//         </button>\r\n//       </div>\r\n      \r\n//       <div \r\n//         ref={ganttContainer} \r\n//         style={ganttStyle}\r\n//         className=\"gantt-container\"\r\n//       ></div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Timeline;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for date and time column "],"mappings":";;AAgcA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}