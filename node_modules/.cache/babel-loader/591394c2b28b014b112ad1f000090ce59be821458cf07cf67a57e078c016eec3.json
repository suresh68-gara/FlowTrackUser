{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\boards\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\n//  // for epic delete button \n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const STATUSES = [\n//   'backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'\n// ];\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'u2', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'u4', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const mockEpics = [\n//   { id: 'p1', name: 'Frontend' },\n//   { id: 'p2', name: 'Middleware' }\n// ];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n\n// const listEpics = async () => {\n//   await simulateApiDelay();\n//   return mockEpics;\n// };\n\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = {\n//     id: 'p' + (mockEpics.length + 1),\n//     name: epicName\n//   };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) {\n//     mockEpics.splice(epicIndex, 1);\n//   }\n\n//   // Also delete all issues associated with this epic\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => {\n//     if (issue.epic === epicId) {\n//       issueIndices.push(index);\n//     }\n//   });\n\n//   // Remove issues from highest index to lowest to avoid index issues\n//   issueIndices.sort((a, b) => b - a).forEach(index => {\n//     mockIssues.splice(index, 1);\n//   });\n// };\n\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n\n// const createIssueAPI = async (issue) => {\n//   await simulateApiDelay();\n//   mockIssues.push(issue);\n// };\n\n// const deleteIssueAPI = async (issueId) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === issueId);\n//   if (idx > -1) mockIssues.splice(idx, 1);\n// };\n\n// const updateIssueAPI = async (updatedIssue) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n//   if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue };\n// };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([\n//           listIssues(projectId),\n//           listEpics()\n//         ]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {};\n//         const initialTitles = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//       } catch (err) {\n//         console.error('Failed to load data:', err);\n//       }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const onTitleChange = (id, value) => setCustomTitles(prev => ({ ...prev, [id]: value }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) {\n//       console.error('Error moving issue:', err);\n//     }\n//   };\n\n//   const onDragOver = e => e.preventDefault();\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n\n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error('Error creating issue:', err); }\n//   };\n\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) { alert('Epic name is required'); return; }\n//     try {\n//       const newEpic = await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n\n//       // Update open swimlanes and custom titles for the new epic\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//     } catch (err) { console.error('Error creating epic:', err); }\n//   };\n\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) { alert('Please select an epic to delete'); return; }\n\n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n\n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//     } catch (err) { console.error('Error deleting epic:', err); }\n//   };\n\n//   const handleDelete = async () => {\n//     if (!selectedIssue) return;\n//     await deleteIssueAPI(selectedIssue.id);\n//     const refreshed = await listIssues(projectId);\n//     setIssues(refreshed);\n//     setSelectedIssue(null);\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic Management Buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>\n//             + Create Epic\n//           </button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>\n//             ðŸ—‘ Delete Epic\n//           </button>\n//         </div>\n\n//         {/* Create Epic Modal */}\n//         {showCreateEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowCreateEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Create New Epic</h3>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter epic name (e.g., Frontend, Backend, Database)\"\n//                   value={newEpicName}\n//                   onChange={(e) => setNewEpicName(e.target.value)}\n//                   className=\"epic-modal-input\"\n//                   autoFocus\n//                 />\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowCreateEpic(false); setNewEpicName(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-create\" onClick={handleCreateEpic}>\n//                     Create Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Delete Epic Modal */}\n//         {showDeleteEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowDeleteEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Delete Epic</h3>\n//                 <p className=\"delete-warning\">Select an epic to delete. This will also delete all issues in the epic.</p>\n//                 <select \n//                   value={epicToDelete} \n//                   onChange={(e) => setEpicToDelete(e.target.value)}\n//                   className=\"epic-modal-select\"\n//                 >\n//                   <option value=\"\">Select an epic...</option>\n//                   {epics.map(epic => (\n//                     <option key={epic.id} value={epic.id}>\n//                       {epic.name} ({swimlanes.find(s => s.id === epic.id)?.issues.length || 0} issues)\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowDeleteEpic(false); setEpicToDelete(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteEpic} disabled={!epicToDelete}>\n//                     Delete Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>\n//                 {isOpen ? 'â–¼' : 'â–¶'}\n//               </button>\n//               <span className=\"swimlane-icon\">âš¡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => onTitleChange(lane.id, e.target.value)} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {STATUSES.map(status => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>âœ”</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>âœ–</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => (\n//                         <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                           <div className=\"card-top\">\n//                             <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                             <span className=\"card-id\">{issue.id}</span>\n//                           </div>\n//                           <div className=\"card-title\">{issue.title}</div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Issue Modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <h2 style={{ gridColumn: \"span 3\" }}>{editIssue.epicName}\n//               <button className=\"modal-delete-btn\" onClick={handleDelete}>ðŸ—‘</button>\n//             </h2>\n\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n\n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {STATUSES.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\" }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Styles */}\n//       <style>{`\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n\n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n\n//         .epic-management-section {\n//           margin-bottom: 20px;\n//           position: relative;\n//         }\n\n//         .epic-buttons-container {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 12px;\n//           margin-bottom: 10px;\n//         }\n\n//         .create-epic-btn {\n//           background: #1976d2;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n\n//         .create-epic-btn:hover {\n//           background: #1565c0;\n//         }\n\n//         .delete-epic-btn {\n//           background: #d32f2f;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n\n//         .delete-epic-btn:hover {\n//           background: #c62828;\n//         }\n\n//         .delete-epic-btn:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n\n//         .epic-modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n\n//         .epic-modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           max-width: 500px;\n//           width: 100%;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n\n//         .epic-modal-content h3 {\n//           margin: 0 0 16px 0;\n//           font-size: 18px;\n//           font-weight: 600;\n//           color: #172b4d;\n//         }\n\n//         .delete-warning {\n//           color: #d32f2f;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           padding: 8px;\n//           background: #ffebee;\n//           border-radius: 4px;\n//         }\n\n//         .epic-modal-input, .epic-modal-select {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 10px 12px;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           box-sizing: border-box;\n//         }\n\n//         .epic-modal-input:focus, .epic-modal-select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n\n//         .epic-modal-actions {\n//           display: flex;\n//           gap: 12px;\n//           justify-content: flex-end;\n//         }\n\n//         .btn-cancel {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-create {\n//           background: #1976d2;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-delete {\n//           background: #d32f2f;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-delete:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n\n//         .swimlane {\n//           background: white;\n//           border-radius: 8px;\n//           margin-bottom: 16px;\n//           box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n//           overflow: hidden;\n//         }\n\n//         .swimlane-header {\n//           display: flex;\n//           align-items: center;\n//           padding: 12px 16px;\n//           background: #fafbfc;\n//           border-bottom: 1px solid #dfe1e5;\n//           font-weight: 600;\n//           font-size: 14px;\n//           color: #172b4d;\n//         }\n\n//         .swimlane-toggle {\n//           background: none;\n//           border: none;\n//           font-size: 12px;\n//           margin-right: 8px;\n//           cursor: pointer;\n//           color: #5e6c84;\n//         }\n\n//         .swimlane-icon {\n//           margin-right: 8px;\n//           font-size: 16px;\n//           color: #5e6c84;\n//         }\n\n//         .swimlane-title-input {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 4px 8px;\n//           font-size: 14px;\n//           font-weight: 600;\n//           background: white;\n//           margin-right: 8px;\n//           min-width: 150px;\n//           color: #172b4d;\n//         }\n\n//         .swimlane-count {\n//           color: #5e6c84;\n//           font-size: 12px;\n//           font-weight: normal;\n//         }\n\n//         .kanban-row {\n//           display: flex;\n//           padding: 16px;\n//           gap: 12px;\n//           overflow-x: auto;\n//           min-height: 300px;\n//         }\n\n//         .kanban-column {\n//           flex: 0 0 260px;\n//           background: #f5f6f8;\n//           border-radius: 6px;\n//           padding: 12px;\n//           display: flex;\n//           flex-direction: column;\n//           gap: 8px;\n//           border: 1px solid #dfe1e5;\n//         }\n\n//         .col-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 4px;\n//         }\n\n//         .col-title {\n//           font-weight: 600;\n//           font-size: 12px;\n//           color: #5e6c84;\n//           text-transform: uppercase;\n//           letter-spacing: 0.5px;\n//         }\n\n//         .col-count {\n//           background: #dfe1e5;\n//           color: #5e6c84;\n//           border-radius: 10px;\n//           padding: 1px 6px;\n//           font-size: 11px;\n//           font-weight: 600;\n//         }\n\n//         .col-create {\n//           margin-bottom: 4px;\n//         }\n\n//         .create-link {\n//           color: #5e6c84;\n//           cursor: pointer;\n//           font-size: 12px;\n//           padding: 6px;\n//           display: block;\n//           border-radius: 3px;\n//           transition: background-color 0.2s;\n//         }\n\n//         .create-link:hover {\n//           background: #ebecf0;\n//         }\n\n//         .create-card {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//         }\n\n//         .create-input {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 6px;\n//           font-size: 12px;\n//           resize: vertical;\n//           margin-bottom: 6px;\n//           color: #172b4d;\n//         }\n\n//         .create-actions {\n//           display: flex;\n//           gap: 6px;\n//           align-items: center;\n//         }\n\n//         .create-select {\n//           flex: 1;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           font-size: 11px;\n//           color: #172b4d;\n//         }\n\n//         .create-btn {\n//           background: #f5f6f8;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           cursor: pointer;\n//           font-size: 11px;\n//           color: #5e6c84;\n//         }\n\n//         .card-item {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 6px;\n//           padding: 12px;\n//           cursor: pointer;\n//           transition: all 0.2s;\n//           box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .card-item:hover {\n//           box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n//           border-color: #c1c7d0;\n//         }\n\n//         .card-top {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 6px;\n//         }\n\n//         .card-tag {\n//           font-size: 10px;\n//           font-weight: 600;\n//           padding: 2px 4px;\n//           border-radius: 3px;\n//           text-transform: uppercase;\n//         }\n\n//         .card-tag-task {\n//           background: #e3f2fd;\n//           color: #1976d2;\n//         }\n\n//         .card-tag-bug {\n//           background: #ffebee;\n//           color: #d32f2f;\n//         }\n\n//         .card-tag-subtask {\n//           background: #f3e5f5;\n//           color: #7b1fa2;\n//         }\n\n//         .card-id {\n//           color: #5e6c84;\n//           font-size: 10px;\n//           font-family: monospace;\n//         }\n\n//         .card-title {\n//           font-size: 13px;\n//           line-height: 1.3;\n//           color: #172b4d;\n//           font-weight: 500;\n//         }\n\n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n\n//         .modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           display: grid;\n//           grid-template-columns: repeat(3, 1fr);\n//           gap: 16px;\n//           max-width: 900px;\n//           width: 100%;\n//           max-height: 80vh;\n//           overflow-y: auto;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n\n//         .modal h2 {\n//           margin: 0 0 16px 0;\n//           font-size: 20px;\n//           font-weight: 600;\n//           color: #172b4d;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n\n//         .modal-delete-btn {\n//           background: #d32f2f;\n//           border: none;\n//           border-radius: 4px;\n//           padding: 6px 10px;\n//           color: white;\n//           cursor: pointer;\n//           font-size: 12px;\n//         }\n\n//         .modal-field {\n//           display: flex;\n//           flex-direction: column;\n//           gap: 4px;\n//         }\n\n//         .modal-field label {\n//           font-size: 12px;\n//           font-weight: 600;\n//           color: #5e6c84;\n//         }\n\n//         .modal-field input, .modal-field textarea, .modal-field select {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//           font-size: 13px;\n//           background: white;\n//           transition: border-color 0.2s;\n//           color: #172b4d;\n//         }\n\n//         .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n\n//         .modal-field input:disabled {\n//           background: #f5f6f8;\n//           color: #5e6c84;\n//         }\n\n//         .modal-actions {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 8px;\n//           margin-top: 16px;\n//         }\n\n//         .btn-reset {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n\n//         .btn-save {\n//           background: #1976d2;\n//           border: none;\n//           color: white;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const STATUSES = [\n//   'backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'\n// ];\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'u2', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'u4', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const mockEpics = [\n//   { id: 'p1', name: 'Frontend' },\n//   { id: 'p2', name: 'Middleware' }\n// ];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n\n// const listEpics = async () => {\n//   await simulateApiDelay();\n//   return mockEpics;\n// };\n\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = {\n//     id: 'p' + (mockEpics.length + 1),\n//     name: epicName\n//   };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) {\n//     mockEpics.splice(epicIndex, 1);\n//   }\n\n//   // Also delete all issues associated with this epic\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => {\n//     if (issue.epic === epicId) {\n//       issueIndices.push(index);\n//     }\n//   });\n\n//   // Remove issues from highest index to lowest to avoid index issues\n//   issueIndices.sort((a, b) => b - a).forEach(index => {\n//     mockIssues.splice(index, 1);\n//   });\n// };\n\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n\n// const createIssueAPI = async (issue) => {\n//   await simulateApiDelay();\n//   mockIssues.push(issue);\n// };\n\n// const deleteIssueAPI = async (issueId) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === issueId);\n//   if (idx > -1) mockIssues.splice(idx, 1);\n// };\n\n// const updateIssueAPI = async (updatedIssue) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n//   if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue };\n// };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([\n//           listIssues(projectId),\n//           listEpics()\n//         ]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {};\n//         const initialTitles = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//       } catch (err) {\n//         console.error('Failed to load data:', err);\n//       }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const onTitleChange = (id, value) => setCustomTitles(prev => ({ ...prev, [id]: value }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) {\n//       console.error('Error moving issue:', err);\n//     }\n//   };\n\n//   const onDragOver = e => e.preventDefault();\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n\n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error('Error creating issue:', err); }\n//   };\n\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) { alert('Epic name is required'); return; }\n//     try {\n//       const newEpic = await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n\n//       // Update open swimlanes and custom titles for the new epic\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//     } catch (err) { console.error('Error creating epic:', err); }\n//   };\n\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) { alert('Please select an epic to delete'); return; }\n\n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n\n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//     } catch (err) { console.error('Error deleting epic:', err); }\n//   };\n\n//   const handleDelete = async () => {\n//     if (!selectedIssue) return;\n//     await deleteIssueAPI(selectedIssue.id);\n//     const refreshed = await listIssues(projectId);\n//     setIssues(refreshed);\n//     setSelectedIssue(null);\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic Management Buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>\n//             + Create Epic\n//           </button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>\n//             ðŸ—‘ Delete Epic\n//           </button>\n//         </div>\n\n//         {/* Create Epic Modal */}\n//         {showCreateEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowCreateEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Create New Epic</h3>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter epic name (e.g., Frontend, Backend, Database)\"\n//                   value={newEpicName}\n//                   onChange={(e) => setNewEpicName(e.target.value)}\n//                   className=\"epic-modal-input\"\n//                   autoFocus\n//                 />\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowCreateEpic(false); setNewEpicName(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-create\" onClick={handleCreateEpic}>\n//                     Create Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n\n//         {/* Delete Epic Modal */}\n//         {showDeleteEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowDeleteEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Delete Epic</h3>\n//                 <p className=\"delete-warning\">Select an epic to delete. This will also delete all issues in the epic.</p>\n//                 <select \n//                   value={epicToDelete} \n//                   onChange={(e) => setEpicToDelete(e.target.value)}\n//                   className=\"epic-modal-select\"\n//                 >\n//                   <option value=\"\">Select an epic...</option>\n//                   {epics.map(epic => (\n//                     <option key={epic.id} value={epic.id}>\n//                       {epic.name} ({swimlanes.find(s => s.id === epic.id)?.issues.length || 0} issues)\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowDeleteEpic(false); setEpicToDelete(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteEpic} disabled={!epicToDelete}>\n//                     Delete Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>\n//                 {isOpen ? 'â–¼' : 'â–¶'}\n//               </button>\n//               <span className=\"swimlane-icon\">âš¡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => onTitleChange(lane.id, e.target.value)} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {STATUSES.map(status => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                         <div className=\"col-actions\">\n//                           <span className=\"col-create-btn\" onClick={() => handleCreateClick(lane.id)}>+</span>\n//                           <span className=\"col-menu\">...</span>\n//                         </div>\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>âœ”</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>âœ–</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => (\n//                         <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                           <div className=\"card-top\">\n//                             <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                             <span className=\"card-id\">{issue.id}</span>\n//                           </div>\n//                           <div className=\"card-title\">{issue.title}</div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Issue Modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <h2 style={{ gridColumn: \"span 3\" }}>{editIssue.epicName}\n//               <button className=\"modal-delete-btn\" onClick={handleDelete}>ðŸ—‘</button>\n//             </h2>\n\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n\n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {STATUSES.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\" }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Styles */}\n//       <style>{`\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n\n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n\n//         .epic-management-section {\n//           margin-bottom: 20px;\n//           position: relative;\n//         }\n\n//         .epic-buttons-container {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 12px;\n//           margin-bottom: 10px;\n//         }\n\n//         .create-epic-btn {\n//           background: #1976d2;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n\n//         .create-epic-btn:hover {\n//           background: #1565c0;\n//         }\n\n//         .delete-epic-btn {\n//           background: #d32f2f;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n\n//         .delete-epic-btn:hover {\n//           background: #c62828;\n//         }\n\n//         .delete-epic-btn:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n\n//         .epic-modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n\n//         .epic-modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           max-width: 500px;\n//           width: 100%;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n\n//         .epic-modal-content h3 {\n//           margin: 0 0 16px 0;\n//           font-size: 18px;\n//           font-weight: 600;\n//           color: #172b4d;\n//         }\n\n//         .delete-warning {\n//           color: #d32f2f;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           padding: 8px;\n//           background: #ffebee;\n//           border-radius: 4px;\n//         }\n\n//         .epic-modal-input, .epic-modal-select {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 10px 12px;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           box-sizing: border-box;\n//         }\n\n//         .epic-modal-input:focus, .epic-modal-select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n\n//         .epic-modal-actions {\n//           display: flex;\n//           gap: 12px;\n//           justify-content: flex-end;\n//         }\n\n//         .btn-cancel {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-create {\n//           background: #1976d2;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-delete {\n//           background: #d32f2f;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n\n//         .btn-delete:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n\n//         .swimlane {\n//           background: white;\n//           border-radius: 8px;\n//           margin-bottom: 16px;\n//           box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n//           overflow: hidden;\n//         }\n\n//         .swimlane-header {\n//           display: flex;\n//           align-items: center;\n//           padding: 12px 16px;\n//           background: #fafbfc;\n//           border-bottom: 1px solid #dfe1e5;\n//           font-weight: 600;\n//           font-size: 14px;\n//           color: #172b4d;\n//         }\n\n//         .swimlane-toggle {\n//           background: none;\n//           border: none;\n//           font-size: 12px;\n//           margin-right: 8px;\n//           cursor: pointer;\n//           color: #5e6c84;\n//         }\n\n//         .swimlane-icon {\n//           margin-right: 8px;\n//           font-size: 16px;\n//           color: #5e6c84;\n//         }\n\n//         .swimlane-title-input {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 4px 8px;\n//           font-size: 14px;\n//           font-weight: 600;\n//           background: white;\n//           margin-right: 8px;\n//           min-width: 150px;\n//           color: #172b4d;\n//         }\n\n//         .swimlane-count {\n//           color: #5e6c84;\n//           font-size: 12px;\n//           font-weight: normal;\n//         }\n\n//         .kanban-row {\n//           display: flex;\n//           padding: 16px;\n//           gap: 12px;\n//           overflow-x: auto;\n//           min-height: 300px;\n//         }\n\n//         .kanban-column {\n//           flex: 0 0 260px;\n//           background: #f5f6f8;\n//           border-radius: 6px;\n//           padding: 12px;\n//           display: flex;\n//           flex-direction: column;\n//           gap: 8px;\n//           border: 1px solid #dfe1e5;\n//         }\n\n//         .col-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 4px;\n//         }\n\n//         .col-title {\n//           font-weight: 600;\n//           font-size: 12px;\n//           color: #5e6c84;\n//           text-transform: uppercase;\n//           letter-spacing: 0.5px;\n//         }\n\n//         .col-count {\n//           background: #dfe1e5;\n//           color: #5e6c84;\n//           border-radius: 10px;\n//           padding: 1px 6px;\n//           font-size: 11px;\n//           font-weight: 600;\n//         }\n\n//         .col-actions {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .col-create-btn, .col-menu {\n//           cursor: pointer;\n//           font-size: 16px;\n//           color: #5e6c84;\n//           padding: 2px 6px;\n//           border-radius: 3px;\n//         }\n\n//         .col-create-btn:hover, .col-menu:hover {\n//           background: #ebecf0;\n//         }\n\n//         .col-create {\n//           margin-bottom: 4px;\n//         }\n\n//         .create-link {\n//           color: #5e6c84;\n//           cursor: pointer;\n//           font-size: 12px;\n//           padding: 6px;\n//           display: block;\n//           border-radius: 3px;\n//           transition: background-color 0.2s;\n//         }\n\n//         .create-link:hover {\n//           background: #ebecf0;\n//         }\n\n//         .create-card {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//         }\n\n//         .create-input {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 6px;\n//           font-size: 12px;\n//           resize: vertical;\n//           margin-bottom: 6px;\n//           color: #172b4d;\n//         }\n\n//         .create-actions {\n//           display: flex;\n//           gap: 6px;\n//           align-items: center;\n//         }\n\n//         .create-select {\n//           flex: 1;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           font-size: 11px;\n//           color: #172b4d;\n//         }\n\n//         .create-btn {\n//           background: #f5f6f8;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           cursor: pointer;\n//           font-size: 11px;\n//           color: #5e6c84;\n//         }\n\n//         .card-item {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 6px;\n//           padding: 12px;\n//           cursor: pointer;\n//           transition: all 0.2s;\n//           box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .card-item:hover {\n//           box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n//           border-color: #c1c7d0;\n//         }\n\n//         .card-top {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 6px;\n//         }\n\n//         .card-tag {\n//           font-size: 10px;\n//           font-weight: 600;\n//           padding: 2px 4px;\n//           border-radius: 3px;\n//           text-transform: uppercase;\n//         }\n\n//         .card-tag-task {\n//           background: #e3f2fd;\n//           color: #1976d2;\n//         }\n\n//         .card-tag-bug {\n//           background: #ffebee;\n//           color: #d32f2f;\n//         }\n\n//         .card-tag-subtask {\n//           background: #f3e5f5;\n//           color: #7b1fa2;\n//         }\n\n//         .card-id {\n//           color: #5e6c84;\n//           font-size: 10px;\n//           font-family: monospace;\n//         }\n\n//         .card-title {\n//           font-size: 13px;\n//           line-height: 1.3;\n//           color: #172b4d;\n//           font-weight: 500;\n//         }\n\n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n\n//         .modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           display: grid;\n//           grid-template-columns: repeat(3, 1fr);\n//           gap: 16px;\n//           max-width: 900px;\n//           width: 100%;\n//           max-height: 80vh;\n//           overflow-y: auto;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n\n//         .modal h2 {\n//           margin: 0 0 16px 0;\n//           font-size: 20px;\n//           font-weight: 600;\n//           color: #172b4d;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n\n//         .modal-delete-btn {\n//           background: #d32f2f;\n//           border: none;\n//           border-radius: 4px;\n//           padding: 6px 10px;\n//           color: white;\n//           cursor: pointer;\n//           font-size: 12px;\n//         }\n\n//         .modal-field {\n//           display: flex;\n//           flex-direction: column;\n//           gap: 4px;\n//         }\n\n//         .modal-field label {\n//           font-size: 12px;\n//           font-weight: 600;\n//           color: #5e6c84;\n//         }\n\n//         .modal-field input, .modal-field textarea, .modal-field select {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//           font-size: 13px;\n//           background: white;\n//           transition: border-color 0.2s;\n//           color: #172b4d;\n//         }\n\n//         .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n\n//         .modal-field input:disabled {\n//           background: #f5f6f8;\n//           color: #5e6c84;\n//         }\n\n//         .modal-actions {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 8px;\n//           margin-top: 16px;\n//         }\n\n//         .btn-reset {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n\n//         .btn-save {\n//           background: #1976d2;\n//           border: none;\n//           color: white;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n//////////////////////////////////////////////////////////////////\n//for updated the ticket\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockIssues = [{\n  id: 'i1',\n  epic: 'p1',\n  epicName: 'Frontend',\n  status: 'todo',\n  type: 'Task',\n  title: 'Setup repo',\n  assignee: 'John Doe',\n  storyPoints: 3,\n  labels: [],\n  dueDate: '2025-09-30',\n  reporter: 'admin',\n  priority: 'High',\n  startDate: '2025-09-15',\n  description: '',\n  subtasks: '',\n  comments: ''\n}, {\n  id: 'i3',\n  epic: 'p2',\n  epicName: 'Middleware',\n  status: 'todo',\n  type: 'Subtask',\n  title: 'API integration',\n  assignee: 'Jane Smith',\n  storyPoints: 2,\n  labels: [],\n  dueDate: '',\n  reporter: 'lead-dev',\n  priority: 'Low',\n  startDate: '2025-09-18',\n  description: '',\n  subtasks: '',\n  comments: ''\n}];\nconst defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\nconst mockEpics = [{\n  id: 'p1',\n  name: 'Frontend'\n}, {\n  id: 'p2',\n  name: 'Middleware'\n}];\nconst simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\nconst listIssues = async projectId => {\n  await simulateApiDelay();\n  return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n};\nconst listEpics = async () => {\n  await simulateApiDelay();\n  return mockEpics;\n};\nconst createEpicAPI = async epicName => {\n  await simulateApiDelay();\n  const newEpic = {\n    id: 'p' + (mockEpics.length + 1),\n    name: epicName\n  };\n  mockEpics.push(newEpic);\n  return newEpic;\n};\nconst deleteEpicAPI = async epicId => {\n  await simulateApiDelay();\n  const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n  if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n  const issueIndices = [];\n  mockIssues.forEach((issue, index) => {\n    if (issue.epic === epicId) issueIndices.push(index);\n  });\n  issueIndices.sort((a, b) => b - a).forEach(index => {\n    mockIssues.splice(index, 1);\n  });\n};\nconst moveIssue = async (issueId, status) => {\n  await simulateApiDelay();\n  const issue = mockIssues.find(i => i.id === issueId);\n  if (!issue) throw new Error('Issue not found');\n  issue.status = status;\n};\nconst createIssueAPI = async issue => {\n  await simulateApiDelay();\n  mockIssues.push(issue);\n};\nconst deleteIssueAPI = async issueId => {\n  await simulateApiDelay();\n  const idx = mockIssues.findIndex(i => i.id === issueId);\n  if (idx > -1) mockIssues.splice(idx, 1);\n};\nconst updateIssueAPI = async updatedIssue => {\n  await simulateApiDelay();\n  const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n  if (idx > -1) mockIssues[idx] = {\n    ...mockIssues[idx],\n    ...updatedIssue\n  };\n};\nconst getSwimlanes = (issues, epics) => epics.map(epic => {\n  const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n  return {\n    id: epic.id,\n    title: epic.name,\n    issues: epicIssues\n  };\n});\nexport default function KanbanBoard() {\n  _s();\n  var _columnsByLane$editIs;\n  const {\n    projectId\n  } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [openSwimlanes, setOpenSwimlanes] = useState({});\n  const [customTitles, setCustomTitles] = useState({});\n  const [createLaneId, setCreateLaneId] = useState(null);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [newTaskType, setNewTaskType] = useState('Task');\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [editIssue, setEditIssue] = useState(null);\n  const [showCreateEpic, setShowCreateEpic] = useState(false);\n  const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [epicToDelete, setEpicToDelete] = useState('');\n  const [columnsByLane, setColumnsByLane] = useState({});\n  const [columnModal, setColumnModal] = useState(null);\n  const [columnInput, setColumnInput] = useState('');\n  const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n  const [modalPosition, setModalPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n        setIssues(issuesData);\n        setEpics(epicsData);\n        const lanes = getSwimlanes(issuesData, epicsData);\n        const initialOpen = {},\n          initialTitles = {},\n          initialCols = {};\n        lanes.forEach(lane => {\n          initialOpen[lane.id] = true;\n          initialTitles[lane.id] = lane.title;\n          initialCols[lane.id] = defaultStatuses.slice();\n        });\n        setOpenSwimlanes(initialOpen);\n        setCustomTitles(initialTitles);\n        setColumnsByLane(initialCols);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [projectId]);\n  const openAddColumnModal = (e, laneId, colIndex) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({\n      top: rect.bottom + window.scrollY + 8,\n      left: rect.left + window.scrollX\n    });\n    setColumnModal({\n      laneId,\n      colIndex,\n      type: 'add'\n    });\n    setColumnInput('');\n  };\n  const openEditColumnModal = (e, laneId, colIndex, status) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({\n      top: rect.bottom + window.scrollY + 8,\n      left: rect.left + window.scrollX\n    });\n    setColumnModal({\n      laneId,\n      colIndex,\n      type: 'menu'\n    });\n    setColumnInput(status);\n  };\n  const handleAddColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    setColumnsByLane(prev => {\n      const cols = [...prev[columnModal.laneId]];\n      if (cols.includes(name.toLowerCase())) alert('Column name already exists');else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n      return {\n        ...prev,\n        [columnModal.laneId]: cols\n      };\n    });\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleEditColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    const {\n      laneId,\n      colIndex\n    } = columnModal;\n    const oldCol = columnsByLane[laneId][colIndex];\n    if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n      alert('Column name already exists');\n      return;\n    }\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols[colIndex] = name.toLowerCase();\n      return {\n        ...prev,\n        [laneId]: cols\n      };\n    });\n    const updatedIssues = issues.map(issue => (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? {\n      ...issue,\n      status: name.toLowerCase()\n    } : issue);\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleDeleteColumn = () => {\n    const {\n      laneId,\n      colIndex\n    } = columnModal;\n    const removedCol = columnsByLane[laneId][colIndex];\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols.splice(colIndex, 1);\n      return {\n        ...prev,\n        [laneId]: cols\n      };\n    });\n    const updatedIssues = issues.map(issue => (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? {\n      ...issue,\n      status: 'backlog'\n    } : issue);\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const toggleSwimlane = id => setOpenSwimlanes(prev => ({\n    ...prev,\n    [id]: !prev[id]\n  }));\n  const byStatus = (collection, status) => collection.filter(i => i.status === status);\n  const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n  const onDrop = async (e, targetStatus, swimlaneId) => {\n    e.preventDefault();\n    try {\n      const issueId = e.dataTransfer.getData('text/plain');\n      const issue = issues.find(i => i.id === issueId);\n      const srcLaneId = issue.epic || issue.projectId;\n      if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n        await moveIssue(issueId, targetStatus);\n        const refreshed = await listIssues(projectId);\n        setIssues(refreshed);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const onDragOver = e => e.preventDefault();\n  const handleCreateClick = laneId => {\n    setCreateLaneId(laneId);\n    setNewTaskText('');\n    setNewTaskType('Task');\n  };\n  const handleCreateSubmit = async lane => {\n    if (!newTaskText.trim()) {\n      alert('Task title is required');\n      return;\n    }\n    const newIssue = {\n      id: Math.random().toString(36).slice(2),\n      epic: lane.id,\n      projectId: lane.id,\n      epicName: lane.title,\n      title: newTaskText,\n      status: 'backlog',\n      assignee: '',\n      type: newTaskType,\n      storyPoints: '',\n      labels: [],\n      dueDate: '',\n      reporter: 'system',\n      priority: 'Medium',\n      startDate: new Date().toISOString().split('T')[0],\n      description: '',\n      subtasks: '',\n      comments: ''\n    };\n    try {\n      await createIssueAPI(newIssue);\n      const refreshed = await listIssues(projectId);\n      setIssues(refreshed);\n      setCreateLaneId(null);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleOpenModal = issue => {\n    setSelectedIssue(issue);\n    setEditIssue({\n      ...issue\n    });\n  };\n  const handleUpdateField = (field, value) => {\n    setEditIssue(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSave = async () => {\n    await updateIssueAPI(editIssue);\n    const refreshed = await listIssues(projectId);\n    setIssues(refreshed);\n    setSelectedIssue(null);\n    setEditIssue(null);\n  };\n  const handleReset = () => {\n    setEditIssue({\n      ...selectedIssue\n    });\n  };\n\n  // Create Epic Modal Handlers\n  const handleCreateEpic = async () => {\n    if (!newEpicName.trim()) {\n      alert('Epic name is required');\n      return;\n    }\n    try {\n      await createEpicAPI(newEpicName);\n      const updatedEpics = await listEpics();\n      setEpics(updatedEpics);\n      setNewEpicName('');\n      setShowCreateEpic(false);\n      const newEpic = updatedEpics[updatedEpics.length - 1];\n      setOpenSwimlanes(prev => ({\n        ...prev,\n        [newEpic.id]: true\n      }));\n      setCustomTitles(prev => ({\n        ...prev,\n        [newEpic.id]: newEpic.name\n      }));\n      setColumnsByLane(prev => ({\n        ...prev,\n        [newEpic.id]: defaultStatuses.slice()\n      }));\n    } catch (error) {\n      console.error('Error creating epic:', error);\n    }\n  };\n\n  // Delete Epic Modal Handler\n  const handleDeleteEpic = async () => {\n    var _epics$find;\n    if (!epicToDelete) {\n      alert('Please select an epic to delete');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete the epic \"${(_epics$find = epics.find(e => e.id === epicToDelete)) === null || _epics$find === void 0 ? void 0 : _epics$find.name}\"? This will also delete all issues in this epic.`)) {\n      return;\n    }\n    try {\n      await deleteEpicAPI(epicToDelete);\n      const [refreshedIssues, refreshedEpics] = await Promise.all([listIssues(projectId), listEpics()]);\n      setIssues(refreshedIssues);\n      setEpics(refreshedEpics);\n      setEpicToDelete('');\n      setShowDeleteEpic(false);\n      setColumnsByLane(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setOpenSwimlanes(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setCustomTitles(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n    } catch (error) {\n      console.error('Error deleting epic:', error);\n    }\n  };\n  const swimlanes = getSwimlanes(issues, epics);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrap\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"epic-management-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-buttons-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"create-epic-btn\",\n          onClick: () => {\n            setShowCreateEpic(true);\n            setShowDeleteEpic(false);\n          },\n          children: \"+ Create Epic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2087,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-epic-btn\",\n          onClick: () => {\n            setShowDeleteEpic(true);\n            setShowCreateEpic(false);\n          },\n          children: \"\\uD83D\\uDDD1 Delete Epic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2088,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2086,\n        columnNumber: 9\n      }, this), showCreateEpic && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-modal-overlay\",\n        onClick: () => setShowCreateEpic(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"epic-modal\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create New Epic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2096,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter epic name\",\n              value: newEpicName,\n              onChange: e => setNewEpicName(e.target.value),\n              className: \"epic-modal-input\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2097,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"epic-modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-cancel\",\n                onClick: () => {\n                  setShowCreateEpic(false);\n                  setNewEpicName('');\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2099,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-create\",\n                onClick: handleCreateEpic,\n                children: \"Create Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2098,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2095,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2094,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2093,\n        columnNumber: 11\n      }, this), showDeleteEpic && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-modal-overlay\",\n        onClick: () => setShowDeleteEpic(false),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"epic-modal\",\n          onClick: e => e.stopPropagation(),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Delete Epic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"delete-warning\",\n              children: \"Select an epic to delete. This will also delete all issues in the epic.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: epicToDelete,\n              onChange: e => setEpicToDelete(e.target.value),\n              className: \"epic-modal-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an epic...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2115,\n                columnNumber: 19\n              }, this), epics.map(epic => {\n                var _swimlanes$find;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: epic.id,\n                  children: [epic.name, \" (\", ((_swimlanes$find = swimlanes.find(s => s.id === epic.id)) === null || _swimlanes$find === void 0 ? void 0 : _swimlanes$find.issues.length) || 0, \" issues)\"]\n                }, epic.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2117,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"epic-modal-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-cancel\",\n                onClick: () => {\n                  setShowDeleteEpic(false);\n                  setEpicToDelete('');\n                },\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn-delete\",\n                onClick: handleDeleteEpic,\n                disabled: !epicToDelete,\n                children: \"Delete Epic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 2085,\n      columnNumber: 7\n    }, this), swimlanes.map(lane => {\n      const isOpen = openSwimlanes[lane.id];\n      const statuses = columnsByLane[lane.id] || defaultStatuses;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"swimlane\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"swimlane-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"swimlane-toggle\",\n            onClick: () => toggleSwimlane(lane.id),\n            children: isOpen ? 'â–¼' : 'â–¶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"swimlane-icon\",\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2138,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"swimlane-title-input\",\n            value: customTitles[lane.id] || '',\n            onChange: e => setCustomTitles(prev => ({\n              ...prev,\n              [lane.id]: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"swimlane-count\",\n            children: [lane.issues.length, \" work items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2136,\n          columnNumber: 13\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kanban-row\",\n          children: statuses.map((status, idx) => {\n            const issuesForStatus = byStatus(lane.issues, status);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"kanban-column\",\n              onDragOver: onDragOver,\n              onDrop: e => onDrop(e, status, lane.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-title\",\n                  children: status.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2149,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-icons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"col-icon\",\n                    title: \"Add Column\",\n                    onClick: e => openAddColumnModal(e, lane.id, idx),\n                    children: \"\\uFF0B\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2151,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"col-icon\",\n                    title: \"Edit/Delete Column\",\n                    onClick: e => openEditColumnModal(e, lane.id, idx, status),\n                    children: \"\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2152,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2150,\n                  columnNumber: 25\n                }, this), issuesForStatus.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-count\",\n                  children: issuesForStatus.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2154,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 2148,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-create\",\n                children: status === 'backlog' && (createLaneId === lane.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 2,\n                    className: \"create-input\",\n                    placeholder: \"What needs to be done?\",\n                    value: newTaskText,\n                    onChange: e => setNewTaskText(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2160,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newTaskType,\n                      onChange: e => setNewTaskType(e.target.value),\n                      className: \"create-select\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Task\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2163,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Subtask\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2163,\n                        columnNumber: 56\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Bug\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2163,\n                        columnNumber: 80\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2162,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"create-btn\",\n                      onClick: () => handleCreateSubmit(lane),\n                      children: \"\\u2714\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2165,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"create-btn\",\n                      onClick: () => setCreateLaneId(null),\n                      children: \"\\u2716\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2166,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2161,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2159,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"create-link\",\n                  onClick: () => handleCreateClick(lane.id),\n                  children: \"+ Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2169,\n                  columnNumber: 32\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 2156,\n                columnNumber: 23\n              }, this), issuesForStatus.map(issue => {\n                const isHovered = hoveredAssigneeId === issue.id;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-item\",\n                  draggable: true,\n                  onDragStart: e => onDragStart(e, issue.id),\n                  onClick: () => handleOpenModal(issue),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-top\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `card-tag card-tag-${issue.type.toLowerCase()}`,\n                      children: issue.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2177,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-id\",\n                      children: issue.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2178,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2176,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-title\",\n                    children: issue.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2180,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-meta\",\n                    children: [issue.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-due\",\n                      children: [\"\\uD83D\\uDCC5 \", issue.dueDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2182,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `card-priority ${issue.priority.toLowerCase()}`,\n                      children: [\"\\u2691 \", issue.priority]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2183,\n                      columnNumber: 31\n                    }, this), issue.assignee && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-assignee\",\n                      onMouseEnter: () => setHoveredAssigneeId(issue.id),\n                      onMouseLeave: () => setHoveredAssigneeId(null),\n                      style: {\n                        position: 'relative',\n                        cursor: 'default',\n                        userSelect: 'none'\n                      },\n                      children: [\"\\uD83D\\uDC64\", isHovered && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"assignee-tooltip\",\n                        children: issue.assignee\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 2187,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 2185,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 2181,\n                    columnNumber: 29\n                  }, this)]\n                }, issue.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 2175,\n                  columnNumber: 27\n                }, this);\n              })]\n            }, status, true, {\n              fileName: _jsxFileName,\n              lineNumber: 2147,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 2143,\n          columnNumber: 15\n        }, this)]\n      }, lane.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2135,\n        columnNumber: 11\n      }, this);\n    }), columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"epic-modal-overlay\",\n      onClick: () => setColumnModal(null),\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-modal\",\n        onClick: e => e.stopPropagation(),\n        style: {\n          position: 'absolute',\n          top: modalPosition.top,\n          left: modalPosition.left,\n          transform: 'translateX(-50%)',\n          minWidth: 280,\n          maxWidth: 320,\n          padding: 20,\n          borderRadius: 10,\n          background: 'white',\n          boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n          zIndex: 1100\n        },\n        children: columnModal.type === 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 15,\n              fontWeight: 600,\n              fontSize: 20,\n              color: '#172b4d'\n            },\n            children: \"Add Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2221,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: columnInput,\n            onChange: e => setColumnInput(e.target.value),\n            placeholder: \"Column name\",\n            autoFocus: true,\n            className: \"epic-modal-input\",\n            style: {\n              width: '100%',\n              padding: 12,\n              fontSize: 16,\n              borderRadius: 6,\n              border: '1px solid #dfe1e5',\n              marginBottom: 20,\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2222,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setColumnModal(null),\n              style: btnStyle.cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2224,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-create\",\n              onClick: handleAddColumn,\n              style: btnStyle.create,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2225,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2223,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 15,\n              fontWeight: 600,\n              fontSize: 20,\n              color: '#172b4d'\n            },\n            children: \"Edit/Delete Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2230,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: columnInput,\n            onChange: e => setColumnInput(e.target.value),\n            placeholder: \"Column name\",\n            autoFocus: true,\n            className: \"epic-modal-input\",\n            style: {\n              width: '100%',\n              padding: 12,\n              fontSize: 16,\n              borderRadius: 6,\n              border: '1px solid #dfe1e5',\n              marginBottom: 20,\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 12\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-save\",\n              onClick: handleEditColumn,\n              style: btnStyle.create,\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-delete\",\n              onClick: handleDeleteColumn,\n              style: btnStyle.delete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setColumnModal(null),\n              style: btnStyle.cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2232,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 2206,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2205,\n      columnNumber: 9\n    }, this), selectedIssue && editIssue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setSelectedIssue(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editIssue.epicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: () => setSelectedIssue(null),\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2251,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: editIssue.title,\n            onChange: e => handleUpdateField('title', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2251,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2252,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editIssue.description,\n            onChange: e => handleUpdateField('description', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2252,\n            columnNumber: 68\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2252,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Subtasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2253,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: editIssue.subtasks,\n            onChange: e => handleUpdateField('subtasks', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2253,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2254,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editIssue.comments,\n            onChange: e => handleUpdateField('comments', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2254,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2254,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2255,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editIssue.status,\n            onChange: e => handleUpdateField('status', e.target.value),\n            children: ((_columnsByLane$editIs = columnsByLane[editIssue.epic]) === null || _columnsByLane$editIs === void 0 ? void 0 : _columnsByLane$editIs.map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: st,\n              children: st\n            }, st, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2257,\n              columnNumber: 59\n            }, this))) || defaultStatuses.map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: st,\n              children: st\n            }, st, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2257,\n              columnNumber: 131\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2256,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Assignee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: editIssue.assignee,\n            onChange: e => handleUpdateField('assignee', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2260,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Reporter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2261,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            disabled: true,\n            value: editIssue.reporter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2261,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2261,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2262,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: editIssue.priority,\n            onChange: e => handleUpdateField('priority', e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2264,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 2264,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 2263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2262,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Due Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2267,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editIssue.dueDate,\n            onChange: e => handleUpdateField('dueDate', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2267,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Start Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2268,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: editIssue.startDate,\n            onChange: e => handleUpdateField('startDate', e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2268,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2268,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          style: {\n            gridColumn: \"span 3\",\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-save\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-delete-btn\",\n            onClick: async () => {\n              if (window.confirm('Delete this issue?')) {\n                await deleteIssueAPI(selectedIssue.id);\n                const refreshed = await listIssues(projectId);\n                setIssues(refreshed);\n                setSelectedIssue(null);\n              }\n            },\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 2272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 2269,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 2246,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2245,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* Include the full CSS from the previous answer - Kanban board styling, tooltip, modals, buttons */\n        body {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          background-color: #f5f6f8;\n          margin: 0;\n          padding: 16px;\n        }\n        .board-wrap {\n          max-width: 100%;\n          overflow-x: auto;\n        }\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  background-color: #f5f6f8;\n  margin: 0;\n  padding: 16px;\n}\n.board-wrap {\n  max-width: 100%;\n  overflow-x: auto;\n}\n.swimlane {\n  background: white;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n.swimlane-header {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  background: #fafbfc;\n  border-bottom: 1px solid #dfe5e5;\n  font-weight: 600;\n  font-size: 14px;\n  color: #172b4d;\n}\n.swimlane-toggle, .swimlane-icon {\n  color: #5e6c84;\n  margin-right: 8px;\n  cursor: pointer;\n}\n.swimlane-toggle {\n  border: none;\n  background: transparent;\n  font-size: 14px;\n}\n.swimlane-icon {\n  font-size: 18px;\n}\n.swimlane-title-input {\n  border: 1px solid #dfe5e5;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  font-weight: 600;\n  background: white;\n  margin-right: 8px;\n  min-width: 150px;\n  color: #172b4d;\n}\n.swimlane-title-input:focus {\n  outline: none;\n  border-color: #1976d2;\n}\n.swimlane-title-input::placeholder {\n  color: #a2adba;\n}\n.swimlane-title-input:hover {\n  border-color: #a2adba;\n}\n.swimlane-title-input:disabled {\n  background: #f5f6f8;\n  color: #a2adba;\n}\n.swimlane-count {\n  color: #5e6c84;\n  font-size: 12px;\n  font-weight: normal;\n  user-select: none;\n}\n.kanban-row {\n  display: flex;\n  padding: 16px;\n  gap: 12px;\n  overflow-x: auto;\n}\n.kanban-column {\n  flex: 0 0 260px;\n  background: #f5f6f8;\n  border-radius: 6px;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border: 1px solid #dfe5e5;\n  user-select: none;\n}\n.col-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n  gap: 6px;\n}\n.col-title {\n  font-weight: 600;\n  font-size: 12px;\n  color: #5e6c84;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  flex-grow: 1;\n  user-select: none;\n}\n.col-title:empty {\n  height: 20px;\n}\n.col-count {\n  background: #dfe5e5;\n  color: #5e6c84;\n  border-radius: 12px;\n  padding: 2px 8px;\n  font-size: 11px;\n  font-weight: 600;\n  user-select: none;\n  min-width: 20px;\n  text-align: center;\n}\n.col-icons {\n  display: flex;\n  gap: 6px;\n}\n.col-icon {\n  cursor: pointer;\n  color: #5e6c84;\n  font-size: 18px;\n  background: none;\n  border: none;\n  padding: 0;\n  user-select: none;\n}\n.col-icon:hover {\n  color: #1976d2;\n}\n.create-card {\n  background: white;\n  padding: 10px;\n  border-radius: 6px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n.create-card textarea {\n  resize: vertical;\n  min-height: 50px;\n  font-size: 14px;\n  padding: 8px;\n  border-radius: 5px;\n  border: 1px solid #dfe5e5;\n  font-family: inherit;\n}\n.create-card textarea:focus {\n  outline: none;\n  border-color: #1976d2;\n}\n.create-card .create-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n.create-card .create-actions select {\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid #dfe5e5;\n  border-radius: 5px;\n  font-size: 14px;\n}\n.create-card button {\n  padding: 8px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: 1px solid #dfe5e5;\n  background: #f5f6f8;\n  user-select: none;\n  transition: background-color 0.2s;\n}\n.create-card button:hover {\n  background: #e1e7f0;\n}\n.card-item {\n  background: white;\n  border-radius: 8px;\n  padding: 12px;\n  box-shadow: 0 0 2px rgba(0,0,0,0.1);\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  border: 1px solid #dfe5e5;\n  transition: box-shadow 0.2s ease, border-color 0.2s ease;\n}\n.card-item:hover {\n  box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n  border-color: #a2adba;\n}\n.card-item .card-top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 600;\n  color: #5e6c84;\n  gap: 10px;\n}\n.card-item .card-top .card-id {\n  font-family: monospace;\n  color: #a2adba;\n  user-select: text;\n}\n.card-item .card-tags .tag {\n  border-radius: 6px;\n  padding: 3px 7px;\n  font-size: 11px;\n  font-weight: 600;\n  text-transform: uppercase;\n  white-space: nowrap;\n  user-select: none;\n  margin-right: 6px;\n}\n.tag-task {\n  background: #e1efff;\n  color: #1976d2;\n}\n.tag-bug {\n  background: #ffebec;\n  color: #d62127;\n}\n.tag-subtask {\n  background: #f5e6ff;\n  color: #772da0;\n}\n.card-item .card-title {\n  font-weight: 600;\n  font-size: 14px;\n  color: #2b3a59;\n}\n.card-item .card-meta {\n  display: flex;\n  gap: 10px;\n  font-size: 12px;\n  color: #6b7c93;\n  align-items: center;\n  user-select: none;\n}\n.card-item .card-meta span {\n  background: #f5f7fa;\n  color: #6b7c93;\n  padding: 3px 8px;\n  border-radius: 12px;\n}\n.card-item .card-meta .card-priority.low {\n  background: #d4edda;\n  color: #155724;\n}\n.card-item .card-meta .card-priority.medium {\n  background: #fff3cd;\n  color: #856404;\n}\n.card-item .card-meta .card-priority.high {\n  background: #f8d7da;\n  color: #721c24;\n}\n.card-item .card-meta .card-assignee {\n  position: relative;\n  cursor: default;\n  padding-left: 18px;\n}\n.card-item .card-meta .card-assignee:hover .tooltip {\n  display: block;\n}\n.card-item .card-meta .tooltip {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #222;\n  color: white;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 11px;\n  white-space: nowrap;\n  z-index: 10;\n  display: none;\n  user-select: none;\n}\n.modal-overlay {\n  position: fixed;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.modal {\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  width: 700px;\n  max-height: 80vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 16px;\n  overflow-y: auto;\n  position: relative;\n}\n.modal-header {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 700;\n  font-size: 20px;\n  color: #2b3a59;\n}\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 22px;\n  cursor: pointer;\n  color: #a2adba;\n}\n.modal-header button:hover {\n  color: #485fc7;\n}\n.modal-field {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n.modal-field label {\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7c93;\n  user-select: none;\n}\n.modal-field input, .modal-field textarea, .modal-field select {\n  padding: 8px 10px;\n  border-radius: 6px;\n  border: 1px solid #dfe5e5;\n  font-size: 14px;\n  color: #2b3a59;\n  font-family: inherit;\n}\n.modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n  outline: none;\n  border-color: #485fc7;\n  background: #f8fcff;\n}\n.modal-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  align-items: center;\n  margin-top: 12px;\n}\nbutton.btn-reset {\n  background: #5e6c84;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-reset:hover {\n  background: #485fc7;\n}\nbutton.btn-save {\n  background: #485fc7;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-save:hover {\n  background: #374cac;\n}\nbutton.btn-delete {\n  background: #d94343;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-delete:hover {\n  background: #b83232;\n}\ninput[disabled] {\n  background: #efeff1;\n  cursor: not-allowed;\n  color: #b3b3b3;\n}\n.epic-modal-overlay {\n  position: fixed;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.epic-modal {\n  background: white;\n  border-radius: 8px;\n  width: 350px;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n  position: relative;\n}\n.epic-modal-content h3 {\n  margin: 0 0 20px 0;\n  font-weight: 700;\n  font-size: 20px;\n  color: #2b3a59;\n  user-select: none;\n}\n.epic-modal-content p.delete-warning {\n  background: #ffe6e6;\n  padding: 10px;\n  color: #d94343;\n  font-size: 14px;\n  margin-bottom: 15px;\n  border-radius: 6px;\n}\n.epic-modal-input, .epic-modal-select {\n  width: 100%;\n  padding: 10px;\n  font-size: 14px;\n  margin-bottom: 20px;\n  border-radius: 6px;\n  border: 1px solid #dfe5e5;\n  box-sizing: border-box;\n  font-family: inherit;\n}\n.epic-modal-input:focus, .epic-modal-select:focus {\n  outline: none;\n  border-color: #485fc7;\n}\n.epic-modal-actions {\n  display: flex;\n  justify-content: space-between;\n  gap: 15px;\n}\nbutton.create-epic-btn, button.delete-epic-btn {\n  background: #485fc7;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 15px;\n  user-select: none;\n}\nbutton.create-epic-btn:hover, button.delete-epic-btn:hover {\n  background: #374cac;\n}\nbutton.delete-epic-btn {\n  background: #d94343;\n}\nbutton.delete-epic-btn:hover {\n  background: #b83232;\n}\n\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 2286,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2083,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"iSODDDBVtIo+1EPLjUVfpxMPcdI=\", false, function () {\n  return [useParams];\n});\n_c = KanbanBoard;\nconst btnStyle = {\n  cancel: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#5e6c84',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  create: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#1976d2',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  delete: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#d32f2f',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","mockIssues","id","epic","epicName","status","type","title","assignee","storyPoints","labels","dueDate","reporter","priority","startDate","description","subtasks","comments","defaultStatuses","mockEpics","name","simulateApiDelay","Promise","resolve","setTimeout","listIssues","projectId","filter","i","listEpics","createEpicAPI","newEpic","length","push","deleteEpicAPI","epicId","epicIndex","findIndex","splice","issueIndices","forEach","issue","index","sort","a","b","moveIssue","issueId","find","Error","createIssueAPI","deleteIssueAPI","idx","updateIssueAPI","updatedIssue","getSwimlanes","issues","epics","map","epicIssues","KanbanBoard","_s","_columnsByLane$editIs","setIssues","setEpics","openSwimlanes","setOpenSwimlanes","customTitles","setCustomTitles","createLaneId","setCreateLaneId","newTaskText","setNewTaskText","newTaskType","setNewTaskType","selectedIssue","setSelectedIssue","editIssue","setEditIssue","showCreateEpic","setShowCreateEpic","showDeleteEpic","setShowDeleteEpic","newEpicName","setNewEpicName","epicToDelete","setEpicToDelete","columnsByLane","setColumnsByLane","columnModal","setColumnModal","columnInput","setColumnInput","hoveredAssigneeId","setHoveredAssigneeId","modalPosition","setModalPosition","top","left","fetchData","issuesData","epicsData","all","lanes","initialOpen","initialTitles","initialCols","lane","slice","err","console","error","openAddColumnModal","e","laneId","colIndex","rect","currentTarget","getBoundingClientRect","bottom","window","scrollY","scrollX","openEditColumnModal","handleAddColumn","trim","alert","prev","cols","includes","toLowerCase","handleEditColumn","oldCol","updatedIssues","handleDeleteColumn","removedCol","toggleSwimlane","byStatus","collection","onDragStart","dataTransfer","setData","onDrop","targetStatus","swimlaneId","preventDefault","getData","srcLaneId","refreshed","onDragOver","handleCreateClick","handleCreateSubmit","newIssue","Math","random","toString","Date","toISOString","split","handleOpenModal","handleUpdateField","field","value","handleSave","handleReset","handleCreateEpic","updatedEpics","handleDeleteEpic","_epics$find","confirm","refreshedIssues","refreshedEpics","copy","swimlanes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","stopPropagation","placeholder","onChange","target","autoFocus","_swimlanes$find","s","disabled","isOpen","statuses","issuesForStatus","toUpperCase","rows","isHovered","draggable","onMouseEnter","onMouseLeave","style","position","cursor","userSelect","right","zIndex","transform","minWidth","maxWidth","padding","borderRadius","background","boxShadow","marginBottom","fontWeight","fontSize","color","width","border","boxSizing","display","justifyContent","gap","btnStyle","cancel","create","delete","st","gridColumn","alignItems","_c","backgroundColor","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/boards/KanbanBoard.js"],"sourcesContent":["\n\n//  // for epic delete button \n\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const STATUSES = [\n//   'backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'\n// ];\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'u2', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'u4', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const mockEpics = [\n//   { id: 'p1', name: 'Frontend' },\n//   { id: 'p2', name: 'Middleware' }\n// ];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n\n// const listEpics = async () => {\n//   await simulateApiDelay();\n//   return mockEpics;\n// };\n\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = {\n//     id: 'p' + (mockEpics.length + 1),\n//     name: epicName\n//   };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) {\n//     mockEpics.splice(epicIndex, 1);\n//   }\n  \n//   // Also delete all issues associated with this epic\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => {\n//     if (issue.epic === epicId) {\n//       issueIndices.push(index);\n//     }\n//   });\n  \n//   // Remove issues from highest index to lowest to avoid index issues\n//   issueIndices.sort((a, b) => b - a).forEach(index => {\n//     mockIssues.splice(index, 1);\n//   });\n// };\n\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n\n// const createIssueAPI = async (issue) => {\n//   await simulateApiDelay();\n//   mockIssues.push(issue);\n// };\n\n// const deleteIssueAPI = async (issueId) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === issueId);\n//   if (idx > -1) mockIssues.splice(idx, 1);\n// };\n\n// const updateIssueAPI = async (updatedIssue) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n//   if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue };\n// };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([\n//           listIssues(projectId),\n//           listEpics()\n//         ]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {};\n//         const initialTitles = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//       } catch (err) {\n//         console.error('Failed to load data:', err);\n//       }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const onTitleChange = (id, value) => setCustomTitles(prev => ({ ...prev, [id]: value }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) {\n//       console.error('Error moving issue:', err);\n//     }\n//   };\n\n//   const onDragOver = e => e.preventDefault();\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n  \n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error('Error creating issue:', err); }\n//   };\n\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) { alert('Epic name is required'); return; }\n//     try {\n//       const newEpic = await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n      \n//       // Update open swimlanes and custom titles for the new epic\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//     } catch (err) { console.error('Error creating epic:', err); }\n//   };\n\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) { alert('Please select an epic to delete'); return; }\n    \n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n    \n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//     } catch (err) { console.error('Error deleting epic:', err); }\n//   };\n\n//   const handleDelete = async () => {\n//     if (!selectedIssue) return;\n//     await deleteIssueAPI(selectedIssue.id);\n//     const refreshed = await listIssues(projectId);\n//     setIssues(refreshed);\n//     setSelectedIssue(null);\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic Management Buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>\n//             + Create Epic\n//           </button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>\n//             ðŸ—‘ Delete Epic\n//           </button>\n//         </div>\n        \n//         {/* Create Epic Modal */}\n//         {showCreateEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowCreateEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Create New Epic</h3>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter epic name (e.g., Frontend, Backend, Database)\"\n//                   value={newEpicName}\n//                   onChange={(e) => setNewEpicName(e.target.value)}\n//                   className=\"epic-modal-input\"\n//                   autoFocus\n//                 />\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowCreateEpic(false); setNewEpicName(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-create\" onClick={handleCreateEpic}>\n//                     Create Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n        \n//         {/* Delete Epic Modal */}\n//         {showDeleteEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowDeleteEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Delete Epic</h3>\n//                 <p className=\"delete-warning\">Select an epic to delete. This will also delete all issues in the epic.</p>\n//                 <select \n//                   value={epicToDelete} \n//                   onChange={(e) => setEpicToDelete(e.target.value)}\n//                   className=\"epic-modal-select\"\n//                 >\n//                   <option value=\"\">Select an epic...</option>\n//                   {epics.map(epic => (\n//                     <option key={epic.id} value={epic.id}>\n//                       {epic.name} ({swimlanes.find(s => s.id === epic.id)?.issues.length || 0} issues)\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowDeleteEpic(false); setEpicToDelete(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteEpic} disabled={!epicToDelete}>\n//                     Delete Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>\n//                 {isOpen ? 'â–¼' : 'â–¶'}\n//               </button>\n//               <span className=\"swimlane-icon\">âš¡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => onTitleChange(lane.id, e.target.value)} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {STATUSES.map(status => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>âœ”</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>âœ–</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => (\n//                         <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                           <div className=\"card-top\">\n//                             <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                             <span className=\"card-id\">{issue.id}</span>\n//                           </div>\n//                           <div className=\"card-title\">{issue.title}</div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Issue Modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <h2 style={{ gridColumn: \"span 3\" }}>{editIssue.epicName}\n//               <button className=\"modal-delete-btn\" onClick={handleDelete}>ðŸ—‘</button>\n//             </h2>\n\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n            \n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {STATUSES.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\" }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Styles */}\n//       <style>{`\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n       \n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n       \n//         .epic-management-section {\n//           margin-bottom: 20px;\n//           position: relative;\n//         }\n       \n//         .epic-buttons-container {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 12px;\n//           margin-bottom: 10px;\n//         }\n       \n//         .create-epic-btn {\n//           background: #1976d2;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n       \n//         .create-epic-btn:hover {\n//           background: #1565c0;\n//         }\n       \n//         .delete-epic-btn {\n//           background: #d32f2f;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n       \n//         .delete-epic-btn:hover {\n//           background: #c62828;\n//         }\n       \n//         .delete-epic-btn:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n       \n//         .epic-modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n       \n//         .epic-modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           max-width: 500px;\n//           width: 100%;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n       \n//         .epic-modal-content h3 {\n//           margin: 0 0 16px 0;\n//           font-size: 18px;\n//           font-weight: 600;\n//           color: #172b4d;\n//         }\n       \n//         .delete-warning {\n//           color: #d32f2f;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           padding: 8px;\n//           background: #ffebee;\n//           border-radius: 4px;\n//         }\n       \n//         .epic-modal-input, .epic-modal-select {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 10px 12px;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           box-sizing: border-box;\n//         }\n       \n//         .epic-modal-input:focus, .epic-modal-select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n       \n//         .epic-modal-actions {\n//           display: flex;\n//           gap: 12px;\n//           justify-content: flex-end;\n//         }\n       \n//         .btn-cancel {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-create {\n//           background: #1976d2;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-delete {\n//           background: #d32f2f;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-delete:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n       \n//         .swimlane {\n//           background: white;\n//           border-radius: 8px;\n//           margin-bottom: 16px;\n//           box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n//           overflow: hidden;\n//         }\n       \n//         .swimlane-header {\n//           display: flex;\n//           align-items: center;\n//           padding: 12px 16px;\n//           background: #fafbfc;\n//           border-bottom: 1px solid #dfe1e5;\n//           font-weight: 600;\n//           font-size: 14px;\n//           color: #172b4d;\n//         }\n       \n//         .swimlane-toggle {\n//           background: none;\n//           border: none;\n//           font-size: 12px;\n//           margin-right: 8px;\n//           cursor: pointer;\n//           color: #5e6c84;\n//         }\n       \n//         .swimlane-icon {\n//           margin-right: 8px;\n//           font-size: 16px;\n//           color: #5e6c84;\n//         }\n       \n//         .swimlane-title-input {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 4px 8px;\n//           font-size: 14px;\n//           font-weight: 600;\n//           background: white;\n//           margin-right: 8px;\n//           min-width: 150px;\n//           color: #172b4d;\n//         }\n       \n//         .swimlane-count {\n//           color: #5e6c84;\n//           font-size: 12px;\n//           font-weight: normal;\n//         }\n       \n//         .kanban-row {\n//           display: flex;\n//           padding: 16px;\n//           gap: 12px;\n//           overflow-x: auto;\n//           min-height: 300px;\n//         }\n       \n//         .kanban-column {\n//           flex: 0 0 260px;\n//           background: #f5f6f8;\n//           border-radius: 6px;\n//           padding: 12px;\n//           display: flex;\n//           flex-direction: column;\n//           gap: 8px;\n//           border: 1px solid #dfe1e5;\n//         }\n       \n//         .col-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 4px;\n//         }\n       \n//         .col-title {\n//           font-weight: 600;\n//           font-size: 12px;\n//           color: #5e6c84;\n//           text-transform: uppercase;\n//           letter-spacing: 0.5px;\n//         }\n       \n//         .col-count {\n//           background: #dfe1e5;\n//           color: #5e6c84;\n//           border-radius: 10px;\n//           padding: 1px 6px;\n//           font-size: 11px;\n//           font-weight: 600;\n//         }\n       \n//         .col-create {\n//           margin-bottom: 4px;\n//         }\n       \n//         .create-link {\n//           color: #5e6c84;\n//           cursor: pointer;\n//           font-size: 12px;\n//           padding: 6px;\n//           display: block;\n//           border-radius: 3px;\n//           transition: background-color 0.2s;\n//         }\n       \n//         .create-link:hover {\n//           background: #ebecf0;\n//         }\n       \n//         .create-card {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//         }\n       \n//         .create-input {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 6px;\n//           font-size: 12px;\n//           resize: vertical;\n//           margin-bottom: 6px;\n//           color: #172b4d;\n//         }\n       \n//         .create-actions {\n//           display: flex;\n//           gap: 6px;\n//           align-items: center;\n//         }\n       \n//         .create-select {\n//           flex: 1;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           font-size: 11px;\n//           color: #172b4d;\n//         }\n       \n//         .create-btn {\n//           background: #f5f6f8;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           cursor: pointer;\n//           font-size: 11px;\n//           color: #5e6c84;\n//         }\n       \n//         .card-item {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 6px;\n//           padding: 12px;\n//           cursor: pointer;\n//           transition: all 0.2s;\n//           box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n//         }\n       \n//         .card-item:hover {\n//           box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n//           border-color: #c1c7d0;\n//         }\n       \n//         .card-top {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 6px;\n//         }\n       \n//         .card-tag {\n//           font-size: 10px;\n//           font-weight: 600;\n//           padding: 2px 4px;\n//           border-radius: 3px;\n//           text-transform: uppercase;\n//         }\n       \n//         .card-tag-task {\n//           background: #e3f2fd;\n//           color: #1976d2;\n//         }\n       \n//         .card-tag-bug {\n//           background: #ffebee;\n//           color: #d32f2f;\n//         }\n       \n//         .card-tag-subtask {\n//           background: #f3e5f5;\n//           color: #7b1fa2;\n//         }\n       \n//         .card-id {\n//           color: #5e6c84;\n//           font-size: 10px;\n//           font-family: monospace;\n//         }\n       \n//         .card-title {\n//           font-size: 13px;\n//           line-height: 1.3;\n//           color: #172b4d;\n//           font-weight: 500;\n//         }\n       \n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n       \n//         .modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           display: grid;\n//           grid-template-columns: repeat(3, 1fr);\n//           gap: 16px;\n//           max-width: 900px;\n//           width: 100%;\n//           max-height: 80vh;\n//           overflow-y: auto;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n       \n//         .modal h2 {\n//           margin: 0 0 16px 0;\n//           font-size: 20px;\n//           font-weight: 600;\n//           color: #172b4d;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n       \n//         .modal-delete-btn {\n//           background: #d32f2f;\n//           border: none;\n//           border-radius: 4px;\n//           padding: 6px 10px;\n//           color: white;\n//           cursor: pointer;\n//           font-size: 12px;\n//         }\n       \n//         .modal-field {\n//           display: flex;\n//           flex-direction: column;\n//           gap: 4px;\n//         }\n       \n//         .modal-field label {\n//           font-size: 12px;\n//           font-weight: 600;\n//           color: #5e6c84;\n//         }\n       \n//         .modal-field input, .modal-field textarea, .modal-field select {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//           font-size: 13px;\n//           background: white;\n//           transition: border-color 0.2s;\n//           color: #172b4d;\n//         }\n       \n//         .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n       \n//         .modal-field input:disabled {\n//           background: #f5f6f8;\n//           color: #5e6c84;\n//         }\n       \n//         .modal-actions {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 8px;\n//           margin-top: 16px;\n//         }\n       \n//         .btn-reset {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-save {\n//           background: #1976d2;\n//           border: none;\n//           color: white;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const STATUSES = [\n//   'backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'\n// ];\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'u2', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'u4', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const mockEpics = [\n//   { id: 'p1', name: 'Frontend' },\n//   { id: 'p2', name: 'Middleware' }\n// ];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n\n// const listEpics = async () => {\n//   await simulateApiDelay();\n//   return mockEpics;\n// };\n\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = {\n//     id: 'p' + (mockEpics.length + 1),\n//     name: epicName\n//   };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) {\n//     mockEpics.splice(epicIndex, 1);\n//   }\n  \n//   // Also delete all issues associated with this epic\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => {\n//     if (issue.epic === epicId) {\n//       issueIndices.push(index);\n//     }\n//   });\n  \n//   // Remove issues from highest index to lowest to avoid index issues\n//   issueIndices.sort((a, b) => b - a).forEach(index => {\n//     mockIssues.splice(index, 1);\n//   });\n// };\n\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n\n// const createIssueAPI = async (issue) => {\n//   await simulateApiDelay();\n//   mockIssues.push(issue);\n// };\n\n// const deleteIssueAPI = async (issueId) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === issueId);\n//   if (idx > -1) mockIssues.splice(idx, 1);\n// };\n\n// const updateIssueAPI = async (updatedIssue) => {\n//   await simulateApiDelay();\n//   const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n//   if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue };\n// };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([\n//           listIssues(projectId),\n//           listEpics()\n//         ]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {};\n//         const initialTitles = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//       } catch (err) {\n//         console.error('Failed to load data:', err);\n//       }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const onTitleChange = (id, value) => setCustomTitles(prev => ({ ...prev, [id]: value }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) {\n//       console.error('Error moving issue:', err);\n//     }\n//   };\n\n//   const onDragOver = e => e.preventDefault();\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n  \n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error('Error creating issue:', err); }\n//   };\n\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) { alert('Epic name is required'); return; }\n//     try {\n//       const newEpic = await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n      \n//       // Update open swimlanes and custom titles for the new epic\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//     } catch (err) { console.error('Error creating epic:', err); }\n//   };\n\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) { alert('Please select an epic to delete'); return; }\n    \n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n    \n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//     } catch (err) { console.error('Error deleting epic:', err); }\n//   };\n\n//   const handleDelete = async () => {\n//     if (!selectedIssue) return;\n//     await deleteIssueAPI(selectedIssue.id);\n//     const refreshed = await listIssues(projectId);\n//     setIssues(refreshed);\n//     setSelectedIssue(null);\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic Management Buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>\n//             + Create Epic\n//           </button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>\n//             ðŸ—‘ Delete Epic\n//           </button>\n//         </div>\n        \n//         {/* Create Epic Modal */}\n//         {showCreateEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowCreateEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Create New Epic</h3>\n//                 <input\n//                   type=\"text\"\n//                   placeholder=\"Enter epic name (e.g., Frontend, Backend, Database)\"\n//                   value={newEpicName}\n//                   onChange={(e) => setNewEpicName(e.target.value)}\n//                   className=\"epic-modal-input\"\n//                   autoFocus\n//                 />\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowCreateEpic(false); setNewEpicName(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-create\" onClick={handleCreateEpic}>\n//                     Create Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n        \n//         {/* Delete Epic Modal */}\n//         {showDeleteEpic && (\n//           <div className=\"epic-modal-overlay\" onClick={() => setShowDeleteEpic(false)}>\n//             <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n//               <div className=\"epic-modal-content\">\n//                 <h3>Delete Epic</h3>\n//                 <p className=\"delete-warning\">Select an epic to delete. This will also delete all issues in the epic.</p>\n//                 <select \n//                   value={epicToDelete} \n//                   onChange={(e) => setEpicToDelete(e.target.value)}\n//                   className=\"epic-modal-select\"\n//                 >\n//                   <option value=\"\">Select an epic...</option>\n//                   {epics.map(epic => (\n//                     <option key={epic.id} value={epic.id}>\n//                       {epic.name} ({swimlanes.find(s => s.id === epic.id)?.issues.length || 0} issues)\n//                     </option>\n//                   ))}\n//                 </select>\n//                 <div className=\"epic-modal-actions\">\n//                   <button className=\"btn-cancel\" onClick={() => { setShowDeleteEpic(false); setEpicToDelete(''); }}>\n//                     Cancel\n//                   </button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteEpic} disabled={!epicToDelete}>\n//                     Delete Epic\n//                   </button>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>\n//                 {isOpen ? 'â–¼' : 'â–¶'}\n//               </button>\n//               <span className=\"swimlane-icon\">âš¡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => onTitleChange(lane.id, e.target.value)} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {STATUSES.map(status => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                         <div className=\"col-actions\">\n//                           <span className=\"col-create-btn\" onClick={() => handleCreateClick(lane.id)}>+</span>\n//                           <span className=\"col-menu\">...</span>\n//                         </div>\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>âœ”</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>âœ–</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => (\n//                         <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                           <div className=\"card-top\">\n//                             <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                             <span className=\"card-id\">{issue.id}</span>\n//                           </div>\n//                           <div className=\"card-title\">{issue.title}</div>\n//                         </div>\n//                       ))}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Issue Modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <h2 style={{ gridColumn: \"span 3\" }}>{editIssue.epicName}\n//               <button className=\"modal-delete-btn\" onClick={handleDelete}>ðŸ—‘</button>\n//             </h2>\n\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n            \n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {STATUSES.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\" }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Styles */}\n//       <style>{`\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n       \n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n       \n//         .epic-management-section {\n//           margin-bottom: 20px;\n//           position: relative;\n//         }\n       \n//         .epic-buttons-container {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 12px;\n//           margin-bottom: 10px;\n//         }\n       \n//         .create-epic-btn {\n//           background: #1976d2;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n       \n//         .create-epic-btn:hover {\n//           background: #1565c0;\n//         }\n       \n//         .delete-epic-btn {\n//           background: #d32f2f;\n//           color: white;\n//           border: none;\n//           padding: 10px 16px;\n//           border-radius: 6px;\n//           cursor: pointer;\n//           font-size: 14px;\n//           font-weight: 600;\n//           transition: background-color 0.2s;\n//           margin: 5px;\n//         }\n       \n//         .delete-epic-btn:hover {\n//           background: #c62828;\n//         }\n       \n//         .delete-epic-btn:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n       \n//         .epic-modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n       \n//         .epic-modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           max-width: 500px;\n//           width: 100%;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n       \n//         .epic-modal-content h3 {\n//           margin: 0 0 16px 0;\n//           font-size: 18px;\n//           font-weight: 600;\n//           color: #172b4d;\n//         }\n       \n//         .delete-warning {\n//           color: #d32f2f;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           padding: 8px;\n//           background: #ffebee;\n//           border-radius: 4px;\n//         }\n       \n//         .epic-modal-input, .epic-modal-select {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 10px 12px;\n//           font-size: 14px;\n//           margin-bottom: 16px;\n//           box-sizing: border-box;\n//         }\n       \n//         .epic-modal-input:focus, .epic-modal-select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n       \n//         .epic-modal-actions {\n//           display: flex;\n//           gap: 12px;\n//           justify-content: flex-end;\n//         }\n       \n//         .btn-cancel {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-create {\n//           background: #1976d2;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-delete {\n//           background: #d32f2f;\n//           border: none;\n//           padding: 10px 20px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 14px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-delete:disabled {\n//           background: #cccccc;\n//           cursor: not-allowed;\n//         }\n       \n//         .swimlane {\n//           background: white;\n//           border-radius: 8px;\n//           margin-bottom: 16px;\n//           box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n//           overflow: hidden;\n//         }\n       \n//         .swimlane-header {\n//           display: flex;\n//           align-items: center;\n//           padding: 12px 16px;\n//           background: #fafbfc;\n//           border-bottom: 1px solid #dfe1e5;\n//           font-weight: 600;\n//           font-size: 14px;\n//           color: #172b4d;\n//         }\n       \n//         .swimlane-toggle {\n//           background: none;\n//           border: none;\n//           font-size: 12px;\n//           margin-right: 8px;\n//           cursor: pointer;\n//           color: #5e6c84;\n//         }\n       \n//         .swimlane-icon {\n//           margin-right: 8px;\n//           font-size: 16px;\n//           color: #5e6c84;\n//         }\n       \n//         .swimlane-title-input {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 4px 8px;\n//           font-size: 14px;\n//           font-weight: 600;\n//           background: white;\n//           margin-right: 8px;\n//           min-width: 150px;\n//           color: #172b4d;\n//         }\n       \n//         .swimlane-count {\n//           color: #5e6c84;\n//           font-size: 12px;\n//           font-weight: normal;\n//         }\n       \n//         .kanban-row {\n//           display: flex;\n//           padding: 16px;\n//           gap: 12px;\n//           overflow-x: auto;\n//           min-height: 300px;\n//         }\n       \n//         .kanban-column {\n//           flex: 0 0 260px;\n//           background: #f5f6f8;\n//           border-radius: 6px;\n//           padding: 12px;\n//           display: flex;\n//           flex-direction: column;\n//           gap: 8px;\n//           border: 1px solid #dfe1e5;\n//         }\n       \n//         .col-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 4px;\n//         }\n       \n//         .col-title {\n//           font-weight: 600;\n//           font-size: 12px;\n//           color: #5e6c84;\n//           text-transform: uppercase;\n//           letter-spacing: 0.5px;\n//         }\n       \n//         .col-count {\n//           background: #dfe1e5;\n//           color: #5e6c84;\n//           border-radius: 10px;\n//           padding: 1px 6px;\n//           font-size: 11px;\n//           font-weight: 600;\n//         }\n       \n//         .col-actions {\n//           display: flex;\n//           gap: 8px;\n//         }\n       \n//         .col-create-btn, .col-menu {\n//           cursor: pointer;\n//           font-size: 16px;\n//           color: #5e6c84;\n//           padding: 2px 6px;\n//           border-radius: 3px;\n//         }\n       \n//         .col-create-btn:hover, .col-menu:hover {\n//           background: #ebecf0;\n//         }\n       \n//         .col-create {\n//           margin-bottom: 4px;\n//         }\n       \n//         .create-link {\n//           color: #5e6c84;\n//           cursor: pointer;\n//           font-size: 12px;\n//           padding: 6px;\n//           display: block;\n//           border-radius: 3px;\n//           transition: background-color 0.2s;\n//         }\n       \n//         .create-link:hover {\n//           background: #ebecf0;\n//         }\n       \n//         .create-card {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//         }\n       \n//         .create-input {\n//           width: 100%;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 6px;\n//           font-size: 12px;\n//           resize: vertical;\n//           margin-bottom: 6px;\n//           color: #172b4d;\n//         }\n       \n//         .create-actions {\n//           display: flex;\n//           gap: 6px;\n//           align-items: center;\n//         }\n       \n//         .create-select {\n//           flex: 1;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           font-size: 11px;\n//           color: #172b4d;\n//         }\n       \n//         .create-btn {\n//           background: #f5f6f8;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 3px;\n//           padding: 4px;\n//           cursor: pointer;\n//           font-size: 11px;\n//           color: #5e6c84;\n//         }\n       \n//         .card-item {\n//           background: white;\n//           border: 1px solid #dfe1e5;\n//           border-radius: 6px;\n//           padding: 12px;\n//           cursor: pointer;\n//           transition: all 0.2s;\n//           box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n//         }\n       \n//         .card-item:hover {\n//           box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n//           border-color: #c1c7d0;\n//         }\n       \n//         .card-top {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 6px;\n//         }\n       \n//         .card-tag {\n//           font-size: 10px;\n//           font-weight: 600;\n//           padding: 2px 4px;\n//           border-radius: 3px;\n//           text-transform: uppercase;\n//         }\n       \n//         .card-tag-task {\n//           background: #e3f2fd;\n//           color: #1976d2;\n//         }\n       \n//         .card-tag-bug {\n//           background: #ffebee;\n//           color: #d32f2f;\n//         }\n       \n//         .card-tag-subtask {\n//           background: #f3e5f5;\n//           color: #7b1fa2;\n//         }\n       \n//         .card-id {\n//           color: #5e6c84;\n//           font-size: 10px;\n//           font-family: monospace;\n//         }\n       \n//         .card-title {\n//           font-size: 13px;\n//           line-height: 1.3;\n//           color: #172b4d;\n//           font-weight: 500;\n//         }\n       \n//         .modal-overlay {\n//           position: fixed;\n//           top: 0;\n//           left: 0;\n//           right: 0;\n//           bottom: 0;\n//           background: rgba(0, 0, 0, 0.5);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           z-index: 1000;\n//           padding: 20px;\n//         }\n       \n//         .modal {\n//           background: white;\n//           border-radius: 8px;\n//           padding: 24px;\n//           display: grid;\n//           grid-template-columns: repeat(3, 1fr);\n//           gap: 16px;\n//           max-width: 900px;\n//           width: 100%;\n//           max-height: 80vh;\n//           overflow-y: auto;\n//           box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n//         }\n       \n//         .modal h2 {\n//           margin: 0 0 16px 0;\n//           font-size: 20px;\n//           font-weight: 600;\n//           color: #172b4d;\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//         }\n       \n//         .modal-delete-btn {\n//           background: #d32f2f;\n//           border: none;\n//           border-radius: 4px;\n//           padding: 6px 10px;\n//           color: white;\n//           cursor: pointer;\n//           font-size: 12px;\n//         }\n       \n//         .modal-field {\n//           display: flex;\n//           flex-direction: column;\n//           gap: 4px;\n//         }\n       \n//         .modal-field label {\n//           font-size: 12px;\n//           font-weight: 600;\n//           color: #5e6c84;\n//         }\n       \n//         .modal-field input, .modal-field textarea, .modal-field select {\n//           border: 1px solid #dfe1e5;\n//           border-radius: 4px;\n//           padding: 8px;\n//           font-size: 13px;\n//           background: white;\n//           transition: border-color 0.2s;\n//           color: #172b4d;\n//         }\n       \n//         .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//           outline: none;\n//           border-color: #1976d2;\n//         }\n       \n//         .modal-field input:disabled {\n//           background: #f5f6f8;\n//           color: #5e6c84;\n//         }\n       \n//         .modal-actions {\n//           display: flex;\n//           justify-content: flex-end;\n//           gap: 8px;\n//           margin-top: 16px;\n//         }\n       \n//         .btn-reset {\n//           background: #5e6c84;\n//           border: none;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           color: white;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n       \n//         .btn-save {\n//           background: #1976d2;\n//           border: none;\n//           color: white;\n//           padding: 8px 16px;\n//           border-radius: 4px;\n//           cursor: pointer;\n//           font-size: 12px;\n//           font-weight: 600;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n\n\n\n//////////////////////////////////////////////////////////////////\n//for updated the ticket\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst mockIssues = [\n  { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'John Doe', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n  { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'Jane Smith', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n];\n\nconst defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\nconst mockEpics = [{ id: 'p1', name: 'Frontend' }, { id: 'p2', name: 'Middleware' }];\n\nconst simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\nconst listIssues = async (projectId) => {\n  await simulateApiDelay();\n  return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n};\nconst listEpics = async () => { await simulateApiDelay(); return mockEpics; };\nconst createEpicAPI = async (epicName) => {\n  await simulateApiDelay();\n  const newEpic = { id: 'p' + (mockEpics.length + 1), name: epicName };\n  mockEpics.push(newEpic);\n  return newEpic;\n};\nconst deleteEpicAPI = async (epicId) => {\n  await simulateApiDelay();\n  const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n  if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n  const issueIndices = [];\n  mockIssues.forEach((issue, index) => { if (issue.epic === epicId) issueIndices.push(index); });\n  issueIndices.sort((a, b) => b - a).forEach(index => { mockIssues.splice(index, 1); });\n};\nconst moveIssue = async (issueId, status) => {\n  await simulateApiDelay();\n  const issue = mockIssues.find(i => i.id === issueId);\n  if (!issue) throw new Error('Issue not found');\n  issue.status = status;\n};\nconst createIssueAPI = async (issue) => { await simulateApiDelay(); mockIssues.push(issue); };\nconst deleteIssueAPI = async (issueId) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === issueId); if (idx > -1) mockIssues.splice(idx, 1); };\nconst updateIssueAPI = async (updatedIssue) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === updatedIssue.id); if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue }; };\n\nconst getSwimlanes = (issues, epics) =>\n  epics.map(epic => {\n    const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n    return { id: epic.id, title: epic.name, issues: epicIssues };\n  });\n\nexport default function KanbanBoard() {\n  const { projectId } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [openSwimlanes, setOpenSwimlanes] = useState({});\n  const [customTitles, setCustomTitles] = useState({});\n  const [createLaneId, setCreateLaneId] = useState(null);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [newTaskType, setNewTaskType] = useState('Task');\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [editIssue, setEditIssue] = useState(null);\n  const [showCreateEpic, setShowCreateEpic] = useState(false);\n  const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [epicToDelete, setEpicToDelete] = useState('');\n  const [columnsByLane, setColumnsByLane] = useState({});\n  const [columnModal, setColumnModal] = useState(null);\n  const [columnInput, setColumnInput] = useState('');\n  const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n        setIssues(issuesData);\n        setEpics(epicsData);\n        const lanes = getSwimlanes(issuesData, epicsData);\n        const initialOpen = {}, initialTitles = {}, initialCols = {};\n        lanes.forEach(lane => {\n          initialOpen[lane.id] = true;\n          initialTitles[lane.id] = lane.title;\n          initialCols[lane.id] = defaultStatuses.slice();\n        });\n        setOpenSwimlanes(initialOpen);\n        setCustomTitles(initialTitles);\n        setColumnsByLane(initialCols);\n      } catch (err) { console.error(err); }\n    };\n    fetchData();\n  }, [projectId]);\n\n  const openAddColumnModal = (e, laneId, colIndex) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n    setColumnModal({ laneId, colIndex, type: 'add' });\n    setColumnInput('');\n  };\n  const openEditColumnModal = (e, laneId, colIndex, status) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n    setColumnModal({ laneId, colIndex, type: 'menu' });\n    setColumnInput(status);\n  };\n  const handleAddColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    setColumnsByLane(prev => {\n      const cols = [...prev[columnModal.laneId]];\n      if (cols.includes(name.toLowerCase())) alert('Column name already exists');\n      else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n      return { ...prev, [columnModal.laneId]: cols };\n    });\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleEditColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    const { laneId, colIndex } = columnModal;\n    const oldCol = columnsByLane[laneId][colIndex];\n    if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n      alert('Column name already exists');\n      return;\n    }\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols[colIndex] = name.toLowerCase();\n      return { ...prev, [laneId]: cols };\n    });\n    const updatedIssues = issues.map(issue =>\n      (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? { ...issue, status: name.toLowerCase() } : issue\n    );\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleDeleteColumn = () => {\n    const { laneId, colIndex } = columnModal;\n    const removedCol = columnsByLane[laneId][colIndex];\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols.splice(colIndex, 1);\n      return { ...prev, [laneId]: cols };\n    });\n    const updatedIssues = issues.map(issue =>\n      (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? { ...issue, status: 'backlog' } : issue\n    );\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n  const byStatus = (collection, status) => collection.filter(i => i.status === status);\n\n  const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n  const onDrop = async (e, targetStatus, swimlaneId) => {\n    e.preventDefault();\n    try {\n      const issueId = e.dataTransfer.getData('text/plain');\n      const issue = issues.find(i => i.id === issueId);\n      const srcLaneId = issue.epic || issue.projectId;\n      if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n        await moveIssue(issueId, targetStatus);\n        const refreshed = await listIssues(projectId);\n        setIssues(refreshed);\n      }\n    } catch (err) { console.error(err); }\n  };\n  const onDragOver = e => e.preventDefault();\n\n  const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n  const handleCreateSubmit = async lane => {\n    if (!newTaskText.trim()) { alert('Task title is required'); return; }\n    const newIssue = {\n      id: Math.random().toString(36).slice(2),\n      epic: lane.id,\n      projectId: lane.id,\n      epicName: lane.title,\n      title: newTaskText,\n      status: 'backlog',\n      assignee: '',\n      type: newTaskType,\n      storyPoints: '',\n      labels: [],\n      dueDate: '',\n      reporter: 'system',\n      priority: 'Medium',\n      startDate: new Date().toISOString().split('T')[0],\n      description: '',\n      subtasks: '',\n      comments: ''\n    };\n    try {\n      await createIssueAPI(newIssue);\n      const refreshed = await listIssues(projectId);\n      setIssues(refreshed);\n      setCreateLaneId(null);\n    } catch (err) { console.error(err); }\n  };\n\n  const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n  const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n  const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n  const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n  // Create Epic Modal Handlers\n  const handleCreateEpic = async () => {\n    if (!newEpicName.trim()) {\n      alert('Epic name is required');\n      return;\n    }\n    try {\n      await createEpicAPI(newEpicName);\n      const updatedEpics = await listEpics();\n      setEpics(updatedEpics);\n      setNewEpicName('');\n      setShowCreateEpic(false);\n      const newEpic = updatedEpics[updatedEpics.length - 1];\n      setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n      setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n      setColumnsByLane(prev => ({ ...prev, [newEpic.id]: defaultStatuses.slice() }));\n    } catch (error) {\n      console.error('Error creating epic:', error);\n    }\n  };\n\n  // Delete Epic Modal Handler\n  const handleDeleteEpic = async () => {\n    if (!epicToDelete) {\n      alert('Please select an epic to delete');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n      return;\n    }\n    try {\n      await deleteEpicAPI(epicToDelete);\n      const [refreshedIssues, refreshedEpics] = await Promise.all([\n        listIssues(projectId),\n        listEpics()\n      ]);\n      setIssues(refreshedIssues);\n      setEpics(refreshedEpics);\n      setEpicToDelete('');\n      setShowDeleteEpic(false);\n      setColumnsByLane(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setOpenSwimlanes(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setCustomTitles(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n    } catch (error) {\n      console.error('Error deleting epic:', error);\n    }\n  };\n\n  const swimlanes = getSwimlanes(issues, epics);\n\n  return (\n    <div className=\"board-wrap\">\n      {/* Epic management buttons */}\n      <div className=\"epic-management-section\">\n        <div className=\"epic-buttons-container\">\n          <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>+ Create Epic</button>\n          <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>ðŸ—‘ Delete Epic</button>\n        </div>\n\n        {/* Create Epic Modal */}\n        {showCreateEpic && (\n          <div className=\"epic-modal-overlay\" onClick={() => setShowCreateEpic(false)}>\n            <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n              <div className=\"epic-modal-content\">\n                <h3>Create New Epic</h3>\n                <input type=\"text\" placeholder=\"Enter epic name\" value={newEpicName} onChange={(e) => setNewEpicName(e.target.value)} className=\"epic-modal-input\" autoFocus />\n                <div className=\"epic-modal-actions\">\n                  <button className=\"btn-cancel\" onClick={() => { setShowCreateEpic(false); setNewEpicName(''); }}>Cancel</button>\n                  <button className=\"btn-create\" onClick={handleCreateEpic}>Create Epic</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Delete Epic Modal */}\n        {showDeleteEpic && (\n          <div className=\"epic-modal-overlay\" onClick={() => setShowDeleteEpic(false)}>\n            <div className=\"epic-modal\" onClick={e => e.stopPropagation()}>\n              <div className=\"epic-modal-content\">\n                <h3>Delete Epic</h3>\n                <p className=\"delete-warning\">Select an epic to delete. This will also delete all issues in the epic.</p>\n                <select value={epicToDelete} onChange={(e) => setEpicToDelete(e.target.value)} className=\"epic-modal-select\">\n                  <option value=\"\">Select an epic...</option>\n                  {epics.map(epic => (\n                    <option key={epic.id} value={epic.id}>{epic.name} ({swimlanes.find(s => s.id === epic.id)?.issues.length || 0} issues)</option>\n                  ))}\n                </select>\n                <div className=\"epic-modal-actions\">\n                  <button className=\"btn-cancel\" onClick={() => { setShowDeleteEpic(false); setEpicToDelete(''); }}>Cancel</button>\n                  <button className=\"btn-delete\" onClick={handleDeleteEpic} disabled={!epicToDelete}>Delete Epic</button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Swimlanes and columns */}\n      {swimlanes.map(lane => {\n        const isOpen = openSwimlanes[lane.id];\n        const statuses = columnsByLane[lane.id] || defaultStatuses;\n        return (\n          <section className=\"swimlane\" key={lane.id}>\n            <header className=\"swimlane-header\">\n              <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>{isOpen ? 'â–¼' : 'â–¶'}</button>\n              <span className=\"swimlane-icon\">âš¡</span>\n              <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => setCustomTitles(prev => ({ ...prev, [lane.id]: e.target.value }))} />\n              <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n            </header>\n            {isOpen && (\n              <div className=\"kanban-row\">\n                {statuses.map((status, idx) => {\n                  const issuesForStatus = byStatus(lane.issues, status);\n                  return (\n                    <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n                      <div className=\"col-header\">\n                        <span className=\"col-title\">{status.toUpperCase()}</span>\n                        <span className=\"col-icons\">\n                          <button className=\"col-icon\" title=\"Add Column\" onClick={e => openAddColumnModal(e, lane.id, idx)}>ï¼‹</button>\n                          <button className=\"col-icon\" title=\"Edit/Delete Column\" onClick={e => openEditColumnModal(e, lane.id, idx, status)}>â‹®</button>\n                        </span>\n                        {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n                      </div>\n                      <div className=\"col-create\">\n                        {status === 'backlog' && (\n                          createLaneId === lane.id ? (\n                            <div className=\"create-card\">\n                              <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n                              <div className=\"create-actions\">\n                                <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n                                  <option>Task</option><option>Subtask</option><option>Bug</option>\n                                </select>\n                                <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>âœ”</button>\n                                <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>âœ–</button>\n                              </div>\n                            </div>\n                          ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n                        )}\n                      </div>\n                      {issuesForStatus.map(issue => {\n                        const isHovered = hoveredAssigneeId === issue.id;\n                        return (\n                          <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n                            <div className=\"card-top\">\n                              <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n                              <span className=\"card-id\">{issue.id}</span>\n                            </div>\n                            <div className=\"card-title\">{issue.title}</div>\n                            <div className=\"card-meta\">\n                              {issue.dueDate && <span className=\"card-due\">ðŸ“… {issue.dueDate}</span>}\n                              <span className={`card-priority ${issue.priority.toLowerCase()}`}>âš‘ {issue.priority}</span>\n                              {issue.assignee && (\n                                <span className=\"card-assignee\" onMouseEnter={() => setHoveredAssigneeId(issue.id)} onMouseLeave={() => setHoveredAssigneeId(null)} style={{ position: 'relative', cursor: 'default', userSelect: 'none' }}>\n                                  ðŸ‘¤\n                                  {isHovered && <div className=\"assignee-tooltip\">{issue.assignee}</div>}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </section>\n        );\n      })}\n\n      {/* Column Add/Edit modal */}\n      {columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && (\n        <div className=\"epic-modal-overlay\" onClick={() => setColumnModal(null)} style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, zIndex: 1000 }}>\n          <div className=\"epic-modal\" onClick={e => e.stopPropagation()} style={{\n            position: 'absolute',\n            top: modalPosition.top,\n            left: modalPosition.left,\n            transform: 'translateX(-50%)',\n            minWidth: 280,\n            maxWidth: 320,\n            padding: 20,\n            borderRadius: 10,\n            background: 'white',\n            boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n            zIndex: 1100\n          }}>\n            {columnModal.type === 'add' ? (\n              <>\n                <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Add Column</h3>\n                <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n                <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n                  <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n                  <button className=\"btn-create\" onClick={handleAddColumn} style={btnStyle.create}>Add</button>\n                </div>\n              </>\n            ) : (\n              <>\n                <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Edit/Delete Column</h3>\n                <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n                <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n                  <button className=\"btn-save\" onClick={handleEditColumn} style={btnStyle.create}>Rename</button>\n                  <button className=\"btn-delete\" onClick={handleDeleteColumn} style={btnStyle.delete}>Delete</button>\n                  <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Issue modal */}\n      {selectedIssue && editIssue && (\n        <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n          <div className=\"modal\" onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editIssue.epicName}</h2>\n              <button className=\"modal-close-btn\" onClick={() => setSelectedIssue(null)}>âœ–</button>\n            </div>\n            <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Status</label>\n              <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n                {columnsByLane[editIssue.epic]?.map(st => <option key={st} value={st}>{st}</option>) || defaultStatuses.map(st => <option key={st} value={st}>{st}</option>)}\n              </select>\n            </div>\n            <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n            <div className=\"modal-field\"><label>Priority</label>\n              <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n                <option>Low</option><option>Medium</option><option>High</option>\n              </select>\n            </div>\n            <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n            <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n            <div className=\"modal-actions\" style={{ gridColumn: \"span 3\", alignItems: 'center' }}>\n              <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n              <button className=\"btn-save\" onClick={handleSave}>Save</button>\n              <button className=\"modal-delete-btn\" onClick={async () => {\n                if (window.confirm('Delete this issue?')) {\n                  await deleteIssueAPI(selectedIssue.id);\n                  const refreshed = await listIssues(projectId);\n                  setIssues(refreshed);\n                  setSelectedIssue(null);\n                }\n              }}>ðŸ—‘</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Inline CSS styles */}\n      <style>{`\n        /* Include the full CSS from the previous answer - Kanban board styling, tooltip, modals, buttons */\n        body {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          background-color: #f5f6f8;\n          margin: 0;\n          padding: 16px;\n        }\n        .board-wrap {\n          max-width: 100%;\n          overflow-x: auto;\n        }\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n  background-color: #f5f6f8;\n  margin: 0;\n  padding: 16px;\n}\n.board-wrap {\n  max-width: 100%;\n  overflow-x: auto;\n}\n.swimlane {\n  background: white;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  overflow: hidden;\n}\n.swimlane-header {\n  display: flex;\n  align-items: center;\n  padding: 12px 16px;\n  background: #fafbfc;\n  border-bottom: 1px solid #dfe5e5;\n  font-weight: 600;\n  font-size: 14px;\n  color: #172b4d;\n}\n.swimlane-toggle, .swimlane-icon {\n  color: #5e6c84;\n  margin-right: 8px;\n  cursor: pointer;\n}\n.swimlane-toggle {\n  border: none;\n  background: transparent;\n  font-size: 14px;\n}\n.swimlane-icon {\n  font-size: 18px;\n}\n.swimlane-title-input {\n  border: 1px solid #dfe5e5;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 14px;\n  font-weight: 600;\n  background: white;\n  margin-right: 8px;\n  min-width: 150px;\n  color: #172b4d;\n}\n.swimlane-title-input:focus {\n  outline: none;\n  border-color: #1976d2;\n}\n.swimlane-title-input::placeholder {\n  color: #a2adba;\n}\n.swimlane-title-input:hover {\n  border-color: #a2adba;\n}\n.swimlane-title-input:disabled {\n  background: #f5f6f8;\n  color: #a2adba;\n}\n.swimlane-count {\n  color: #5e6c84;\n  font-size: 12px;\n  font-weight: normal;\n  user-select: none;\n}\n.kanban-row {\n  display: flex;\n  padding: 16px;\n  gap: 12px;\n  overflow-x: auto;\n}\n.kanban-column {\n  flex: 0 0 260px;\n  background: #f5f6f8;\n  border-radius: 6px;\n  padding: 12px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  border: 1px solid #dfe5e5;\n  user-select: none;\n}\n.col-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n  gap: 6px;\n}\n.col-title {\n  font-weight: 600;\n  font-size: 12px;\n  color: #5e6c84;\n  text-transform: uppercase;\n  letter-spacing: 0.5px;\n  flex-grow: 1;\n  user-select: none;\n}\n.col-title:empty {\n  height: 20px;\n}\n.col-count {\n  background: #dfe5e5;\n  color: #5e6c84;\n  border-radius: 12px;\n  padding: 2px 8px;\n  font-size: 11px;\n  font-weight: 600;\n  user-select: none;\n  min-width: 20px;\n  text-align: center;\n}\n.col-icons {\n  display: flex;\n  gap: 6px;\n}\n.col-icon {\n  cursor: pointer;\n  color: #5e6c84;\n  font-size: 18px;\n  background: none;\n  border: none;\n  padding: 0;\n  user-select: none;\n}\n.col-icon:hover {\n  color: #1976d2;\n}\n.create-card {\n  background: white;\n  padding: 10px;\n  border-radius: 6px;\n  box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n.create-card textarea {\n  resize: vertical;\n  min-height: 50px;\n  font-size: 14px;\n  padding: 8px;\n  border-radius: 5px;\n  border: 1px solid #dfe5e5;\n  font-family: inherit;\n}\n.create-card textarea:focus {\n  outline: none;\n  border-color: #1976d2;\n}\n.create-card .create-actions {\n  display: flex;\n  align-items: center;\n  gap: 12px;\n}\n.create-card .create-actions select {\n  flex-grow: 1;\n  padding: 8px;\n  border: 1px solid #dfe5e5;\n  border-radius: 5px;\n  font-size: 14px;\n}\n.create-card button {\n  padding: 8px 12px;\n  font-size: 14px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: 1px solid #dfe5e5;\n  background: #f5f6f8;\n  user-select: none;\n  transition: background-color 0.2s;\n}\n.create-card button:hover {\n  background: #e1e7f0;\n}\n.card-item {\n  background: white;\n  border-radius: 8px;\n  padding: 12px;\n  box-shadow: 0 0 2px rgba(0,0,0,0.1);\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  border: 1px solid #dfe5e5;\n  transition: box-shadow 0.2s ease, border-color 0.2s ease;\n}\n.card-item:hover {\n  box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n  border-color: #a2adba;\n}\n.card-item .card-top {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-size: 12px;\n  font-weight: 600;\n  color: #5e6c84;\n  gap: 10px;\n}\n.card-item .card-top .card-id {\n  font-family: monospace;\n  color: #a2adba;\n  user-select: text;\n}\n.card-item .card-tags .tag {\n  border-radius: 6px;\n  padding: 3px 7px;\n  font-size: 11px;\n  font-weight: 600;\n  text-transform: uppercase;\n  white-space: nowrap;\n  user-select: none;\n  margin-right: 6px;\n}\n.tag-task {\n  background: #e1efff;\n  color: #1976d2;\n}\n.tag-bug {\n  background: #ffebec;\n  color: #d62127;\n}\n.tag-subtask {\n  background: #f5e6ff;\n  color: #772da0;\n}\n.card-item .card-title {\n  font-weight: 600;\n  font-size: 14px;\n  color: #2b3a59;\n}\n.card-item .card-meta {\n  display: flex;\n  gap: 10px;\n  font-size: 12px;\n  color: #6b7c93;\n  align-items: center;\n  user-select: none;\n}\n.card-item .card-meta span {\n  background: #f5f7fa;\n  color: #6b7c93;\n  padding: 3px 8px;\n  border-radius: 12px;\n}\n.card-item .card-meta .card-priority.low {\n  background: #d4edda;\n  color: #155724;\n}\n.card-item .card-meta .card-priority.medium {\n  background: #fff3cd;\n  color: #856404;\n}\n.card-item .card-meta .card-priority.high {\n  background: #f8d7da;\n  color: #721c24;\n}\n.card-item .card-meta .card-assignee {\n  position: relative;\n  cursor: default;\n  padding-left: 18px;\n}\n.card-item .card-meta .card-assignee:hover .tooltip {\n  display: block;\n}\n.card-item .card-meta .tooltip {\n  position: absolute;\n  top: -30px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #222;\n  color: white;\n  border-radius: 4px;\n  padding: 4px 8px;\n  font-size: 11px;\n  white-space: nowrap;\n  z-index: 10;\n  display: none;\n  user-select: none;\n}\n.modal-overlay {\n  position: fixed;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.modal {\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  width: 700px;\n  max-height: 80vh;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 16px;\n  overflow-y: auto;\n  position: relative;\n}\n.modal-header {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: 700;\n  font-size: 20px;\n  color: #2b3a59;\n}\n.modal-header button {\n  background: none;\n  border: none;\n  font-size: 22px;\n  cursor: pointer;\n  color: #a2adba;\n}\n.modal-header button:hover {\n  color: #485fc7;\n}\n.modal-field {\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n.modal-field label {\n  font-size: 12px;\n  font-weight: 600;\n  color: #6b7c93;\n  user-select: none;\n}\n.modal-field input, .modal-field textarea, .modal-field select {\n  padding: 8px 10px;\n  border-radius: 6px;\n  border: 1px solid #dfe5e5;\n  font-size: 14px;\n  color: #2b3a59;\n  font-family: inherit;\n}\n.modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n  outline: none;\n  border-color: #485fc7;\n  background: #f8fcff;\n}\n.modal-actions {\n  grid-column: 1 / -1;\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  align-items: center;\n  margin-top: 12px;\n}\nbutton.btn-reset {\n  background: #5e6c84;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-reset:hover {\n  background: #485fc7;\n}\nbutton.btn-save {\n  background: #485fc7;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-save:hover {\n  background: #374cac;\n}\nbutton.btn-delete {\n  background: #d94343;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 6px;\n  cursor: pointer;\n}\nbutton.btn-delete:hover {\n  background: #b83232;\n}\ninput[disabled] {\n  background: #efeff1;\n  cursor: not-allowed;\n  color: #b3b3b3;\n}\n.epic-modal-overlay {\n  position: fixed;\n  top: 0; left: 0; right: 0; bottom: 0;\n  background: rgba(0,0,0,0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n.epic-modal {\n  background: white;\n  border-radius: 8px;\n  width: 350px;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n  position: relative;\n}\n.epic-modal-content h3 {\n  margin: 0 0 20px 0;\n  font-weight: 700;\n  font-size: 20px;\n  color: #2b3a59;\n  user-select: none;\n}\n.epic-modal-content p.delete-warning {\n  background: #ffe6e6;\n  padding: 10px;\n  color: #d94343;\n  font-size: 14px;\n  margin-bottom: 15px;\n  border-radius: 6px;\n}\n.epic-modal-input, .epic-modal-select {\n  width: 100%;\n  padding: 10px;\n  font-size: 14px;\n  margin-bottom: 20px;\n  border-radius: 6px;\n  border: 1px solid #dfe5e5;\n  box-sizing: border-box;\n  font-family: inherit;\n}\n.epic-modal-input:focus, .epic-modal-select:focus {\n  outline: none;\n  border-color: #485fc7;\n}\n.epic-modal-actions {\n  display: flex;\n  justify-content: space-between;\n  gap: 15px;\n}\nbutton.create-epic-btn, button.delete-epic-btn {\n  background: #485fc7;\n  color: white;\n  font-weight: 600;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 15px;\n  user-select: none;\n}\nbutton.create-epic-btn:hover, button.delete-epic-btn:hover {\n  background: #374cac;\n}\nbutton.delete-epic-btn {\n  background: #d94343;\n}\nbutton.delete-epic-btn:hover {\n  background: #b83232;\n}\n\n      `}</style>\n\n    </div>\n  );\n}\n\nconst btnStyle = {\n  cancel: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#5e6c84',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  create: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#1976d2',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  delete: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#d32f2f',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAEA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,UAAU,GAAG,CACjB;EAAEC,EAAE,EAAE,IAAI;EAAEC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}