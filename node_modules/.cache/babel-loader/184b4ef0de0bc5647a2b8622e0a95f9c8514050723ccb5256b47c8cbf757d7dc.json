{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battina srinuvasurao\\\\OneDrive\\\\Desktop\\\\userstool\\\\src\\\\components\\\\timeline\\\\Timeline.js\",\n  _s = $RefreshSig$();\n// for full code \n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\nimport gantt from \"dhtmlx-gantt\";\nimport { useProjects } from \"../../context/ProjectContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst priorityOptions = [{\n  value: \"Low\",\n  label: \"Low\"\n}, {\n  value: \"Medium\",\n  label: \"Medium\"\n}, {\n  value: \"High\",\n  label: \"High\"\n}, {\n  value: \"Critical\",\n  label: \"Critical\"\n}];\nconst Timeline = () => {\n  _s();\n  const ganttContainer = useRef(null);\n  const {\n    projects,\n    addProject\n  } = useProjects();\n  const [newProjectText, setNewProjectText] = useState(\"\");\n  const [newProjectDate, setNewProjectDate] = useState(\"\");\n  const [newProjectTime, setNewProjectTime] = useState(\"\");\n  const [newProjectDuration, setNewProjectDuration] = useState(\"\");\n  const [newProjectPriority, setNewProjectPriority] = useState(\"Low\");\n  const [hover, setHover] = useState(false);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n  const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [lastAddedId, setLastAddedId] = useState(null);\n  useEffect(() => {\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\n    gantt.config.readonly = false;\n    gantt.config.drag_move = true;\n    gantt.config.drag_resize = true;\n    gantt.config.drag_links = true;\n    gantt.config.auto_scheduling = true;\n    gantt.config.show_errors = false;\n    gantt.config.highlight_critical_path = true;\n    gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\n    gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\n    gantt.config.subscales = windowWidth > 768 ? [{\n      unit: \"week\",\n      step: 1,\n      date: \"%j, %D\"\n    }] : [{\n      unit: \"day\",\n      step: 1,\n      date: \"%d\"\n    }];\n\n    // Add grid columns, including new Priority column\n    gantt.config.columns = [{\n      name: \"text\",\n      label: \"Task name\",\n      tree: true,\n      width: \"*\"\n    }, {\n      name: \"start_date\",\n      label: \"Start time\",\n      align: \"center\",\n      width: 100,\n      template: task => task.start_date ? gantt.templates.date_grid(task.start_date) : \"\"\n    }, {\n      name: \"duration\",\n      label: \"Duration\",\n      align: \"center\",\n      width: 70\n    }, {\n      name: \"time\",\n      label: \"Time\",\n      align: \"center\",\n      width: 70,\n      template: function (task) {\n        if (!task.start_date) return \"\";\n        const d = gantt.date.parseDate(task.start_date, \"%Y-%m-%d %H:%i\");\n        const hh = d.getHours().toString().padStart(2, \"0\");\n        const mm = d.getMinutes().toString().padStart(2, \"0\");\n        return `${hh}:${mm}`;\n      }\n    }, {\n      name: \"priority\",\n      label: \"Priority\",\n      align: \"center\",\n      width: 90,\n      template: function (task) {\n        return task.priority || \"Low\";\n      }\n    }, {\n      name: \"add\",\n      label: \"\",\n      width: 44\n    }];\n    gantt.init(ganttContainer.current);\n    gantt.clearAll();\n    gantt.parse({\n      data: projects,\n      links: [{\n        id: 1,\n        source: 1,\n        target: 2,\n        type: \"0\"\n      }, {\n        id: 2,\n        source: 2,\n        target: 3,\n        type: \"0\"\n      }, {\n        id: 3,\n        source: 3,\n        target: 4,\n        type: \"0\"\n      }, {\n        id: 4,\n        source: 4,\n        target: 5,\n        type: \"0\"\n      }]\n    });\n    gantt.render();\n  }, [projects, windowWidth]);\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      setWindowWidth(width);\n      setIsMobile(width <= 768);\n      setIsSmallMobile(width <= 480);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  // Timer to update currentTime every second\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Update the start_date of the last added task to the current time, every second\n  useEffect(() => {\n    if (lastAddedId === null) return;\n    const ganttTask = gantt.getTask(lastAddedId);\n    if (!ganttTask) return;\n    const parsedStartDate = gantt.date.parseDate(ganttTask.start_date, \"%Y-%m-%d %H:%i\");\n    if (!parsedStartDate) return;\n\n    // Only update if start_date differs from currentTime (ignoring seconds for smoothness)\n    const timeDiff = Math.abs(parsedStartDate.getTime() - currentTime.getTime());\n    if (timeDiff >= 1000) {\n      gantt.getTask(lastAddedId).start_date = currentTime;\n      gantt.updateTask(lastAddedId);\n    }\n  }, [currentTime, lastAddedId]);\n  const formatDateTime = date => {\n    // Format date to gantt xml_date format \"YYYY-MM-DD HH:ii\"\n    const year = date.getFullYear();\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = date.getDate().toString().padStart(2, \"0\");\n    const hours = date.getHours().toString().padStart(2, \"0\");\n    const mins = date.getMinutes().toString().padStart(2, \"0\");\n    return `${year}-${month}-${day} ${hours}:${mins}`;\n  };\n  const handleCreateProject = () => {\n    if (!newProjectText.trim()) return;\n    const now = new Date();\n    const formattedCurrentDate = formatDateTime(now);\n    const newProject = {\n      id: Date.now(),\n      text: newProjectText,\n      start_date: formattedCurrentDate,\n      duration: newProjectDuration ? parseInt(newProjectDuration) : 10,\n      priority: newProjectPriority,\n      progress: 0\n    };\n    addProject(newProject);\n    setLastAddedId(newProject.id);\n    setNewProjectText(\"\");\n    setNewProjectDate(\"\");\n    setNewProjectTime(\"\");\n    setNewProjectDuration(\"\");\n    setNewProjectPriority(\"Low\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleCreateProject();\n    }\n  };\n  const containerStyle = {\n    margin: isMobile ? \"15px 10px\" : \"30px auto\",\n    maxWidth: \"1200px\",\n    borderRadius: \"16px\",\n    boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\n    overflow: \"hidden\",\n    background: \"#D0F0F4\",\n    fontFamily: \"Segoe UI, sans-serif\",\n    transform: \"perspective(1000px)\",\n    transition: \"transform 0.3s ease-in-out\"\n  };\n  const headerStyle = {\n    padding: isMobile ? \"18px 15px\" : \"25px\",\n    background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\n    color: \"#fff\",\n    fontSize: isMobile ? \"22px\" : \"28px\",\n    fontWeight: \"700\",\n    textAlign: \"center\",\n    letterSpacing: \"0.8px\",\n    boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\n    textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\"\n  };\n  const ganttStyle = {\n    height: isMobile ? isSmallMobile ? \"350px\" : \"400px\" : \"600px\",\n    width: \"100%\",\n    borderTop: \"1px solid #ccc\",\n    overflow: \"auto\"\n  };\n  const inputContainerStyle = {\n    padding: isMobile ? \"15px\" : \"20px\",\n    display: \"flex\",\n    gap: \"12px\",\n    flexDirection: isSmallMobile ? \"column\" : \"row\",\n    alignItems: isSmallMobile ? \"stretch\" : \"center\",\n    flexWrap: \"wrap\"\n  };\n  const inputStyle = {\n    flex: \"1\",\n    padding: isMobile ? \"10px 14px\" : \"12px 16px\",\n    fontSize: isMobile ? \"14px\" : \"16px\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\n    transition: \"all 0.3s ease\",\n    outline: \"none\",\n    minWidth: \"0\"\n  };\n  const selectStyle = {\n    ...inputStyle,\n    minWidth: \"auto\"\n  };\n  const buttonStyle = {\n    padding: isMobile ? \"10px 16px\" : \"12px 20px\",\n    fontSize: isMobile ? \"14px\" : \"16px\",\n    borderRadius: \"8px\",\n    background: \"#8c6deaff\",\n    color: \"#fff\",\n    border: \"none\",\n    cursor: \"pointer\",\n    boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n    transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\n    whiteSpace: \"nowrap\",\n    minWidth: isSmallMobile ? \"100%\" : \"auto\"\n  };\n  const buttonHoverStyle = {\n    transform: \"scale(1.05)\",\n    boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyle,\n      children: isMobile ? \"📅 Timeline\" : \"📅 Project Timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: inputContainerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newProjectText,\n        onChange: e => setNewProjectText(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: isMobile ? \"New project...\" : \"Enter project name...\",\n        style: inputStyle,\n        \"aria-label\": \"New project name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: newProjectDuration,\n        onChange: e => setNewProjectDuration(e.target.value),\n        placeholder: \"Duration (days)\",\n        style: inputStyle,\n        \"aria-label\": \"Project duration\",\n        min: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newProjectPriority,\n        onChange: e => setNewProjectPriority(e.target.value),\n        style: selectStyle,\n        \"aria-label\": \"Project priority\",\n        children: priorityOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateProject,\n        style: hover ? {\n          ...buttonStyle,\n          ...buttonHoverStyle\n        } : buttonStyle,\n        onMouseEnter: () => setHover(true),\n        onMouseLeave: () => setHover(false),\n        \"aria-label\": \"Add new project\",\n        children: isMobile ? \"➕ Add\" : \"➕ Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ganttContainer,\n      style: ganttStyle,\n      className: \"gantt-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n};\n_s(Timeline, \"VyCMrr5+C34UGXvYl9rXc+EOLQ4=\", false, function () {\n  return [useProjects];\n});\n_c = Timeline;\nexport default Timeline;\n\n// by using figma \n\n// import React, { useState } from \"react\";\n\n// const initialTasks = [\n//   {\n//     name: \"Setup repo\",\n//     start: \"2025-09-22\",\n//     duration: \"1 Hr\",\n//     barWidth: \"15%\",\n//     barColor: \"#f6b6b7\",\n//   },\n//   {\n//     name: \"Setup DB\",\n//     start: \"2025-09-22\",\n//     duration: \"24 Hr\",\n//     barWidth: \"50%\",\n//     barColor: \"#c6f6fa\",\n//   },\n// ];\n\n// const Timeline = () => {\n//   const [tasks, setTasks] = useState(initialTasks);\n//   const [newTask, setNewTask] = useState(\"\");\n\n//   // Helper to format current date and time as \"YYYY-MM-DD HH:mm:ss\"\n//   const getCurrentDateTime = () => {\n//     const now = new Date();\n//     const year = now.getFullYear();\n//     const month = String(now.getMonth() + 1).padStart(2, \"0\");\n//     const day = String(now.getDate()).padStart(2, \"0\");\n//     const hours = String(now.getHours()).padStart(2, \"0\");\n//     const minutes = String(now.getMinutes()).padStart(2, \"0\");\n//     const seconds = String(now.getSeconds()).padStart(2, \"0\");\n//     return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\n//   };\n\n//   const addTask = () => {\n//     if (newTask.trim()) {\n//       setTasks([\n//         ...tasks,\n//         {\n//           name: newTask,\n//           start: getCurrentDateTime(),\n//           duration: \"1 Hr\",\n//           barWidth: \"15%\",\n//           barColor: \"#f6b6b7\",\n//         },\n//       ]);\n//       setNewTask(\"\");\n//     }\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         background: \"#e5f6fb\",\n//         minHeight: \"100vh\",\n//         fontFamily: \"Inter, Arial, sans-serif\",\n//         margin: 0,\n//         padding: 0,\n//       }}\n//     >\n//       {/* Header */}\n//       <div\n//         style={{\n//           background: \"#a076f2\",\n//           color: \"#fff\",\n//           padding: \"24px 0 20px 0\",\n//           display: \"flex\",\n//           alignItems: \"center\",\n//           justifyContent: \"center\",\n//           fontSize: \"28px\",\n//           fontWeight: 600,\n//           borderRadius: \"8px 8px 0 0\",\n//         }}\n//       >\n//         <span style={{ marginRight: \"12px\", fontSize: \"30px\" }}>🗓️</span>\n//         Project Timeline\n//       </div>\n//       {/* Input Section */}\n//       <div\n//         style={{\n//           padding: \"20px\",\n//           display: \"flex\",\n//           alignItems: \"center\",\n//           gap: \"18px\",\n//           background: \"#fff\",\n//           borderRadius: \"0 0 8px 8px\",\n//         }}\n//       >\n//         <input\n//           style={{\n//             flex: 1,\n//             fontSize: \"22px\",\n//             padding: \"9px 13px\",\n//             borderRadius: \"7px\",\n//             border: \"1.5px solid #cacaca\",\n//             outline: \"none\",\n//             color: \"#aaa\",\n//           }}\n//           type=\"text\"\n//           placeholder=\"New Task Name\"\n//           value={newTask}\n//           onChange={(e) => setNewTask(e.target.value)}\n//         />\n//         <button\n//           style={{\n//             fontSize: \"16px\",\n//             background: \"#1976d2\",\n//             color: \"#fff\",\n//             border: \"none\",\n//             borderRadius: \"7px\",\n//             padding: \"9px 21px\",\n//             cursor: \"pointer\",\n//             boxShadow: \"0 1px 5px rgba(0,0,0,0.10)\",\n//             fontWeight: 500,\n//           }}\n//           onClick={addTask}\n//         >\n//           Add Task\n//         </button>\n//       </div>\n//       {/* Timeline Table */}\n//       <div\n//         style={{\n//           margin: \"22px\",\n//           background: \"#fff\",\n//           borderRadius: \"9px\",\n//           boxShadow: \"0 2px 8px rgba(0,0,0,0.06)\",\n//           overflow: \"hidden\",\n//         }}\n//       >\n//         <table style={{ width: \"100%\", borderCollapse: \"collapse\", fontSize: \"18px\" }}>\n//           <thead>\n//             <tr>\n//               <th\n//                 style={{\n//                   background: \"#fafafc\",\n//                   fontWeight: 600,\n//                   padding: \"11px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   textAlign: \"left\",\n//                 }}\n//               >\n//                 Task name\n//               </th>\n//               <th\n//                 style={{\n//                   background: \"#fafafc\",\n//                   fontWeight: 600,\n//                   padding: \"11px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   textAlign: \"left\",\n//                 }}\n//               >\n//                 Start time\n//               </th>\n//               <th\n//                 style={{\n//                   background: \"#fafafc\",\n//                   fontWeight: 600,\n//                   padding: \"11px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   textAlign: \"left\",\n//                 }}\n//               >\n//                 Duration\n//               </th>\n//               <th\n//                 style={{\n//                   background: \"#fafafc\",\n//                   fontWeight: 600,\n//                   padding: \"11px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   textAlign: \"left\",\n//                 }}\n//                 colSpan={5}\n//               >\n//                 <div style={{ display: \"flex\", gap: \"6px\" }}>\n//                   <span>September 2025</span>\n//                   <span style={{ marginLeft: \"16px\" }}>October 2025</span>\n//                 </div>\n//               </th>\n//             </tr>\n//             <tr>\n//               <td></td>\n//               <td></td>\n//               <td></td>\n//               <td\n//                 style={{\n//                   background: \"#f3f6fb\",\n//                   fontSize: \"15px\",\n//                   fontWeight: 600,\n//                   padding: \"10px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   color: \"#707793\",\n//                 }}\n//               >\n//                 1 Hr\n//               </td>\n//               <td\n//                 style={{\n//                   background: \"#f3f6fb\",\n//                   fontSize: \"15px\",\n//                   fontWeight: 600,\n//                   padding: \"10px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   color: \"#707793\",\n//                 }}\n//               >\n//                 12 Hr\n//               </td>\n//               <td\n//                 style={{\n//                   background: \"#f3f6fb\",\n//                   fontSize: \"15px\",\n//                   fontWeight: 600,\n//                   padding: \"10px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   color: \"#707793\",\n//                 }}\n//               >\n//                 24 hrs\n//               </td>\n//               <td\n//                 style={{\n//                   background: \"#f3f6fb\",\n//                   fontSize: \"15px\",\n//                   fontWeight: 600,\n//                   padding: \"10px 10px\",\n//                   borderBottom: \"2px solid #ececec\",\n//                   color: \"#707793\",\n//                 }}\n//               >\n//                 2 days\n//               </td>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {tasks.map((task, idx) => (\n//               <tr key={idx}>\n//                 <td\n//                   style={{\n//                     padding: \"10px\",\n//                     borderBottom: \"1px solid #f0f0f0\",\n//                     verticalAlign: \"middle\",\n//                     fontSize: \"16px\",\n//                   }}\n//                 >\n//                   <span\n//                     style={{\n//                       fontSize: \"15px\",\n//                       background: \"#f6f7fa\",\n//                       border: \"1.5px solid #bbb\",\n//                       borderRadius: \"16px\",\n//                       padding: \"2px 16px\",\n//                       fontWeight: 500,\n//                       marginRight: \"7px\",\n//                       marginBottom: \"4px\",\n//                       display: \"inline-block\",\n//                     }}\n//                   >\n//                     {task.name}\n//                   </span>\n//                 </td>\n//                 <td\n//                   style={{\n//                     padding: \"10px\",\n//                     borderBottom: \"1px solid #f0f0f0\",\n//                     verticalAlign: \"middle\",\n//                     fontSize: \"16px\",\n//                   }}\n//                 >\n//                   {task.start}\n//                 </td>\n//                 <td\n//                   style={{\n//                     padding: \"10px\",\n//                     borderBottom: \"1px solid #f0f0f0\",\n//                     verticalAlign: \"middle\",\n//                     fontSize: \"16px\",\n//                   }}\n//                 >\n//                   {task.duration}\n//                 </td>\n//                 <td\n//                   style={{\n//                     position: \"relative\",\n//                     minWidth: \"500px\",\n//                     height: \"60px\",\n//                     background: \"#f9fbff\",\n//                   }}\n//                   colSpan={4}\n//                 >\n//                   <div\n//                     style={{\n//                       background: task.barColor,\n//                       borderRadius: \"8px\",\n//                       height: \"23px\",\n//                       width: task.barWidth,\n//                       position: \"absolute\",\n//                       left: \"3%\",\n//                       top: \"15px\",\n//                       zIndex: 2,\n//                       boxShadow: \"0 2px 7px rgba(0,0,0,0.06)\",\n//                     }}\n//                   ></div>\n//                 </td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useEffect","useRef","useState","gantt","useProjects","jsxDEV","_jsxDEV","priorityOptions","value","label","Timeline","_s","ganttContainer","projects","addProject","newProjectText","setNewProjectText","newProjectDate","setNewProjectDate","newProjectTime","setNewProjectTime","newProjectDuration","setNewProjectDuration","newProjectPriority","setNewProjectPriority","hover","setHover","windowWidth","setWindowWidth","window","innerWidth","isMobile","setIsMobile","isSmallMobile","setIsSmallMobile","currentTime","setCurrentTime","Date","lastAddedId","setLastAddedId","config","xml_date","readonly","drag_move","drag_resize","drag_links","auto_scheduling","show_errors","highlight_critical_path","scale_unit","date_scale","subscales","unit","step","date","columns","name","tree","width","align","template","task","start_date","templates","date_grid","d","parseDate","hh","getHours","toString","padStart","mm","getMinutes","priority","init","current","clearAll","parse","data","links","id","source","target","type","render","handleResize","addEventListener","removeEventListener","timer","setInterval","clearInterval","ganttTask","getTask","parsedStartDate","timeDiff","Math","abs","getTime","updateTask","formatDateTime","year","getFullYear","month","getMonth","day","getDate","hours","mins","handleCreateProject","trim","now","formattedCurrentDate","newProject","text","duration","parseInt","progress","handleKeyPress","e","key","containerStyle","margin","maxWidth","borderRadius","boxShadow","overflow","background","fontFamily","transform","transition","headerStyle","padding","color","fontSize","fontWeight","textAlign","letterSpacing","textShadow","ganttStyle","height","borderTop","inputContainerStyle","display","gap","flexDirection","alignItems","flexWrap","inputStyle","flex","border","outline","minWidth","selectStyle","buttonStyle","cursor","whiteSpace","buttonHoverStyle","style","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyPress","placeholder","min","map","option","onClick","onMouseEnter","onMouseLeave","ref","className","_c","$RefreshReg$"],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/timeline/Timeline.js"],"sourcesContent":["// for full code \r\n\r\n\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"dhtmlx-gantt/codebase/dhtmlxgantt.css\";\r\nimport gantt from \"dhtmlx-gantt\";\r\nimport { useProjects } from \"../../context/ProjectContext\";\r\n\r\nconst priorityOptions = [\r\n  { value: \"Low\", label: \"Low\" },\r\n  { value: \"Medium\", label: \"Medium\" },\r\n  { value: \"High\", label: \"High\" },\r\n  { value: \"Critical\", label: \"Critical\" },\r\n];\r\n\r\nconst Timeline = () => {\r\n  const ganttContainer = useRef(null);\r\n  const { projects, addProject } = useProjects();\r\n  const [newProjectText, setNewProjectText] = useState(\"\");\r\n  const [newProjectDate, setNewProjectDate] = useState(\"\");\r\n  const [newProjectTime, setNewProjectTime] = useState(\"\");\r\n  const [newProjectDuration, setNewProjectDuration] = useState(\"\");\r\n  const [newProjectPriority, setNewProjectPriority] = useState(\"Low\");\r\n  const [hover, setHover] = useState(false);\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\r\n  const [isSmallMobile, setIsSmallMobile] = useState(window.innerWidth <= 480);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [lastAddedId, setLastAddedId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    gantt.config.xml_date = \"%Y-%m-%d %H:%i\";\r\n    gantt.config.readonly = false;\r\n    gantt.config.drag_move = true;\r\n    gantt.config.drag_resize = true;\r\n    gantt.config.drag_links = true;\r\n    gantt.config.auto_scheduling = true;\r\n    gantt.config.show_errors = false;\r\n    gantt.config.highlight_critical_path = true;\r\n    gantt.config.scale_unit = windowWidth > 768 ? \"month\" : \"week\";\r\n    gantt.config.date_scale = windowWidth > 768 ? \"%F, %Y\" : \"%M %d\";\r\n    gantt.config.subscales =\r\n      windowWidth > 768\r\n        ? [{ unit: \"week\", step: 1, date: \"%j, %D\" }]\r\n        : [{ unit: \"day\", step: 1, date: \"%d\" }];\r\n\r\n    // Add grid columns, including new Priority column\r\n    gantt.config.columns = [\r\n      { name: \"text\", label: \"Task name\", tree: true, width: \"*\" },\r\n      {\r\n        name: \"start_date\",\r\n        label: \"Start time\",\r\n        align: \"center\",\r\n        width: 100,\r\n        template: (task) =>\r\n          task.start_date ? gantt.templates.date_grid(task.start_date) : \"\",\r\n      },\r\n      { name: \"duration\", label: \"Duration\", align: \"center\", width: 70 },\r\n      {\r\n        name: \"time\",\r\n        label: \"Time\",\r\n        align: \"center\",\r\n        width: 70,\r\n        template: function (task) {\r\n          if (!task.start_date) return \"\";\r\n          const d = gantt.date.parseDate(task.start_date, \"%Y-%m-%d %H:%i\");\r\n          const hh = d.getHours().toString().padStart(2, \"0\");\r\n          const mm = d.getMinutes().toString().padStart(2, \"0\");\r\n          return `${hh}:${mm}`;\r\n        },\r\n      },\r\n      {\r\n        name: \"priority\",\r\n        label: \"Priority\",\r\n        align: \"center\",\r\n        width: 90,\r\n        template: function (task) {\r\n          return task.priority || \"Low\";\r\n        },\r\n      },\r\n      { name: \"add\", label: \"\", width: 44 },\r\n    ];\r\n\r\n    gantt.init(ganttContainer.current);\r\n    gantt.clearAll();\r\n    gantt.parse({\r\n      data: projects,\r\n      links: [\r\n        { id: 1, source: 1, target: 2, type: \"0\" },\r\n        { id: 2, source: 2, target: 3, type: \"0\" },\r\n        { id: 3, source: 3, target: 4, type: \"0\" },\r\n        { id: 4, source: 4, target: 5, type: \"0\" },\r\n      ],\r\n    });\r\n    gantt.render();\r\n  }, [projects, windowWidth]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      const width = window.innerWidth;\r\n      setWindowWidth(width);\r\n      setIsMobile(width <= 768);\r\n      setIsSmallMobile(width <= 480);\r\n    };\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  // Timer to update currentTime every second\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Update the start_date of the last added task to the current time, every second\r\n  useEffect(() => {\r\n    if (lastAddedId === null) return;\r\n    const ganttTask = gantt.getTask(lastAddedId);\r\n    if (!ganttTask) return;\r\n\r\n    const parsedStartDate = gantt.date.parseDate(ganttTask.start_date, \"%Y-%m-%d %H:%i\");\r\n    if (!parsedStartDate) return;\r\n\r\n    // Only update if start_date differs from currentTime (ignoring seconds for smoothness)\r\n    const timeDiff =\r\n      Math.abs(parsedStartDate.getTime() - currentTime.getTime());\r\n\r\n    if (timeDiff >= 1000) {\r\n      gantt.getTask(lastAddedId).start_date = currentTime;\r\n      gantt.updateTask(lastAddedId);\r\n    }\r\n  }, [currentTime, lastAddedId]);\r\n\r\n  const formatDateTime = (date) => {\r\n    // Format date to gantt xml_date format \"YYYY-MM-DD HH:ii\"\r\n    const year = date.getFullYear();\r\n    const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = date.getDate().toString().padStart(2, \"0\");\r\n    const hours = date.getHours().toString().padStart(2, \"0\");\r\n    const mins = date.getMinutes().toString().padStart(2, \"0\");\r\n    return `${year}-${month}-${day} ${hours}:${mins}`;\r\n  };\r\n\r\n  const handleCreateProject = () => {\r\n    if (!newProjectText.trim()) return;\r\n    const now = new Date();\r\n    const formattedCurrentDate = formatDateTime(now);\r\n    const newProject = {\r\n      id: Date.now(),\r\n      text: newProjectText,\r\n      start_date: formattedCurrentDate,\r\n      duration: newProjectDuration ? parseInt(newProjectDuration) : 10,\r\n      priority: newProjectPriority,\r\n      progress: 0,\r\n    };\r\n    addProject(newProject);\r\n    setLastAddedId(newProject.id);\r\n    setNewProjectText(\"\");\r\n    setNewProjectDate(\"\");\r\n    setNewProjectTime(\"\");\r\n    setNewProjectDuration(\"\");\r\n    setNewProjectPriority(\"Low\");\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleCreateProject();\r\n    }\r\n  };\r\n\r\n  const containerStyle = {\r\n    margin: isMobile ? \"15px 10px\" : \"30px auto\",\r\n    maxWidth: \"1200px\",\r\n    borderRadius: \"16px\",\r\n    boxShadow: \"0 20px 40px rgba(0,0,0,0.2)\",\r\n    overflow: \"hidden\",\r\n    background: \"#D0F0F4\",\r\n    fontFamily: \"Segoe UI, sans-serif\",\r\n    transform: \"perspective(1000px)\",\r\n    transition: \"transform 0.3s ease-in-out\",\r\n  };\r\n\r\n  const headerStyle = {\r\n    padding: isMobile ? \"18px 15px\" : \"25px\",\r\n    background: \"linear-gradient(to right, #6a11cb, #2575fc)\",\r\n    color: \"#fff\",\r\n    fontSize: isMobile ? \"22px\" : \"28px\",\r\n    fontWeight: \"700\",\r\n    textAlign: \"center\",\r\n    letterSpacing: \"0.8px\",\r\n    boxShadow: \"0 4px 12px rgba(0,0,0,0.3)\",\r\n    textShadow: \"1px 1px 2px rgba(0,0,0,0.2)\",\r\n  };\r\n\r\n  const ganttStyle = {\r\n    height: isMobile ? (isSmallMobile ? \"350px\" : \"400px\") : \"600px\",\r\n    width: \"100%\",\r\n    borderTop: \"1px solid #ccc\",\r\n    overflow: \"auto\",\r\n  };\r\n\r\n  const inputContainerStyle = {\r\n    padding: isMobile ? \"15px\" : \"20px\",\r\n    display: \"flex\",\r\n    gap: \"12px\",\r\n    flexDirection: isSmallMobile ? \"column\" : \"row\",\r\n    alignItems: isSmallMobile ? \"stretch\" : \"center\",\r\n    flexWrap: \"wrap\",\r\n  };\r\n\r\n  const inputStyle = {\r\n    flex: \"1\",\r\n    padding: isMobile ? \"10px 14px\" : \"12px 16px\",\r\n    fontSize: isMobile ? \"14px\" : \"16px\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n    boxShadow: \"inset 0 2px 4px rgba(0,0,0,0.1)\",\r\n    transition: \"all 0.3s ease\",\r\n    outline: \"none\",\r\n    minWidth: \"0\",\r\n  };\r\n\r\n  const selectStyle = {\r\n    ...inputStyle,\r\n    minWidth: \"auto\",\r\n  };\r\n\r\n  const buttonStyle = {\r\n    padding: isMobile ? \"10px 16px\" : \"12px 20px\",\r\n    fontSize: isMobile ? \"14px\" : \"16px\",\r\n    borderRadius: \"8px\",\r\n    background: \"#8c6deaff\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\r\n    transition: \"transform 0.2s ease, box-shadow 0.2s ease\",\r\n    whiteSpace: \"nowrap\",\r\n    minWidth: isSmallMobile ? \"100%\" : \"auto\",\r\n  };\r\n\r\n  const buttonHoverStyle = {\r\n    transform: \"scale(1.05)\",\r\n    boxShadow: \"0 6px 16px rgba(0,0,0,0.3)\",\r\n  };\r\n\r\n  return (\r\n    <div style={containerStyle}>\r\n      <div style={headerStyle}>{isMobile ? \"📅 Timeline\" : \"📅 Project Timeline\"}</div>\r\n      <div style={inputContainerStyle}>\r\n        <input\r\n          type=\"text\"\r\n          value={newProjectText}\r\n          onChange={(e) => setNewProjectText(e.target.value)}\r\n          onKeyPress={handleKeyPress}\r\n          placeholder={isMobile ? \"New project...\" : \"Enter project name...\"}\r\n          style={inputStyle}\r\n          aria-label=\"New project name\"\r\n        />\r\n\r\n        <input\r\n          type=\"number\"\r\n          value={newProjectDuration}\r\n          onChange={(e) => setNewProjectDuration(e.target.value)}\r\n          placeholder=\"Duration (days)\"\r\n          style={inputStyle}\r\n          aria-label=\"Project duration\"\r\n          min=\"1\"\r\n        />\r\n        <select\r\n          value={newProjectPriority}\r\n          onChange={(e) => setNewProjectPriority(e.target.value)}\r\n          style={selectStyle}\r\n          aria-label=\"Project priority\"\r\n        >\r\n          {priorityOptions.map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <button\r\n          onClick={handleCreateProject}\r\n          style={hover ? { ...buttonStyle, ...buttonHoverStyle } : buttonStyle}\r\n          onMouseEnter={() => setHover(true)}\r\n          onMouseLeave={() => setHover(false)}\r\n          aria-label=\"Add new project\"\r\n        >\r\n          {isMobile ? \"➕ Add\" : \"➕ Add\"}\r\n        </button>\r\n      </div>\r\n      <div ref={ganttContainer} style={ganttStyle} className=\"gantt-container\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// by using figma \r\n\r\n\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// const initialTasks = [\r\n//   {\r\n//     name: \"Setup repo\",\r\n//     start: \"2025-09-22\",\r\n//     duration: \"1 Hr\",\r\n//     barWidth: \"15%\",\r\n//     barColor: \"#f6b6b7\",\r\n//   },\r\n//   {\r\n//     name: \"Setup DB\",\r\n//     start: \"2025-09-22\",\r\n//     duration: \"24 Hr\",\r\n//     barWidth: \"50%\",\r\n//     barColor: \"#c6f6fa\",\r\n//   },\r\n// ];\r\n\r\n// const Timeline = () => {\r\n//   const [tasks, setTasks] = useState(initialTasks);\r\n//   const [newTask, setNewTask] = useState(\"\");\r\n\r\n//   // Helper to format current date and time as \"YYYY-MM-DD HH:mm:ss\"\r\n//   const getCurrentDateTime = () => {\r\n//     const now = new Date();\r\n//     const year = now.getFullYear();\r\n//     const month = String(now.getMonth() + 1).padStart(2, \"0\");\r\n//     const day = String(now.getDate()).padStart(2, \"0\");\r\n//     const hours = String(now.getHours()).padStart(2, \"0\");\r\n//     const minutes = String(now.getMinutes()).padStart(2, \"0\");\r\n//     const seconds = String(now.getSeconds()).padStart(2, \"0\");\r\n//     return `${year}-${month}-${day} ${hours}:${minutes}:${seconds}`;\r\n//   };\r\n\r\n//   const addTask = () => {\r\n//     if (newTask.trim()) {\r\n//       setTasks([\r\n//         ...tasks,\r\n//         {\r\n//           name: newTask,\r\n//           start: getCurrentDateTime(),\r\n//           duration: \"1 Hr\",\r\n//           barWidth: \"15%\",\r\n//           barColor: \"#f6b6b7\",\r\n//         },\r\n//       ]);\r\n//       setNewTask(\"\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         background: \"#e5f6fb\",\r\n//         minHeight: \"100vh\",\r\n//         fontFamily: \"Inter, Arial, sans-serif\",\r\n//         margin: 0,\r\n//         padding: 0,\r\n//       }}\r\n//     >\r\n//       {/* Header */}\r\n//       <div\r\n//         style={{\r\n//           background: \"#a076f2\",\r\n//           color: \"#fff\",\r\n//           padding: \"24px 0 20px 0\",\r\n//           display: \"flex\",\r\n//           alignItems: \"center\",\r\n//           justifyContent: \"center\",\r\n//           fontSize: \"28px\",\r\n//           fontWeight: 600,\r\n//           borderRadius: \"8px 8px 0 0\",\r\n//         }}\r\n//       >\r\n//         <span style={{ marginRight: \"12px\", fontSize: \"30px\" }}>🗓️</span>\r\n//         Project Timeline\r\n//       </div>\r\n//       {/* Input Section */}\r\n//       <div\r\n//         style={{\r\n//           padding: \"20px\",\r\n//           display: \"flex\",\r\n//           alignItems: \"center\",\r\n//           gap: \"18px\",\r\n//           background: \"#fff\",\r\n//           borderRadius: \"0 0 8px 8px\",\r\n//         }}\r\n//       >\r\n//         <input\r\n//           style={{\r\n//             flex: 1,\r\n//             fontSize: \"22px\",\r\n//             padding: \"9px 13px\",\r\n//             borderRadius: \"7px\",\r\n//             border: \"1.5px solid #cacaca\",\r\n//             outline: \"none\",\r\n//             color: \"#aaa\",\r\n//           }}\r\n//           type=\"text\"\r\n//           placeholder=\"New Task Name\"\r\n//           value={newTask}\r\n//           onChange={(e) => setNewTask(e.target.value)}\r\n//         />\r\n//         <button\r\n//           style={{\r\n//             fontSize: \"16px\",\r\n//             background: \"#1976d2\",\r\n//             color: \"#fff\",\r\n//             border: \"none\",\r\n//             borderRadius: \"7px\",\r\n//             padding: \"9px 21px\",\r\n//             cursor: \"pointer\",\r\n//             boxShadow: \"0 1px 5px rgba(0,0,0,0.10)\",\r\n//             fontWeight: 500,\r\n//           }}\r\n//           onClick={addTask}\r\n//         >\r\n//           Add Task\r\n//         </button>\r\n//       </div>\r\n//       {/* Timeline Table */}\r\n//       <div\r\n//         style={{\r\n//           margin: \"22px\",\r\n//           background: \"#fff\",\r\n//           borderRadius: \"9px\",\r\n//           boxShadow: \"0 2px 8px rgba(0,0,0,0.06)\",\r\n//           overflow: \"hidden\",\r\n//         }}\r\n//       >\r\n//         <table style={{ width: \"100%\", borderCollapse: \"collapse\", fontSize: \"18px\" }}>\r\n//           <thead>\r\n//             <tr>\r\n//               <th\r\n//                 style={{\r\n//                   background: \"#fafafc\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"11px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   textAlign: \"left\",\r\n//                 }}\r\n//               >\r\n//                 Task name\r\n//               </th>\r\n//               <th\r\n//                 style={{\r\n//                   background: \"#fafafc\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"11px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   textAlign: \"left\",\r\n//                 }}\r\n//               >\r\n//                 Start time\r\n//               </th>\r\n//               <th\r\n//                 style={{\r\n//                   background: \"#fafafc\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"11px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   textAlign: \"left\",\r\n//                 }}\r\n//               >\r\n//                 Duration\r\n//               </th>\r\n//               <th\r\n//                 style={{\r\n//                   background: \"#fafafc\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"11px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   textAlign: \"left\",\r\n//                 }}\r\n//                 colSpan={5}\r\n//               >\r\n//                 <div style={{ display: \"flex\", gap: \"6px\" }}>\r\n//                   <span>September 2025</span>\r\n//                   <span style={{ marginLeft: \"16px\" }}>October 2025</span>\r\n//                 </div>\r\n//               </th>\r\n//             </tr>\r\n//             <tr>\r\n//               <td></td>\r\n//               <td></td>\r\n//               <td></td>\r\n//               <td\r\n//                 style={{\r\n//                   background: \"#f3f6fb\",\r\n//                   fontSize: \"15px\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"10px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   color: \"#707793\",\r\n//                 }}\r\n//               >\r\n//                 1 Hr\r\n//               </td>\r\n//               <td\r\n//                 style={{\r\n//                   background: \"#f3f6fb\",\r\n//                   fontSize: \"15px\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"10px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   color: \"#707793\",\r\n//                 }}\r\n//               >\r\n//                 12 Hr\r\n//               </td>\r\n//               <td\r\n//                 style={{\r\n//                   background: \"#f3f6fb\",\r\n//                   fontSize: \"15px\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"10px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   color: \"#707793\",\r\n//                 }}\r\n//               >\r\n//                 24 hrs\r\n//               </td>\r\n//               <td\r\n//                 style={{\r\n//                   background: \"#f3f6fb\",\r\n//                   fontSize: \"15px\",\r\n//                   fontWeight: 600,\r\n//                   padding: \"10px 10px\",\r\n//                   borderBottom: \"2px solid #ececec\",\r\n//                   color: \"#707793\",\r\n//                 }}\r\n//               >\r\n//                 2 days\r\n//               </td>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {tasks.map((task, idx) => (\r\n//               <tr key={idx}>\r\n//                 <td\r\n//                   style={{\r\n//                     padding: \"10px\",\r\n//                     borderBottom: \"1px solid #f0f0f0\",\r\n//                     verticalAlign: \"middle\",\r\n//                     fontSize: \"16px\",\r\n//                   }}\r\n//                 >\r\n//                   <span\r\n//                     style={{\r\n//                       fontSize: \"15px\",\r\n//                       background: \"#f6f7fa\",\r\n//                       border: \"1.5px solid #bbb\",\r\n//                       borderRadius: \"16px\",\r\n//                       padding: \"2px 16px\",\r\n//                       fontWeight: 500,\r\n//                       marginRight: \"7px\",\r\n//                       marginBottom: \"4px\",\r\n//                       display: \"inline-block\",\r\n//                     }}\r\n//                   >\r\n//                     {task.name}\r\n//                   </span>\r\n//                 </td>\r\n//                 <td\r\n//                   style={{\r\n//                     padding: \"10px\",\r\n//                     borderBottom: \"1px solid #f0f0f0\",\r\n//                     verticalAlign: \"middle\",\r\n//                     fontSize: \"16px\",\r\n//                   }}\r\n//                 >\r\n//                   {task.start}\r\n//                 </td>\r\n//                 <td\r\n//                   style={{\r\n//                     padding: \"10px\",\r\n//                     borderBottom: \"1px solid #f0f0f0\",\r\n//                     verticalAlign: \"middle\",\r\n//                     fontSize: \"16px\",\r\n//                   }}\r\n//                 >\r\n//                   {task.duration}\r\n//                 </td>\r\n//                 <td\r\n//                   style={{\r\n//                     position: \"relative\",\r\n//                     minWidth: \"500px\",\r\n//                     height: \"60px\",\r\n//                     background: \"#f9fbff\",\r\n//                   }}\r\n//                   colSpan={4}\r\n//                 >\r\n//                   <div\r\n//                     style={{\r\n//                       background: task.barColor,\r\n//                       borderRadius: \"8px\",\r\n//                       height: \"23px\",\r\n//                       width: task.barWidth,\r\n//                       position: \"absolute\",\r\n//                       left: \"3%\",\r\n//                       top: \"15px\",\r\n//                       zIndex: 2,\r\n//                       boxShadow: \"0 2px 7px rgba(0,0,0,0.06)\",\r\n//                     }}\r\n//                   ></div>\r\n//                 </td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Timeline;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}