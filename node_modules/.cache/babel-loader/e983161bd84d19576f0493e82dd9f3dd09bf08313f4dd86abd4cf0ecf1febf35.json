{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\backlog\\\\Backlog.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { listIssues, createIssue } from '../../services/mockApi';\n// import { useParams } from 'react-router-dom';\n\n// export default function Backlog() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Story');\n//   const [points, setPoints] = useState(3);\n\n//   useEffect(()=>{ listIssues(projectId).then(setIssues); },[projectId]);\n\n//   const add = async ()=>{\n//     const data = { projectId: projectId||null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:points };\n//     await createIssue(data);\n//     setIssues(await listIssues(projectId));\n//     setTitle(''); setPoints(3);\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"backlog-title\">\n//       <h2 id=\"backlog-title\">Backlog {projectId?`- ${projectId}`:''}</h2>\n//       <div style={{display:'flex',gap:12}}>\n//         <div style={{flex:1}}>\n//           <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//           <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Story</option><option>Task</option><option>Bug</option></select></label></div>\n//           <div className=\"form-row\"><label>Story Points<input type=\"number\" value={points} onChange={e=>setPoints(e.target.value)} /></label></div>\n//           <button className=\"btn\" onClick={add}>Add to Backlog</button>\n//         </div>\n//         <div style={{flex:2}}>\n//           <h3>Backlog Items</h3>\n//           <ul>{issues.map(i=>(<li key={i.id}>{i.title} — <em>{i.type}</em> — {i.storyPoints} pts</li>))}</ul>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { listIssues, createIssue } from '../../services/mockApi';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JiraBoard() {\n  _s();\n  const {\n    projectId\n  } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [newIssue, setNewIssue] = useState({\n    title: '',\n    type: 'Story',\n    storyPoints: 3\n  });\n\n  // Fetch issues\n  useEffect(() => {\n    listIssues(projectId).then(setIssues);\n  }, [projectId]);\n\n  // Add new issue\n  const addIssue = async () => {\n    if (!newIssue.title) return alert('Title is required');\n    const data = {\n      projectId: projectId || null,\n      title: newIssue.title,\n      type: newIssue.type,\n      status: 'backlog',\n      priority: 'P3',\n      assignee: '',\n      storyPoints: newIssue.storyPoints\n    };\n    await createIssue(data);\n    setIssues(await listIssues(projectId));\n    setNewIssue({\n      title: '',\n      type: 'Story',\n      storyPoints: 3\n    });\n  };\n\n  // Handle drag and drop\n  const onDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const updatedIssues = Array.from(issues);\n    const [moved] = updatedIssues.splice(source.index, 1);\n    moved.status = destination.droppableId;\n    updatedIssues.splice(destination.index, 0, moved);\n    setIssues(updatedIssues);\n  };\n\n  // Delete issue\n  const deleteIssue = id => {\n    setIssues(prev => prev.filter(i => i.id !== id));\n  };\n\n  // Inline edit issue\n  const updateIssue = (id, field, value) => {\n    setIssues(prev => prev.map(i => i.id === id ? {\n      ...i,\n      [field]: value\n    } : i));\n  };\n\n  // Group issues by status\n  const columns = {\n    backlog: issues.filter(i => i.status === 'backlog'),\n    sprint: issues.filter(i => i.status === 'sprint'),\n    done: issues.filter(i => i.status === 'done')\n  };\n\n  // Priority colors\n  const priorityColors = {\n    P1: '#e74c3c',\n    P2: '#f1c40f',\n    P3: '#2ecc71'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '1rem',\n      fontFamily: 'Arial, sans-serif'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Project Board \", projectId ? `- ${projectId}` : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '0.5rem',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        value: newIssue.title,\n        onChange: e => setNewIssue({\n          ...newIssue,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newIssue.type,\n        onChange: e => setNewIssue({\n          ...newIssue,\n          type: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bug\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 1,\n        value: newIssue.storyPoints,\n        onChange: e => setNewIssue({\n          ...newIssue,\n          storyPoints: parseInt(e.target.value)\n        }),\n        style: {\n          width: '60px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: newIssue.priority,\n        onChange: e => setNewIssue({\n          ...newIssue,\n          priority: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"P1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"P2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"P3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addIssue,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: onDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '1rem',\n          alignItems: 'flex-start'\n        },\n        children: Object.keys(columns).map(status => /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: status,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            style: {\n              flex: 1,\n              minHeight: '300px',\n              padding: '0.5rem',\n              border: '1px solid #ddd',\n              borderRadius: '4px',\n              background: '#f4f5f7'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                textTransform: 'capitalize'\n              },\n              children: status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this), columns[status].map((issue, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: issue.id.toString(),\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  padding: '0.5rem',\n                  marginBottom: '0.5rem',\n                  border: '1px solid #ccc',\n                  borderRadius: '4px',\n                  background: '#fff',\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'center',\n                  ...provided.draggableProps.style\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flex: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    value: issue.title,\n                    onChange: e => updateIssue(issue.id, 'title', e.target.value),\n                    style: {\n                      fontWeight: 'bold',\n                      width: '100%',\n                      border: 'none',\n                      background: 'transparent'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '12px',\n                      marginTop: '2px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                      value: issue.type,\n                      onChange: e => updateIssue(issue.id, 'type', e.target.value),\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Story\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Task\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Bug\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        background: '#e1e1e1',\n                        borderRadius: '12px',\n                        padding: '2px 6px',\n                        marginLeft: '6px'\n                      },\n                      children: [issue.storyPoints, \" pts\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        background: priorityColors[issue.priority],\n                        color: '#fff',\n                        borderRadius: '12px',\n                        padding: '2px 6px',\n                        marginLeft: '6px'\n                      },\n                      children: issue.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        background: '#3498db',\n                        color: '#fff',\n                        borderRadius: '50%',\n                        padding: '2px 6px',\n                        marginLeft: '6px',\n                        fontSize: '10px'\n                      },\n                      children: issue.assignee ? issue.assignee[0].toUpperCase() : '?'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => deleteIssue(issue.id),\n                  style: {\n                    marginLeft: '6px',\n                    border: 'none',\n                    background: 'transparent',\n                    color: '#e74c3c',\n                    cursor: 'pointer',\n                    fontWeight: 'bold'\n                  },\n                  children: \"\\u2715\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 25\n              }, this)\n            }, issue.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this)\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(JiraBoard, \"hspyqLNiPsfNuyVxZvUSuV88j+c=\", false, function () {\n  return [useParams];\n});\n_c = JiraBoard;\nvar _c;\n$RefreshReg$(_c, \"JiraBoard\");","map":{"version":3,"names":["React","useEffect","useState","listIssues","createIssue","useParams","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","JiraBoard","_s","projectId","issues","setIssues","newIssue","setNewIssue","title","type","storyPoints","then","addIssue","alert","data","status","priority","assignee","onDragEnd","result","source","destination","updatedIssues","Array","from","moved","splice","index","droppableId","deleteIssue","id","prev","filter","i","updateIssue","field","value","map","columns","backlog","sprint","done","priorityColors","P1","P2","P3","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","marginBottom","placeholder","onChange","e","target","min","parseInt","width","onClick","alignItems","Object","keys","provided","droppableProps","ref","innerRef","flex","minHeight","border","borderRadius","background","textTransform","issue","draggableId","toString","draggableProps","dragHandleProps","justifyContent","fontWeight","fontSize","marginTop","marginLeft","color","toUpperCase","cursor","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/backlog/Backlog.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { listIssues, createIssue } from '../../services/mockApi';\n// import { useParams } from 'react-router-dom';\n\n// export default function Backlog() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Story');\n//   const [points, setPoints] = useState(3);\n\n//   useEffect(()=>{ listIssues(projectId).then(setIssues); },[projectId]);\n\n//   const add = async ()=>{\n//     const data = { projectId: projectId||null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:points };\n//     await createIssue(data);\n//     setIssues(await listIssues(projectId));\n//     setTitle(''); setPoints(3);\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"backlog-title\">\n//       <h2 id=\"backlog-title\">Backlog {projectId?`- ${projectId}`:''}</h2>\n//       <div style={{display:'flex',gap:12}}>\n//         <div style={{flex:1}}>\n//           <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//           <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Story</option><option>Task</option><option>Bug</option></select></label></div>\n//           <div className=\"form-row\"><label>Story Points<input type=\"number\" value={points} onChange={e=>setPoints(e.target.value)} /></label></div>\n//           <button className=\"btn\" onClick={add}>Add to Backlog</button>\n//         </div>\n//         <div style={{flex:2}}>\n//           <h3>Backlog Items</h3>\n//           <ul>{issues.map(i=>(<li key={i.id}>{i.title} — <em>{i.type}</em> — {i.storyPoints} pts</li>))}</ul>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { listIssues, createIssue } from '../../services/mockApi';\nimport { useParams } from 'react-router-dom';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport default function JiraBoard() {\n  const { projectId } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [newIssue, setNewIssue] = useState({ title: '', type: 'Story', storyPoints: 3 });\n\n  // Fetch issues\n  useEffect(() => {\n    listIssues(projectId).then(setIssues);\n  }, [projectId]);\n\n  // Add new issue\n  const addIssue = async () => {\n    if (!newIssue.title) return alert('Title is required');\n    const data = {\n      projectId: projectId || null,\n      title: newIssue.title,\n      type: newIssue.type,\n      status: 'backlog',\n      priority: 'P3',\n      assignee: '',\n      storyPoints: newIssue.storyPoints,\n    };\n    await createIssue(data);\n    setIssues(await listIssues(projectId));\n    setNewIssue({ title: '', type: 'Story', storyPoints: 3 });\n  };\n\n  // Handle drag and drop\n  const onDragEnd = result => {\n    const { source, destination } = result;\n    if (!destination) return;\n\n    const updatedIssues = Array.from(issues);\n    const [moved] = updatedIssues.splice(source.index, 1);\n    moved.status = destination.droppableId;\n    updatedIssues.splice(destination.index, 0, moved);\n    setIssues(updatedIssues);\n  };\n\n  // Delete issue\n  const deleteIssue = id => {\n    setIssues(prev => prev.filter(i => i.id !== id));\n  };\n\n  // Inline edit issue\n  const updateIssue = (id, field, value) => {\n    setIssues(prev =>\n      prev.map(i => (i.id === id ? { ...i, [field]: value } : i))\n    );\n  };\n\n  // Group issues by status\n  const columns = {\n    backlog: issues.filter(i => i.status === 'backlog'),\n    sprint: issues.filter(i => i.status === 'sprint'),\n    done: issues.filter(i => i.status === 'done'),\n  };\n\n  // Priority colors\n  const priorityColors = { P1: '#e74c3c', P2: '#f1c40f', P3: '#2ecc71' };\n\n  return (\n    <div style={{ padding: '1rem', fontFamily: 'Arial, sans-serif' }}>\n      <h2>Project Board {projectId ? `- ${projectId}` : ''}</h2>\n\n      {/* Add Issue Form */}\n      <div style={{ display: 'flex', gap: '0.5rem', marginBottom: '1rem' }}>\n        <input\n          placeholder=\"Title\"\n          value={newIssue.title}\n          onChange={e => setNewIssue({ ...newIssue, title: e.target.value })}\n        />\n        <select value={newIssue.type} onChange={e => setNewIssue({ ...newIssue, type: e.target.value })}>\n          <option>Story</option>\n          <option>Task</option>\n          <option>Bug</option>\n        </select>\n        <input\n          type=\"number\"\n          min={1}\n          value={newIssue.storyPoints}\n          onChange={e => setNewIssue({ ...newIssue, storyPoints: parseInt(e.target.value) })}\n          style={{ width: '60px' }}\n        />\n        <select value={newIssue.priority} onChange={e => setNewIssue({ ...newIssue, priority: e.target.value })}>\n          <option>P1</option>\n          <option>P2</option>\n          <option>P3</option>\n        </select>\n        <button onClick={addIssue}>Add</button>\n      </div>\n\n      {/* Board Columns */}\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div style={{ display: 'flex', gap: '1rem', alignItems: 'flex-start' }}>\n          {Object.keys(columns).map(status => (\n            <Droppable droppableId={status} key={status}>\n              {provided => (\n                <div\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={{\n                    flex: 1,\n                    minHeight: '300px',\n                    padding: '0.5rem',\n                    border: '1px solid #ddd',\n                    borderRadius: '4px',\n                    background: '#f4f5f7',\n                  }}\n                >\n                  <h3 style={{ textTransform: 'capitalize' }}>{status}</h3>\n                  {columns[status].map((issue, index) => (\n                    <Draggable key={issue.id} draggableId={issue.id.toString()} index={index}>\n                      {provided => (\n                        <div\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={{\n                            padding: '0.5rem',\n                            marginBottom: '0.5rem',\n                            border: '1px solid #ccc',\n                            borderRadius: '4px',\n                            background: '#fff',\n                            display: 'flex',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            ...provided.draggableProps.style,\n                          }}\n                        >\n                          <div style={{ flex: 1 }}>\n                            <input\n                              value={issue.title}\n                              onChange={e => updateIssue(issue.id, 'title', e.target.value)}\n                              style={{ fontWeight: 'bold', width: '100%', border: 'none', background: 'transparent' }}\n                            />\n                            <div style={{ fontSize: '12px', marginTop: '2px' }}>\n                              <select\n                                value={issue.type}\n                                onChange={e => updateIssue(issue.id, 'type', e.target.value)}\n                              >\n                                <option>Story</option>\n                                <option>Task</option>\n                                <option>Bug</option>\n                              </select>\n                              <span\n                                style={{\n                                  background: '#e1e1e1',\n                                  borderRadius: '12px',\n                                  padding: '2px 6px',\n                                  marginLeft: '6px',\n                                }}\n                              >\n                                {issue.storyPoints} pts\n                              </span>\n                              <span\n                                style={{\n                                  background: priorityColors[issue.priority],\n                                  color: '#fff',\n                                  borderRadius: '12px',\n                                  padding: '2px 6px',\n                                  marginLeft: '6px',\n                                }}\n                              >\n                                {issue.priority}\n                              </span>\n                              <span\n                                style={{\n                                  background: '#3498db',\n                                  color: '#fff',\n                                  borderRadius: '50%',\n                                  padding: '2px 6px',\n                                  marginLeft: '6px',\n                                  fontSize: '10px',\n                                }}\n                              >\n                                {issue.assignee ? issue.assignee[0].toUpperCase() : '?'}\n                              </span>\n                            </div>\n                          </div>\n                          <button\n                            onClick={() => deleteIssue(issue.id)}\n                            style={{\n                              marginLeft: '6px',\n                              border: 'none',\n                              background: 'transparent',\n                              color: '#e74c3c',\n                              cursor: 'pointer',\n                              fontWeight: 'bold',\n                            }}\n                          >\n                            ✕\n                          </button>\n                        </div>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n}\n"],"mappings":";;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,UAAU,EAAEC,WAAW,QAAQ,wBAAwB;AAChE,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAU,CAAC,GAAGR,SAAS,CAAC,CAAC;EACjC,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IAAEgB,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE,OAAO;IAAEC,WAAW,EAAE;EAAE,CAAC,CAAC;;EAEtF;EACAnB,SAAS,CAAC,MAAM;IACdE,UAAU,CAACU,SAAS,CAAC,CAACQ,IAAI,CAACN,SAAS,CAAC;EACvC,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMS,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAACN,QAAQ,CAACE,KAAK,EAAE,OAAOK,KAAK,CAAC,mBAAmB,CAAC;IACtD,MAAMC,IAAI,GAAG;MACXX,SAAS,EAAEA,SAAS,IAAI,IAAI;MAC5BK,KAAK,EAAEF,QAAQ,CAACE,KAAK;MACrBC,IAAI,EAAEH,QAAQ,CAACG,IAAI;MACnBM,MAAM,EAAE,SAAS;MACjBC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE,EAAE;MACZP,WAAW,EAAEJ,QAAQ,CAACI;IACxB,CAAC;IACD,MAAMhB,WAAW,CAACoB,IAAI,CAAC;IACvBT,SAAS,CAAC,MAAMZ,UAAU,CAACU,SAAS,CAAC,CAAC;IACtCI,WAAW,CAAC;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,WAAW,EAAE;IAAE,CAAC,CAAC;EAC3D,CAAC;;EAED;EACA,MAAMQ,SAAS,GAAGC,MAAM,IAAI;IAC1B,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IACtC,IAAI,CAACE,WAAW,EAAE;IAElB,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAACpB,MAAM,CAAC;IACxC,MAAM,CAACqB,KAAK,CAAC,GAAGH,aAAa,CAACI,MAAM,CAACN,MAAM,CAACO,KAAK,EAAE,CAAC,CAAC;IACrDF,KAAK,CAACV,MAAM,GAAGM,WAAW,CAACO,WAAW;IACtCN,aAAa,CAACI,MAAM,CAACL,WAAW,CAACM,KAAK,EAAE,CAAC,EAAEF,KAAK,CAAC;IACjDpB,SAAS,CAACiB,aAAa,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMO,WAAW,GAAGC,EAAE,IAAI;IACxBzB,SAAS,CAAC0B,IAAI,IAAIA,IAAI,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;EAClD,CAAC;;EAED;EACA,MAAMI,WAAW,GAAGA,CAACJ,EAAE,EAAEK,KAAK,EAAEC,KAAK,KAAK;IACxC/B,SAAS,CAAC0B,IAAI,IACZA,IAAI,CAACM,GAAG,CAACJ,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGG,CAAC;MAAE,CAACE,KAAK,GAAGC;IAAM,CAAC,GAAGH,CAAE,CAC5D,CAAC;EACH,CAAC;;EAED;EACA,MAAMK,OAAO,GAAG;IACdC,OAAO,EAAEnC,MAAM,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAClB,MAAM,KAAK,SAAS,CAAC;IACnDyB,MAAM,EAAEpC,MAAM,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAClB,MAAM,KAAK,QAAQ,CAAC;IACjD0B,IAAI,EAAErC,MAAM,CAAC4B,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAClB,MAAM,KAAK,MAAM;EAC9C,CAAC;;EAED;EACA,MAAM2B,cAAc,GAAG;IAAEC,EAAE,EAAE,SAAS;IAAEC,EAAE,EAAE,SAAS;IAAEC,EAAE,EAAE;EAAU,CAAC;EAEtE,oBACE7C,OAAA;IAAK8C,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAoB,CAAE;IAAAC,QAAA,gBAC/DjD,OAAA;MAAAiD,QAAA,GAAI,gBAAc,EAAC9C,SAAS,GAAG,KAAKA,SAAS,EAAE,GAAG,EAAE;IAAA;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAG1DrD,OAAA;MAAK8C,KAAK,EAAE;QAAEQ,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAP,QAAA,gBACnEjD,OAAA;QACEyD,WAAW,EAAC,OAAO;QACnBrB,KAAK,EAAE9B,QAAQ,CAACE,KAAM;QACtBkD,QAAQ,EAAEC,CAAC,IAAIpD,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEE,KAAK,EAAEmD,CAAC,CAACC,MAAM,CAACxB;QAAM,CAAC;MAAE;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpE,CAAC,eACFrD,OAAA;QAAQoC,KAAK,EAAE9B,QAAQ,CAACG,IAAK;QAACiD,QAAQ,EAAEC,CAAC,IAAIpD,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEG,IAAI,EAAEkD,CAAC,CAACC,MAAM,CAACxB;QAAM,CAAC,CAAE;QAAAa,QAAA,gBAC9FjD,OAAA;UAAAiD,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtBrD,OAAA;UAAAiD,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrBrD,OAAA;UAAAiD,QAAA,EAAQ;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eACTrD,OAAA;QACES,IAAI,EAAC,QAAQ;QACboD,GAAG,EAAE,CAAE;QACPzB,KAAK,EAAE9B,QAAQ,CAACI,WAAY;QAC5BgD,QAAQ,EAAEC,CAAC,IAAIpD,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEI,WAAW,EAAEoD,QAAQ,CAACH,CAAC,CAACC,MAAM,CAACxB,KAAK;QAAE,CAAC,CAAE;QACnFU,KAAK,EAAE;UAAEiB,KAAK,EAAE;QAAO;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFrD,OAAA;QAAQoC,KAAK,EAAE9B,QAAQ,CAACU,QAAS;QAAC0C,QAAQ,EAAEC,CAAC,IAAIpD,WAAW,CAAC;UAAE,GAAGD,QAAQ;UAAEU,QAAQ,EAAE2C,CAAC,CAACC,MAAM,CAACxB;QAAM,CAAC,CAAE;QAAAa,QAAA,gBACtGjD,OAAA;UAAAiD,QAAA,EAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnBrD,OAAA;UAAAiD,QAAA,EAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnBrD,OAAA;UAAAiD,QAAA,EAAQ;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACTrD,OAAA;QAAQgE,OAAO,EAAEpD,QAAS;QAAAqC,QAAA,EAAC;MAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAGNrD,OAAA,CAACJ,eAAe;MAACsB,SAAS,EAAEA,SAAU;MAAA+B,QAAA,eACpCjD,OAAA;QAAK8C,KAAK,EAAE;UAAEQ,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE,MAAM;UAAEU,UAAU,EAAE;QAAa,CAAE;QAAAhB,QAAA,EACpEiB,MAAM,CAACC,IAAI,CAAC7B,OAAO,CAAC,CAACD,GAAG,CAACtB,MAAM,iBAC9Bf,OAAA,CAACH,SAAS;UAAC+B,WAAW,EAAEb,MAAO;UAAAkC,QAAA,EAC5BmB,QAAQ,iBACPpE,OAAA;YAAA,GACMoE,QAAQ,CAACC,cAAc;YAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;YACvBzB,KAAK,EAAE;cACL0B,IAAI,EAAE,CAAC;cACPC,SAAS,EAAE,OAAO;cAClB1B,OAAO,EAAE,QAAQ;cACjB2B,MAAM,EAAE,gBAAgB;cACxBC,YAAY,EAAE,KAAK;cACnBC,UAAU,EAAE;YACd,CAAE;YAAA3B,QAAA,gBAEFjD,OAAA;cAAI8C,KAAK,EAAE;gBAAE+B,aAAa,EAAE;cAAa,CAAE;cAAA5B,QAAA,EAAElC;YAAM;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,EACxDf,OAAO,CAACvB,MAAM,CAAC,CAACsB,GAAG,CAAC,CAACyC,KAAK,EAAEnD,KAAK,kBAChC3B,OAAA,CAACF,SAAS;cAAgBiF,WAAW,EAAED,KAAK,CAAChD,EAAE,CAACkD,QAAQ,CAAC,CAAE;cAACrD,KAAK,EAAEA,KAAM;cAAAsB,QAAA,EACtEmB,QAAQ,iBACPpE,OAAA;gBACEsE,GAAG,EAAEF,QAAQ,CAACG,QAAS;gBAAA,GACnBH,QAAQ,CAACa,cAAc;gBAAA,GACvBb,QAAQ,CAACc,eAAe;gBAC5BpC,KAAK,EAAE;kBACLC,OAAO,EAAE,QAAQ;kBACjBS,YAAY,EAAE,QAAQ;kBACtBkB,MAAM,EAAE,gBAAgB;kBACxBC,YAAY,EAAE,KAAK;kBACnBC,UAAU,EAAE,MAAM;kBAClBtB,OAAO,EAAE,MAAM;kBACf6B,cAAc,EAAE,eAAe;kBAC/BlB,UAAU,EAAE,QAAQ;kBACpB,GAAGG,QAAQ,CAACa,cAAc,CAACnC;gBAC7B,CAAE;gBAAAG,QAAA,gBAEFjD,OAAA;kBAAK8C,KAAK,EAAE;oBAAE0B,IAAI,EAAE;kBAAE,CAAE;kBAAAvB,QAAA,gBACtBjD,OAAA;oBACEoC,KAAK,EAAE0C,KAAK,CAACtE,KAAM;oBACnBkD,QAAQ,EAAEC,CAAC,IAAIzB,WAAW,CAAC4C,KAAK,CAAChD,EAAE,EAAE,OAAO,EAAE6B,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAE;oBAC9DU,KAAK,EAAE;sBAAEsC,UAAU,EAAE,MAAM;sBAAErB,KAAK,EAAE,MAAM;sBAAEW,MAAM,EAAE,MAAM;sBAAEE,UAAU,EAAE;oBAAc;kBAAE;oBAAA1B,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACzF,CAAC,eACFrD,OAAA;oBAAK8C,KAAK,EAAE;sBAAEuC,QAAQ,EAAE,MAAM;sBAAEC,SAAS,EAAE;oBAAM,CAAE;oBAAArC,QAAA,gBACjDjD,OAAA;sBACEoC,KAAK,EAAE0C,KAAK,CAACrE,IAAK;sBAClBiD,QAAQ,EAAEC,CAAC,IAAIzB,WAAW,CAAC4C,KAAK,CAAChD,EAAE,EAAE,MAAM,EAAE6B,CAAC,CAACC,MAAM,CAACxB,KAAK,CAAE;sBAAAa,QAAA,gBAE7DjD,OAAA;wBAAAiD,QAAA,EAAQ;sBAAK;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACtBrD,OAAA;wBAAAiD,QAAA,EAAQ;sBAAI;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC,eACrBrD,OAAA;wBAAAiD,QAAA,EAAQ;sBAAG;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAQ,CAAC;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACd,CAAC,eACTrD,OAAA;sBACE8C,KAAK,EAAE;wBACL8B,UAAU,EAAE,SAAS;wBACrBD,YAAY,EAAE,MAAM;wBACpB5B,OAAO,EAAE,SAAS;wBAClBwC,UAAU,EAAE;sBACd,CAAE;sBAAAtC,QAAA,GAED6B,KAAK,CAACpE,WAAW,EAAC,MACrB;oBAAA;sBAAAwC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eACPrD,OAAA;sBACE8C,KAAK,EAAE;wBACL8B,UAAU,EAAElC,cAAc,CAACoC,KAAK,CAAC9D,QAAQ,CAAC;wBAC1CwE,KAAK,EAAE,MAAM;wBACbb,YAAY,EAAE,MAAM;wBACpB5B,OAAO,EAAE,SAAS;wBAClBwC,UAAU,EAAE;sBACd,CAAE;sBAAAtC,QAAA,EAED6B,KAAK,CAAC9D;oBAAQ;sBAAAkC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACX,CAAC,eACPrD,OAAA;sBACE8C,KAAK,EAAE;wBACL8B,UAAU,EAAE,SAAS;wBACrBY,KAAK,EAAE,MAAM;wBACbb,YAAY,EAAE,KAAK;wBACnB5B,OAAO,EAAE,SAAS;wBAClBwC,UAAU,EAAE,KAAK;wBACjBF,QAAQ,EAAE;sBACZ,CAAE;sBAAApC,QAAA,EAED6B,KAAK,CAAC7D,QAAQ,GAAG6D,KAAK,CAAC7D,QAAQ,CAAC,CAAC,CAAC,CAACwE,WAAW,CAAC,CAAC,GAAG;oBAAG;sBAAAvC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnD,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACNrD,OAAA;kBACEgE,OAAO,EAAEA,CAAA,KAAMnC,WAAW,CAACiD,KAAK,CAAChD,EAAE,CAAE;kBACrCgB,KAAK,EAAE;oBACLyC,UAAU,EAAE,KAAK;oBACjBb,MAAM,EAAE,MAAM;oBACdE,UAAU,EAAE,aAAa;oBACzBY,KAAK,EAAE,SAAS;oBAChBE,MAAM,EAAE,SAAS;oBACjBN,UAAU,EAAE;kBACd,CAAE;kBAAAnC,QAAA,EACH;gBAED;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN;YACN,GAlFayB,KAAK,CAAChD,EAAE;cAAAoB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAmFb,CACZ,CAAC,EACDe,QAAQ,CAACX,WAAW;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB;QACN,GAvGkCtC,MAAM;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwGhC,CACZ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACnD,EAAA,CA9MuBD,SAAS;EAAA,QACTN,SAAS;AAAA;AAAAgG,EAAA,GADT1F,SAAS;AAAA,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}