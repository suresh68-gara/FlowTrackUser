{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n\n//   useEffect(()=>{ listUsers().then(setUsers); },[]);\n\n//   const create = async () => {\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName(''); setEmail('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"users-title\">\n//         <h2 id=\"users-title\">Users</h2>\n//         <div className=\"form-row\"><label>Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Email<input value={email} onChange={e=>setEmail(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Role<select value={role} onChange={e=>setRole(e.target.value)}><option>Admin</option><option>Manager</option><option>Developer</option><option>Reporter</option></select></label></div>\n//         <button className=\"btn\" onClick={create}><FiUserPlus style={{verticalAlign:'middle',marginRight:6}} /> Create user</button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"users-list-title\">\n//         <h2 id=\"users-list-title\">All users</h2>\n//         <table className=\"table\" role=\"table\" aria-label=\"Users table\">\n//           <thead><tr><th>Name</th><th>Email</th><th>Role</th></tr></thead>\n//           <tbody>{users.map(u=>(<tr key={u.id}><td>{u.name}</td><td>{u.email}</td><td>{u.role}</td></tr>))}</tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\n// for responsive is ok\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser({ id, ...editForm });\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     console.log(\"Saving user:\", id, editForm);\n//     await updateUser(id, editForm);   // ✅ fixed: send id + patch separately\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* keep your CSS-in-JSX here */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       }</style>\n\n//     </div>\n\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser(id, editForm);\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n\n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n\n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* ✅ Corrected CSS */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: white; /* fixed */\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/users/Users.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n\n//   useEffect(()=>{ listUsers().then(setUsers); },[]);\n\n//   const create = async () => {\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName(''); setEmail('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"users-title\">\n//         <h2 id=\"users-title\">Users</h2>\n//         <div className=\"form-row\"><label>Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Email<input value={email} onChange={e=>setEmail(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Role<select value={role} onChange={e=>setRole(e.target.value)}><option>Admin</option><option>Manager</option><option>Developer</option><option>Reporter</option></select></label></div>\n//         <button className=\"btn\" onClick={create}><FiUserPlus style={{verticalAlign:'middle',marginRight:6}} /> Create user</button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"users-list-title\">\n//         <h2 id=\"users-list-title\">All users</h2>\n//         <table className=\"table\" role=\"table\" aria-label=\"Users table\">\n//           <thead><tr><th>Name</th><th>Email</th><th>Role</th></tr></thead>\n//           <tbody>{users.map(u=>(<tr key={u.id}><td>{u.name}</td><td>{u.email}</td><td>{u.role}</td></tr>))}</tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n// for responsive is ok\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser({ id, ...editForm });\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n          \n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n          \n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n            \n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     console.log(\"Saving user:\", id, editForm);\n//     await updateUser(id, editForm);   // ✅ fixed: send id + patch separately\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n          \n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n          \n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n            \n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* keep your CSS-in-JSX here */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: \"white\";\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       }</style>\n\n//     </div>\n\n//   );\n// }\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch } from 'react-icons/fi';\n\n// export default function Users() {\n//   const [users, setUsers] = useState([]);\n//   const [name, setName] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [role, setRole] = useState('Developer');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({ name: '', email: '', role: '' });\n//   const [searchTerm, setSearchTerm] = useState('');\n\n//   useEffect(() => {\n//     listUsers().then(setUsers);\n//   }, []);\n\n//   const create = async () => {\n//     if (!name || !email) return;\n//     const u = { id: uuidv4(), name, email, role };\n//     await addUser(u);\n//     setUsers(await listUsers());\n//     setName('');\n//     setEmail('');\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ name: u.name, email: u.email, role: u.role });\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({ name: '', email: '', role: '' });\n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateUser(id, editForm);\n//     setUsers(await listUsers());\n//     cancelEdit();\n//   };\n\n//   const remove = async (id) => {\n//     await deleteUser(id);\n//     setUsers(await listUsers());\n//   };\n\n//   const filteredUsers = users.filter(user =>\n//     user.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.email.toLowerCase().includes(searchTerm.toLowerCase()) ||\n//     user.role.toLowerCase().includes(searchTerm.toLowerCase())\n//   );\n\n//   return (\n//     <div className=\"users-container\">\n//       {/* Header Section */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management</h1>\n//         <p className=\"users-subtitle\">Manage your team members and their roles</p>\n//       </div>\n\n//       <div className=\"users-grid\">\n//         {/* User creation form */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" />\n//               Add New User\n//             </h2>\n//           </div>\n          \n//           <div className=\"form-grid\">\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={name} \n//                 onChange={e => setName(e.target.value)}\n//                 placeholder=\"Enter full name\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address</label>\n//               <input \n//                 className=\"modern-input\"\n//                 value={email} \n//                 onChange={e => setEmail(e.target.value)}\n//                 placeholder=\"Enter email address\"\n//                 type=\"email\"\n//               />\n//             </div>\n            \n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Role</label>\n//               <select className=\"modern-select\" value={role} onChange={e => setRole(e.target.value)}>\n//                 <option>Admin</option>\n//                 <option>Manager</option>\n//                 <option>Developer</option>\n//                 <option>Reporter</option>\n//               </select>\n//             </div>\n//           </div>\n          \n//           <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button>\n//         </div>\n\n//         {/* User list section */}\n//         <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">Team Members ({filteredUsers.length})</h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Role</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.name}\n//                             onChange={e => setEditForm({ ...editForm, name: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input\n//                             className=\"edit-input\"\n//                             value={editForm.email}\n//                             onChange={e => setEditForm({ ...editForm, email: e.target.value })}\n//                           />\n//                         </td>\n//                         <td>\n//                           <select\n//                             className=\"edit-select\"\n//                             value={editForm.role}\n//                             onChange={e => setEditForm({ ...editForm, role: e.target.value })}\n//                           >\n//                             <option>Admin</option>\n//                             <option>Manager</option>\n//                             <option>Developer</option>\n//                             <option>Reporter</option>\n//                           </select>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.name.charAt(0)}</div>\n//                             <span>{u.name}</span>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge role-${u.role.toLowerCase()}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n            \n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* ✅ Corrected CSS */}\n//       <style jsx>{`\n//         .users-container {\n//           min-height: 100vh;\n//           background: white; /* fixed */\n//           padding: 20px;\n//         }\n\n//         .users-header {\n//           text-align: center;\n//           margin-bottom: 40px;\n//           color: white;\n//         }\n\n//         .users-title {\n//           font-size: 2.5rem;\n//           font-weight: 700;\n//           margin-bottom: 8px;\n//         }\n\n//         .users-subtitle {\n//           font-size: 1.1rem;\n//           opacity: 0.9;\n//         }\n\n//         .users-grid {\n//           display: grid;\n//           grid-template-columns: 1fr;\n//           gap: 30px;\n//           max-width: 1400px;\n//           margin: 0 auto;\n//         }\n\n//         @media (min-width: 1024px) {\n//           .users-grid {\n//             grid-template-columns: 400px 1fr;\n//           }\n//         }\n\n//         .glassmorphism {\n//           background: rgba(255, 255, 255, 0.95);\n//           backdrop-filter: blur(10px);\n//           border-radius: 20px;\n//           border: 1px solid rgba(255, 255, 255, 0.2);\n//           box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n//         }\n\n//         .users-form-card, .users-list-card {\n//           padding: 30px;\n//         }\n\n//         .card-header {\n//           display: flex;\n//           justify-content: space-between;\n//           align-items: center;\n//           margin-bottom: 30px;\n//           flex-wrap: wrap;\n//           gap: 15px;\n//         }\n\n//         .card-title {\n//           font-size: 1.5rem;\n//           font-weight: 600;\n//           color: #2d3748;\n//           display: flex;\n//           align-items: center;\n//         }\n\n//         .icon-spacing {\n//           margin-right: 10px;\n//         }\n\n//         .form-grid {\n//           display: grid;\n//           gap: 20px;\n//           margin-bottom: 30px;\n//         }\n\n//         .input-group {\n//           display: flex;\n//           flex-direction: column;\n//         }\n\n//         .input-label {\n//           font-weight: 500;\n//           margin-bottom: 8px;\n//           color: #4a5568;\n//         }\n\n//         .modern-input, .modern-select {\n//           padding: 12px 16px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           transition: all 0.3s ease;\n//           background: white;\n//         }\n\n//         .modern-input:focus, .modern-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .create-btn {\n//           width: 100%;\n//           padding: 14px;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           color: white;\n//           border: none;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           font-weight: 600;\n//           cursor: pointer;\n//           transition: transform 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .create-btn:hover {\n//           transform: translateY(-2px);\n//           box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//         }\n\n//         .btn-icon {\n//           margin-right: 8px;\n//         }\n\n//         .search-container {\n//           position: relative;\n//           min-width: 250px;\n//         }\n\n//         .search-input {\n//           padding: 12px 16px 12px 40px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 10px;\n//           font-size: 1rem;\n//           width: 100%;\n//           transition: all 0.3s ease;\n//         }\n\n//         .search-input:focus {\n//           outline: none;\n//           border-color: #667eea;\n//           box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//         }\n\n//         .search-icon {\n//           position: absolute;\n//           left: 12px;\n//           top: 50%;\n//           transform: translateY(-50%);\n//           color: #a0aec0;\n//         }\n\n//         .table-container {\n//           overflow-x: auto;\n//           border-radius: 10px;\n//         }\n\n//         .modern-table {\n//           width: 100%;\n//           border-collapse: collapse;\n//           min-width: 600px;\n//         }\n\n//         .modern-table th {\n//           background: #f7fafc;\n//           padding: 16px;\n//           text-align: left;\n//           font-weight: 600;\n//           color: #4a5568;\n//           border-bottom: 2px solid #e2e8f0;\n//         }\n\n//         .modern-table td {\n//           padding: 16px;\n//           border-bottom: 1px solid #e2e8f0;\n//         }\n\n//         .modern-table tr:hover {\n//           background: #f7fafc;\n//         }\n\n//         .editing-row {\n//           background: #fff9e6 !important;\n//         }\n\n//         .user-info {\n//           display: flex;\n//           align-items: center;\n//           gap: 12px;\n//         }\n\n//         .avatar {\n//           width: 40px;\n//           height: 40px;\n//           border-radius: 50%;\n//           background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//           color: white;\n//           font-weight: 600;\n//           font-size: 1.1rem;\n//         }\n\n//         .role-badge {\n//           padding: 6px 12px;\n//           border-radius: 20px;\n//           font-size: 0.85rem;\n//           font-weight: 500;\n//         }\n\n//         .role-admin { background: #fed7d7; color: #c53030; }\n//         .role-manager { background: #feebc8; color: #d69e2e; }\n//         .role-developer { background: #c6f6d5; color: #276749; }\n//         .role-reporter { background: #e9d8fd; color: #6b46c1; }\n\n//         .action-buttons {\n//           display: flex;\n//           gap: 8px;\n//         }\n\n//         .btn-edit, .btn-delete, .btn-success, .btn-cancel {\n//           padding: 8px;\n//           border: none;\n//           border-radius: 8px;\n//           cursor: pointer;\n//           transition: all 0.2s ease;\n//           display: flex;\n//           align-items: center;\n//           justify-content: center;\n//         }\n\n//         .btn-edit {\n//           background: #e6fffa;\n//           color: #234e52;\n//         }\n\n//         .btn-edit:hover {\n//           background: #b2f5ea;\n//         }\n\n//         .btn-delete {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-delete:hover {\n//           background: #feb2b2;\n//         }\n\n//         .btn-success {\n//           background: #c6f6d5;\n//           color: #276749;\n//         }\n\n//         .btn-success:hover {\n//           background: #9ae6b4;\n//         }\n\n//         .btn-cancel {\n//           background: #fed7d7;\n//           color: #c53030;\n//         }\n\n//         .btn-cancel:hover {\n//           background: #feb2b2;\n//         }\n\n//         .edit-input, .edit-select {\n//           padding: 8px 12px;\n//           border: 2px solid #e2e8f0;\n//           border-radius: 6px;\n//           width: 100%;\n//           font-size: 0.9rem;\n//         }\n\n//         .edit-input:focus, .edit-select:focus {\n//           outline: none;\n//           border-color: #667eea;\n//         }\n\n//         .empty-state {\n//           text-align: center;\n//           padding: 40px;\n//           color: #a0aec0;\n//           font-style: italic;\n//         }\n\n//         @media (max-width: 768px) {\n//           .users-container {\n//             padding: 10px;\n//           }\n\n//           .users-title {\n//             font-size: 2rem;\n//           }\n\n//           .users-form-card, .users-list-card {\n//             padding: 20px;\n//           }\n\n//           .card-header {\n//             flex-direction: column;\n//             align-items: stretch;\n//           }\n\n//           .search-container {\n//             min-width: auto;\n//           }\n\n//           .modern-table {\n//             font-size: 0.9rem;\n//           }\n\n//           .modern-table th,\n//           .modern-table td {\n//             padding: 12px 8px;\n//           }\n\n//           .action-buttons {\n//             flex-direction: column;\n//           }\n//         }\n\n//         @media (max-width: 480px) {\n//           .users-title {\n//             font-size: 1.75rem;\n//           }\n\n//           .card-title {\n//             font-size: 1.25rem;\n//           }\n\n//           .user-info {\n//             flex-direction: column;\n//             gap: 6px;\n//             text-align: center;\n//           }\n\n//           .avatar {\n//             width: 32px;\n//             height: 32px;\n//             font-size: 0.9rem;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }\n"],"mappings":";AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}