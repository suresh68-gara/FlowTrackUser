{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\projects\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName(''); setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n//         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n//////////////////////\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject } from '../../services/mockApi';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  useEffect(() => {\n    listProjects().then(setProjects);\n  }, []);\n  const create = async () => {\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      description: '',\n      leads: []\n    };\n    await addProject(p);\n    setProjects(await listProjects());\n    setName('');\n    setKey('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      \"aria-labelledby\": \"proj-create\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"proj-create\",\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Project Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Project Key\", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: key,\n            onChange: e => setKey(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: create,\n        children: [/*#__PURE__*/_jsxDEV(FiPlus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" Create\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      \"aria-labelledby\": \"proj-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"proj-list\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: projects.map(p => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: '/projects/' + p.id,\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: p.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"small\",\n              children: [\"(\", p.key, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 43\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, p.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"xDUNbCTJEiS9d126CQkG7yJ00bg=\");\n_c = ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","listProjects","addProject","Link","v4","uuidv4","FiPlus","jsxDEV","_jsxDEV","ProjectList","_s","projects","setProjects","name","setName","key","setKey","then","create","p","id","toUpperCase","description","leads","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","map","to","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/projects/ProjectList.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName(''); setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n//         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n//         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n \n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n \n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n \n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n \n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n \n //////////////////////\n\n\n\n\n\n\n\n\n\n\n import React, { useEffect, useState } from 'react';\nimport { listProjects, addProject } from '../../services/mockApi';\nimport { Link } from 'react-router-dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus } from 'react-icons/fi';\n \nexport default function ProjectList() {\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n \n  useEffect(() => {\n    listProjects().then(setProjects);\n  }, []);\n \n  const create = async () => {\n    const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n    await addProject(p);\n    setProjects(await listProjects());\n    setName('');\n    setKey('');\n  };\n \n  return (\n    <div className=\"grid\">\n      <div className=\"card\" aria-labelledby=\"proj-create\">\n        <h2 id=\"proj-create\">Create Project</h2>\n        <div className=\"form-row\">\n          <label>\n            Project Name\n            <input value={name} onChange={e => setName(e.target.value)} />\n          </label>\n        </div>\n        <div className=\"form-row\">\n          <label>\n            Project Key\n            <input value={key} onChange={e => setKey(e.target.value)} />\n          </label>\n        </div>\n        <button className=\"btn\" onClick={create}>\n          <FiPlus /> Create\n        </button>\n      </div>\n      <div className=\"card\" aria-labelledby=\"proj-list\">\n        <h2 id=\"proj-list\">Projects</h2>\n        <ul>\n          {projects.map(p => (\n            <li key={p.id}>\n              <Link to={'/projects/' + p.id}>\n                <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}