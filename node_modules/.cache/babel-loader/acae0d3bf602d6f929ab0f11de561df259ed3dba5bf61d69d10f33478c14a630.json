{"ast":null,"code":"\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n\n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // TODO: Replace with actual API calls\n//         // For now, set empty user and simulate loading delay\n//         setUser({ name: \"\" }); // Empty name to be filled from backend\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(135deg, rgba(102, 126, 234, 0.9) 0%, rgba(118, 75, 162, 0.9) 100%)\",\n//       pointerEvents: \"none\"\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1200px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"2.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#FFFFFF\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out\",\n//       textShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.9)\",\n//       fontSize: \"1.1rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       background: \"rgba(255, 255, 255, 0.95)\",\n//       backdropFilter: \"blur(10px)\",\n//       borderRadius: \"20px\",\n//       padding: \"2.5rem\",\n//       border: \"1px solid rgba(255, 255, 255, 0.2)\",\n//       boxShadow: `\n//         0 15px 35px rgba(0, 0, 0, 0.1),\n//         0 5px 15px rgba(0, 0, 0, 0.07)\n//       `,\n//       position: \"relative\",\n//       animation: \"fadeInUp 1.4s ease-out\",\n//       transition: \"transform 0.3s ease, box-shadow 0.3s ease\"\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"2rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#2D3748\",\n//       margin: \"0\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"1rem\"\n//     },\n//     boardItem: {\n//       padding: \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.7)\",\n//       borderRadius: \"12px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.5)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(5px)\"\n//     },\n//     boardTitle: {\n//       fontSize: \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#2D3748\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.8rem\",\n//       color: \"#718096\"\n//     },\n//     teamBadge: {\n//       padding: \"0.2rem 0.6rem\",\n//       borderRadius: \"8px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     itemsCount: {\n//       padding: \"0.2rem 0.6rem\",\n//       borderRadius: \"8px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: \"20px\",\n//       borderRadius: \"2px\"\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"#A0AEC0\",\n//       padding: \"3rem 1rem\",\n//       fontSize: \"1rem\"\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"3rem\",\n//       color: \"#FFFFFF\"\n//     },\n//     spinner: {\n//       width: \"40px\",\n//       height: \"40px\",\n//       border: \"4px solid rgba(255, 255, 255, 0.3)\",\n//       borderLeft: \"4px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\"\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n\n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Overlay */}\n//       <div style={styles.backgroundOverlay} />\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           üëã Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üïí Recently Viewed</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span>Viewed {board.lastViewed || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üóÇÔ∏è Your Boards</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span>Updated {board.updated || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           .board-item:hover {\n//             background: rgba(255, 255, 255, 0.9) !important;\n//             border-color: rgba(102, 126, 234, 0.3) !important;\n//             transform: translateY(-2px) !important;\n//             box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1) !important;\n//           }\n\n//           .card:hover {\n//             transform: translateY(-5px);\n//             box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n\n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // TODO: Replace with actual API calls\n//         // For now, set empty user and simulate loading delay\n//         setUser({ name: \"\" }); // Empty name to be filled from backend\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1200px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"2.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#FFFFFF\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out\",\n//       textShadow: \"0 2px 10px rgba(0,0,0,0.2)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.9)\",\n//       fontSize: \"1.1rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       background: \"rgba(255, 255, 255, 0.95)\",\n//       backdropFilter: \"blur(10px)\",\n//       borderRadius: \"16px\",\n//       padding: \"2rem\",\n//       border: \"1px solid rgba(255, 255, 255, 0.3)\",\n//       boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\n//       position: \"relative\",\n//       animation: \"fadeInUp 1.4s ease-out\"\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"1.5rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.25rem\",\n//       fontWeight: \"600\",\n//       color: \"#2D3748\",\n//       margin: \"0\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"0.75rem\"\n//     },\n//     boardItem: {\n//       padding: \"1rem\",\n//       background: \"rgba(255, 255, 255, 0.8)\",\n//       borderRadius: \"8px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.5)\",\n//       transition: \"all 0.2s ease\",\n//       cursor: \"pointer\"\n//     },\n//     boardTitle: {\n//       fontSize: \"0.95rem\",\n//       fontWeight: \"500\",\n//       color: \"#2D3748\",\n//       margin: \"0 0 0.25rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.75rem\",\n//       color: \"#718096\"\n//     },\n//     teamBadge: {\n//       padding: \"0.2rem 0.5rem\",\n//       borderRadius: \"6px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     itemsCount: {\n//       padding: \"0.2rem 0.5rem\",\n//       borderRadius: \"6px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     colorIndicator: {\n//       width: \"3px\",\n//       height: \"16px\",\n//       borderRadius: \"2px\"\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"#A0AEC0\",\n//       padding: \"2rem 1rem\",\n//       fontSize: \"0.9rem\"\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"3rem\",\n//       color: \"#FFFFFF\"\n//     },\n//     spinner: {\n//       width: \"40px\",\n//       height: \"40px\",\n//       border: \"4px solid rgba(255, 255, 255, 0.3)\",\n//       borderLeft: \"4px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\"\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n\n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           üëã Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üïí Recently Viewed</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span>Viewed {board.lastViewed || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üóÇÔ∏è Your Boards</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span>Updated {board.updated || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           .board-item:hover {\n//             background: rgba(255, 255, 255, 0.95) !important;\n//             transform: translateY(-1px) !important;\n//             box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/dashboard/ForYou.js"],"sourcesContent":["\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n    \n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n        \n//         // TODO: Replace with actual API calls\n//         // For now, set empty user and simulate loading delay\n//         setUser({ name: \"\" }); // Empty name to be filled from backend\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n        \n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: \"linear-gradient(135deg, rgba(102, 126, 234, 0.9) 0%, rgba(118, 75, 162, 0.9) 100%)\",\n//       pointerEvents: \"none\"\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1200px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"2.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#FFFFFF\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out\",\n//       textShadow: \"0 2px 4px rgba(0,0,0,0.1)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.9)\",\n//       fontSize: \"1.1rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       background: \"rgba(255, 255, 255, 0.95)\",\n//       backdropFilter: \"blur(10px)\",\n//       borderRadius: \"20px\",\n//       padding: \"2.5rem\",\n//       border: \"1px solid rgba(255, 255, 255, 0.2)\",\n//       boxShadow: `\n//         0 15px 35px rgba(0, 0, 0, 0.1),\n//         0 5px 15px rgba(0, 0, 0, 0.07)\n//       `,\n//       position: \"relative\",\n//       animation: \"fadeInUp 1.4s ease-out\",\n//       transition: \"transform 0.3s ease, box-shadow 0.3s ease\"\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"2rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#2D3748\",\n//       margin: \"0\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"1rem\"\n//     },\n//     boardItem: {\n//       padding: \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.7)\",\n//       borderRadius: \"12px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.5)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(5px)\"\n//     },\n//     boardTitle: {\n//       fontSize: \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#2D3748\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.8rem\",\n//       color: \"#718096\"\n//     },\n//     teamBadge: {\n//       padding: \"0.2rem 0.6rem\",\n//       borderRadius: \"8px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     itemsCount: {\n//       padding: \"0.2rem 0.6rem\",\n//       borderRadius: \"8px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: \"20px\",\n//       borderRadius: \"2px\"\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"#A0AEC0\",\n//       padding: \"3rem 1rem\",\n//       fontSize: \"1rem\"\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"3rem\",\n//       color: \"#FFFFFF\"\n//     },\n//     spinner: {\n//       width: \"40px\",\n//       height: \"40px\",\n//       border: \"4px solid rgba(255, 255, 255, 0.3)\",\n//       borderLeft: \"4px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\"\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n        \n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Overlay */}\n//       <div style={styles.backgroundOverlay} />\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           üëã Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üïí Recently Viewed</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span>Viewed {board.lastViewed || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üóÇÔ∏è Your Boards</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span>Updated {board.updated || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           .board-item:hover {\n//             background: rgba(255, 255, 255, 0.9) !important;\n//             border-color: rgba(102, 126, 234, 0.3) !important;\n//             transform: translateY(-2px) !important;\n//             box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1) !important;\n//           }\n\n//           .card:hover {\n//             transform: translateY(-5px);\n//             box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n    \n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n        \n//         // TODO: Replace with actual API calls\n//         // For now, set empty user and simulate loading delay\n//         setUser({ name: \"\" }); // Empty name to be filled from backend\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n        \n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       background: \"linear-gradient(135deg, #667eea 0%, #764ba2 100%)\",\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1200px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"2.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#FFFFFF\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out\",\n//       textShadow: \"0 2px 10px rgba(0,0,0,0.2)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.9)\",\n//       fontSize: \"1.1rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       background: \"rgba(255, 255, 255, 0.95)\",\n//       backdropFilter: \"blur(10px)\",\n//       borderRadius: \"16px\",\n//       padding: \"2rem\",\n//       border: \"1px solid rgba(255, 255, 255, 0.3)\",\n//       boxShadow: \"0 8px 32px rgba(0, 0, 0, 0.1)\",\n//       position: \"relative\",\n//       animation: \"fadeInUp 1.4s ease-out\"\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"1.5rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.25rem\",\n//       fontWeight: \"600\",\n//       color: \"#2D3748\",\n//       margin: \"0\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"0.75rem\"\n//     },\n//     boardItem: {\n//       padding: \"1rem\",\n//       background: \"rgba(255, 255, 255, 0.8)\",\n//       borderRadius: \"8px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.5)\",\n//       transition: \"all 0.2s ease\",\n//       cursor: \"pointer\"\n//     },\n//     boardTitle: {\n//       fontSize: \"0.95rem\",\n//       fontWeight: \"500\",\n//       color: \"#2D3748\",\n//       margin: \"0 0 0.25rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.75rem\",\n//       color: \"#718096\"\n//     },\n//     teamBadge: {\n//       padding: \"0.2rem 0.5rem\",\n//       borderRadius: \"6px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     itemsCount: {\n//       padding: \"0.2rem 0.5rem\",\n//       borderRadius: \"6px\",\n//       fontSize: \"0.7rem\",\n//       fontWeight: \"500\",\n//       background: \"rgba(102, 126, 234, 0.1)\",\n//       color: \"#667eea\"\n//     },\n//     colorIndicator: {\n//       width: \"3px\",\n//       height: \"16px\",\n//       borderRadius: \"2px\"\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"#A0AEC0\",\n//       padding: \"2rem 1rem\",\n//       fontSize: \"0.9rem\"\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"3rem\",\n//       color: \"#FFFFFF\"\n//     },\n//     spinner: {\n//       width: \"40px\",\n//       height: \"40px\",\n//       border: \"4px solid rgba(255, 255, 255, 0.3)\",\n//       borderLeft: \"4px solid #FFFFFF\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\"\n//     }\n//   };\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n        \n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           üëã Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üïí Recently Viewed</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span>Viewed {board.lastViewed || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>üóÇÔ∏è Your Boards</h2>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li key={board.id} style={styles.boardItem} className=\"board-item\">\n//                     <div style={styles.boardTitle}>\n//                       <div \n//                         style={{\n//                           ...styles.colorIndicator,\n//                           backgroundColor: board.color || \"#667eea\"\n//                         }} \n//                       />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span>Updated {board.updated || \"recently\"}</span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           .board-item:hover {\n//             background: rgba(255, 255, 255, 0.95) !important;\n//             transform: translateY(-1px) !important;\n//             box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1) !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}