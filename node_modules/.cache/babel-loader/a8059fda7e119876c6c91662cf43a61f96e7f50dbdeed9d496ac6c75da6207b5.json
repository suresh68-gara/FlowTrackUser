{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\issues\\\\IssueCreate.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { createIssue } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const nav = useNavigate();\n\n//   const create = async ()=>{\n//     await createIssue({ projectId:null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:0 });\n//     nav('/for-you');\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"create-issue\">\n//       <h2 id=\"create-issue\">Create Issue</h2>\n//       <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//       <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Task</option><option>Bug</option><option>Story</option></select></label></div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\n\n// // Mock API service\n// const issuesDB = [];\n// let idCounter = 1;\n\n// const createIssue = async (issue) => {\n//   const newIssue = { ...issue, id: idCounter++ };\n//   issuesDB.push(newIssue);\n//   return newIssue;\n// };\n\n// const getIssue = async (id) => issuesDB.find((i) => i.id === parseInt(id));\n// const updateIssue = async (id, updatedFields) => {\n//   const issue = issuesDB.find((i) => i.id === parseInt(id));\n//   if (issue) Object.assign(issue, updatedFields);\n//   return issue;\n// };\n// const getAllIssues = async () => issuesDB;\n\n// // Create Issue Component\n// function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const [priority, setPriority] = useState('P3');\n//   const [reporter, setReporter] = useState('');\n//   const [assignee, setAssignee] = useState('');\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const nav = useNavigate();\n\n//   const create = async () => {\n//     await createIssue({\n//       projectId: null,\n//       title,\n//       type,\n//       status: 'todo',\n//       priority,\n//       reporter,\n//       assignee,\n//       startDate,\n//       endDate,\n//       description: '',\n//     });\n//     nav('/issues');\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Create Issue</h2>\n//       <div className=\"form-row\">\n//         <label>Title<input value={title} onChange={e => setTitle(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Type\n//           <select value={type} onChange={e => setType(e.target.value)}>\n//             <option>Task</option>\n//             <option>Bug</option>\n//             <option>Story</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Priority\n//           <select value={priority} onChange={e => setPriority(e.target.value)}>\n//             <option>P1</option>\n//             <option>P2</option>\n//             <option>P3</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Reporter<input value={reporter} onChange={e => setReporter(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Assignee<input value={assignee} onChange={e => setAssignee(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Start Date<input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>End Date<input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} /></label>\n//       </div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// // Issue Details Component\n// function IssueDetails() {\n//   const { id } = useParams();\n//   const [issue, setIssue] = useState(null);\n//   const [desc, setDesc] = useState('');\n\n//   useEffect(() => {\n//     if (id) getIssue(id).then(i => { setIssue(i); setDesc(i?.description || ''); });\n//   }, [id]);\n\n//   if (!issue) return <div className=\"card\"><p>Issue not found</p></div>;\n\n//   const save = async () => {\n//     await updateIssue(issue.id, { description: desc });\n//     setIssue(await getIssue(issue.id));\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>{issue.title} <span className=\"small\">#{issue.id}</span></h2>\n//       <p>Type: {issue.type} • Status: {issue.status} • Priority: {issue.priority}</p>\n//       <p>Reporter: {issue.reporter} • Assignee: {issue.assignee}</p>\n//       <p>Start: {issue.startDate || '-'} • End: {issue.endDate || '-'}</p>\n//       <div className=\"form-row\">\n//         <label>Description<textarea value={desc} onChange={e => setDesc(e.target.value)} /></label>\n//       </div>\n//       <div style={{ display: 'flex', gap: 8 }}>\n//         <button className=\"btn\" onClick={save}>Save</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Issues List (like mini Jira Board)\n// function IssueBoard() {\n//   const [issues, setIssues] = useState([]);\n//   const nav = useNavigate();\n\n//   useEffect(() => { getAllIssues().then(setIssues); }, []);\n\n//   return (\n//     <div>\n//       <h2>Issues Board</h2>\n//       <button className=\"btn\" onClick={() => nav('/create')}>Create New Issue</button>\n//       <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, marginTop: 16 }}>\n//         {issues.map(issue => (\n//           <div key={issue.id} className=\"card\" style={{ width: 250, cursor: 'pointer' }} onClick={() => nav(`/details/${issue.id}`)}>\n//             <h3>{issue.title}</h3>\n//             <p>Type: {issue.type}</p>\n//             <p>Priority: {issue.priority}</p>\n//             <p>Status: {issue.status}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Main App\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/create\" element={<IssueCreate />} />\n//         <Route path=\"/details/:id\" element={<IssueDetails />} />\n//         <Route path=\"/issues\" element={<IssueBoard />} />\n//         <Route path=\"*\" element={<IssueBoard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createIssue } from '../../services/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IssueCreate() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('Task');\n  const [priority, setPriority] = useState('P3');\n  const [reporter, setReporter] = useState('');\n  const [assignee, setAssignee] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const nav = useNavigate();\n  const create = async () => {\n    await createIssue({\n      title,\n      type,\n      status: 'todo',\n      priority,\n      reporter,\n      assignee,\n      startDate,\n      endDate,\n      description: ''\n    });\n    nav('/for-you');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Issue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: title,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 45\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Type\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: type,\n          onChange: e => setType(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Bug\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Story\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Priority\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: priority,\n          onChange: e => setPriority(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"P1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"P2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"P3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Reporter\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: reporter,\n          onChange: e => setReporter(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Assignee\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: assignee,\n          onChange: e => setAssignee(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Start Date\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"End Date\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: create,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(IssueCreate, \"v/Nu/IdALazMXYUekZ9Tg6ZjpmM=\", false, function () {\n  return [useNavigate];\n});\n_c = IssueCreate;\nvar _c;\n$RefreshReg$(_c, \"IssueCreate\");","map":{"version":3,"names":["React","useState","useNavigate","createIssue","jsxDEV","_jsxDEV","IssueCreate","_s","title","setTitle","type","setType","priority","setPriority","reporter","setReporter","assignee","setAssignee","startDate","setStartDate","endDate","setEndDate","nav","create","status","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/issues/IssueCreate.js"],"sourcesContent":["\n// import React, { useState } from 'react';\n// import { createIssue } from '../../services/mockApi';\n// import { useNavigate } from 'react-router-dom';\n\n// export default function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const nav = useNavigate();\n\n//   const create = async ()=>{\n//     await createIssue({ projectId:null, title, type, status:'todo', priority:'P3', assignee:'', storyPoints:0 });\n//     nav('/for-you');\n//   };\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"create-issue\">\n//       <h2 id=\"create-issue\">Create Issue</h2>\n//       <div className=\"form-row\"><label>Title<input value={title} onChange={e=>setTitle(e.target.value)} /></label></div>\n//       <div className=\"form-row\"><label>Type<select value={type} onChange={e=>setType(e.target.value)}><option>Task</option><option>Bug</option><option>Story</option></select></label></div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate, useParams } from 'react-router-dom';\n\n// // Mock API service\n// const issuesDB = [];\n// let idCounter = 1;\n\n// const createIssue = async (issue) => {\n//   const newIssue = { ...issue, id: idCounter++ };\n//   issuesDB.push(newIssue);\n//   return newIssue;\n// };\n\n// const getIssue = async (id) => issuesDB.find((i) => i.id === parseInt(id));\n// const updateIssue = async (id, updatedFields) => {\n//   const issue = issuesDB.find((i) => i.id === parseInt(id));\n//   if (issue) Object.assign(issue, updatedFields);\n//   return issue;\n// };\n// const getAllIssues = async () => issuesDB;\n\n// // Create Issue Component\n// function IssueCreate() {\n//   const [title, setTitle] = useState('');\n//   const [type, setType] = useState('Task');\n//   const [priority, setPriority] = useState('P3');\n//   const [reporter, setReporter] = useState('');\n//   const [assignee, setAssignee] = useState('');\n//   const [startDate, setStartDate] = useState('');\n//   const [endDate, setEndDate] = useState('');\n//   const nav = useNavigate();\n\n//   const create = async () => {\n//     await createIssue({\n//       projectId: null,\n//       title,\n//       type,\n//       status: 'todo',\n//       priority,\n//       reporter,\n//       assignee,\n//       startDate,\n//       endDate,\n//       description: '',\n//     });\n//     nav('/issues');\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>Create Issue</h2>\n//       <div className=\"form-row\">\n//         <label>Title<input value={title} onChange={e => setTitle(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Type\n//           <select value={type} onChange={e => setType(e.target.value)}>\n//             <option>Task</option>\n//             <option>Bug</option>\n//             <option>Story</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Priority\n//           <select value={priority} onChange={e => setPriority(e.target.value)}>\n//             <option>P1</option>\n//             <option>P2</option>\n//             <option>P3</option>\n//           </select>\n//         </label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Reporter<input value={reporter} onChange={e => setReporter(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Assignee<input value={assignee} onChange={e => setAssignee(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>Start Date<input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} /></label>\n//       </div>\n//       <div className=\"form-row\">\n//         <label>End Date<input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} /></label>\n//       </div>\n//       <button className=\"btn\" onClick={create}>Create</button>\n//     </div>\n//   );\n// }\n\n// // Issue Details Component\n// function IssueDetails() {\n//   const { id } = useParams();\n//   const [issue, setIssue] = useState(null);\n//   const [desc, setDesc] = useState('');\n\n//   useEffect(() => {\n//     if (id) getIssue(id).then(i => { setIssue(i); setDesc(i?.description || ''); });\n//   }, [id]);\n\n//   if (!issue) return <div className=\"card\"><p>Issue not found</p></div>;\n\n//   const save = async () => {\n//     await updateIssue(issue.id, { description: desc });\n//     setIssue(await getIssue(issue.id));\n//   };\n\n//   return (\n//     <div className=\"card\">\n//       <h2>{issue.title} <span className=\"small\">#{issue.id}</span></h2>\n//       <p>Type: {issue.type} • Status: {issue.status} • Priority: {issue.priority}</p>\n//       <p>Reporter: {issue.reporter} • Assignee: {issue.assignee}</p>\n//       <p>Start: {issue.startDate || '-'} • End: {issue.endDate || '-'}</p>\n//       <div className=\"form-row\">\n//         <label>Description<textarea value={desc} onChange={e => setDesc(e.target.value)} /></label>\n//       </div>\n//       <div style={{ display: 'flex', gap: 8 }}>\n//         <button className=\"btn\" onClick={save}>Save</button>\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Issues List (like mini Jira Board)\n// function IssueBoard() {\n//   const [issues, setIssues] = useState([]);\n//   const nav = useNavigate();\n\n//   useEffect(() => { getAllIssues().then(setIssues); }, []);\n\n//   return (\n//     <div>\n//       <h2>Issues Board</h2>\n//       <button className=\"btn\" onClick={() => nav('/create')}>Create New Issue</button>\n//       <div style={{ display: 'flex', flexWrap: 'wrap', gap: 16, marginTop: 16 }}>\n//         {issues.map(issue => (\n//           <div key={issue.id} className=\"card\" style={{ width: 250, cursor: 'pointer' }} onClick={() => nav(`/details/${issue.id}`)}>\n//             <h3>{issue.title}</h3>\n//             <p>Type: {issue.type}</p>\n//             <p>Priority: {issue.priority}</p>\n//             <p>Status: {issue.status}</p>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// // Main App\n// export default function App() {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/create\" element={<IssueCreate />} />\n//         <Route path=\"/details/:id\" element={<IssueDetails />} />\n//         <Route path=\"/issues\" element={<IssueBoard />} />\n//         <Route path=\"*\" element={<IssueBoard />} />\n//       </Routes>\n//     </Router>\n//   );\n// }\n\n\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createIssue } from '../../services/mockApi';\n\nexport default function IssueCreate() {\n  const [title, setTitle] = useState('');\n  const [type, setType] = useState('Task');\n  const [priority, setPriority] = useState('P3');\n  const [reporter, setReporter] = useState('');\n  const [assignee, setAssignee] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const nav = useNavigate();\n\n  const create = async () => {\n    await createIssue({\n      title,\n      type,\n      status: 'todo',\n      priority,\n      reporter,\n      assignee,\n      startDate,\n      endDate,\n      description: '',\n    });\n    nav('/for-you');\n  };\n\n  return (\n    <div className=\"card\">\n      <h2>Create Issue</h2>\n      <div className=\"form-row\"><label>Title<input value={title} onChange={e => setTitle(e.target.value)} /></label></div>\n      <div className=\"form-row\"><label>Type\n        <select value={type} onChange={e => setType(e.target.value)}>\n          <option>Task</option>\n          <option>Bug</option>\n          <option>Story</option>\n        </select>\n      </label></div>\n      <div className=\"form-row\"><label>Priority\n        <select value={priority} onChange={e => setPriority(e.target.value)}>\n          <option>P1</option>\n          <option>P2</option>\n          <option>P3</option>\n        </select>\n      </label></div>\n      <div className=\"form-row\"><label>Reporter<input value={reporter} onChange={e => setReporter(e.target.value)} /></label></div>\n      <div className=\"form-row\"><label>Assignee<input value={assignee} onChange={e => setAssignee(e.target.value)} /></label></div>\n      <div className=\"form-row\"><label>Start Date<input type=\"date\" value={startDate} onChange={e => setStartDate(e.target.value)} /></label></div>\n      <div className=\"form-row\"><label>End Date<input type=\"date\" value={endDate} onChange={e => setEndDate(e.target.value)} /></label></div>\n      <button className=\"btn\" onClick={create}>Create</button>\n    </div>\n  );\n}\n"],"mappings":";;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}