{"ast":null,"code":"\n\n// for ok \n\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// const AuthContext = createContext();\n\n// export function AuthProvider({ children }) {\n//   const [user, setUser] = useState(null);\n\n//   // Load user from localStorage on mount\n//   useEffect(() => {\n//     const storedUser = localStorage.getItem(\"user\");\n//     if (storedUser) {\n//       setUser(JSON.parse(storedUser));\n//     }\n//   }, []);\n\n//   // Login → set user + persist\n//   const login = (userData) => {\n//     setUser(userData);\n//     localStorage.setItem(\"user\", JSON.stringify(userData));\n//   };\n\n//   // Logout → clear user + remove from storage\n//   const logout = () => {\n//     setUser(null);\n//     localStorage.removeItem(\"user\");\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// }\n\n// export const useAuth = () => useContext(AuthContext);\n\n// for UI/UX","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/context/AuthContext.js"],"sourcesContent":["\r\n\r\n// for ok \r\n\r\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export function AuthProvider({ children }) {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   // Load user from localStorage on mount\r\n//   useEffect(() => {\r\n//     const storedUser = localStorage.getItem(\"user\");\r\n//     if (storedUser) {\r\n//       setUser(JSON.parse(storedUser));\r\n//     }\r\n//   }, []);\r\n\r\n//   // Login → set user + persist\r\n//   const login = (userData) => {\r\n//     setUser(userData);\r\n//     localStorage.setItem(\"user\", JSON.stringify(userData));\r\n//   };\r\n\r\n//   // Logout → clear user + remove from storage\r\n//   const logout = () => {\r\n//     setUser(null);\r\n//     localStorage.removeItem(\"user\");\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for UI/UX \r\n\r\n"],"mappings":";;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAgBA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}