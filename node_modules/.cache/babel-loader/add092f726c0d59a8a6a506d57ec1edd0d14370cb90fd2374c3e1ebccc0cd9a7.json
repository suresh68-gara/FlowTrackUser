{"ast":null,"code":"\n\n// this code is ok.\n\n// import React, { useEffect, useState } from \"react\";\n// import { listAssets, addAsset } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n\n// export default function AssetsBoard() {\n//   const [assets, setAssets] = useState([]);\n//   const [form, setForm] = useState({ name: \"\", type: \"Laptop\", owner: \"\" });\n//   const [editingId, setEditingId] = useState(null);\n//   const [editFields, setEditFields] = useState({});\n//   const [hoveredId, setHoveredId] = useState(null);\n\n//   useEffect(() => {\n//     listAssets().then(setAssets);\n//   }, []);\n\n//   const add = async () => {\n//     const assetName = form.name;\n//     const assetType = form.type || \"Laptop\";\n//     const assetOwner = form.owner || \"\";\n//     if (!assetName?.trim()) return;\n\n//     const newAsset = {\n//       id: uuidv4(),\n//       name: assetName,\n//       type: assetType,\n//       owner: assetOwner,\n//     };\n//     await addAsset(newAsset);\n//     setAssets(await listAssets());\n//     setForm({ name: \"\", type: \"Laptop\", owner: \"\" });\n//   };\n\n//   const startEditing = (asset) => {\n//     setEditingId(asset.id);\n//     setEditFields({ ...asset });\n//   };\n//   const saveEdit = async (id) => {\n//     setAssets(assets.map((a) => (a.id === id ? { ...a, ...editFields } : a)));\n//     setEditingId(null);\n//   };\n//   const cancelEdit = () => setEditingId(null);\n\n//   const deleteAsset = async (id) => {\n//     setAssets(assets.filter((a) => a.id !== id));\n//   };\n\n//   return (\n//     <div\n//       style={{\n//         padding: \"2rem\",\n//         fontFamily: \"'Segoe UI', sans-serif\",\n//         background: \"linear-gradient(135deg, #e0eafc, #cfdef3)\",\n//         minHeight: \"100vh\",\n//       }}\n//     >\n//       {/* Add Asset Form */}\n//       <div\n//         style={{\n//           marginBottom: \"2rem\",\n//           background: \"#ffffff\",\n//           padding: \"2rem\",\n//           borderRadius: \"12px\",\n//           boxShadow: \"0 10px 25px rgba(0,0,0,0.1)\",\n//           transform: \"perspective(1000px)\",\n//         }}\n//       >\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"2rem\", color: \"#333\" }}>\n//           üöÄ Add User Asset\n//         </h2>\n//         <div\n//           className=\"form-container\"\n//           style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}\n//         >\n//           {[\"name\", \"type\", \"owner\"].map((field) => (\n//             <input\n//               key={field}\n//               placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\n//               value={form[field]}\n//               onChange={(e) => setForm((f) => ({ ...f, [field]: e.target.value }))}\n//               style={{\n//                 flex: 1,\n//                 padding: \"0.75rem\",\n//                 borderRadius: \"8px\",\n//                 border: \"1px solid #ccc\",\n//                 boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.1)\",\n//                 transition: \"all 0.3s ease\",\n//               }}\n//             />\n//           ))}\n//           <button\n//             onClick={add}\n//             style={{\n//               padding: \"0.75rem 1.5rem\",\n//               background: \"linear-gradient(135deg, #667eea, #764ba2)\",\n//               color: \"#fff\",\n//               border: \"none\",\n//               borderRadius: \"8px\",\n//               cursor: \"pointer\",\n//               fontWeight: \"bold\",\n//               boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\n//               transition: \"transform 0.2s ease\",\n//             }}\n//             onMouseEnter={(e) => (e.target.style.transform = \"scale(1.05)\")}\n//             onMouseLeave={(e) => (e.target.style.transform = \"scale(1)\")}\n//           >\n//             Add\n//           </button>\n//         </div>\n//       </div>\n\n//       {/* Asset List */}\n//       <div\n//         style={{\n//           background: \"#ffffff\",\n//           padding: \"2rem\",\n//           borderRadius: \"12px\",\n//           boxShadow: \"0 10px 25px rgba(0,0,0,0.1)\",\n//         }}\n//       >\n//         <h3 style={{ color: \"#764ba2\", fontSize: \"1.5rem\" }}>üì¶ User Assets</h3>\n//         {assets.length === 0 && (\n//           <div style={{ color: \"#999\", marginTop: \"2rem\" }}>No assets found for the user.</div>\n//         )}\n\n//         {assets.map((a) => (\n//           <div\n//             key={a.id}\n//             onMouseEnter={() => setHoveredId(a.id)}\n//             onMouseLeave={() => setHoveredId(null)}\n//             style={{\n//               padding: \"1rem\",\n//               marginBottom: \"1rem\",\n//               borderRadius: \"10px\",\n//               background: \"#f9f9f9\",\n//               boxShadow: \"0 6px 16px rgba(0,0,0,0.08)\",\n//               transition: \"transform 0.3s ease\",\n//               transform: hoveredId === a.id ? \"scale(1.02)\" : \"scale(1)\",\n//               position: \"relative\",\n//             }}\n//           >\n//             {editingId === a.id ? (\n//               <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}>\n//                 {[\"name\", \"type\", \"owner\"].map((field) => (\n//                   <input\n//                     key={field}\n//                     value={editFields[field]}\n//                     onChange={(e) =>\n//                       setEditFields((f) => ({ ...f, [field]: e.target.value }))\n//                     }\n//                     style={{\n//                       padding: \"0.5rem\",\n//                       borderRadius: \"6px\",\n//                       border: \"1px solid #ccc\",\n//                     }}\n//                   />\n//                 ))}\n//                 <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\n//                   <button\n//                     onClick={() => saveEdit(a.id)}\n//                     style={{\n//                       background: \"#36B37E\",\n//                       color: \"#fff\",\n//                       border: \"none\",\n//                       borderRadius: \"6px\",\n//                       padding: \"0.5rem 1rem\",\n//                       fontWeight: \"bold\",\n//                       cursor: \"pointer\",\n//                     }}\n//                   >\n//                     Save\n//                   </button>\n//                   <button\n//                     onClick={cancelEdit}\n//                     style={{\n//                       background: \"#DE350B\",\n//                       color: \"#fff\",\n//                       border: \"none\",\n//                       borderRadius: \"6px\",\n//                       padding: \"0.5rem 1rem\",\n//                       fontWeight: \"bold\",\n//                       cursor: \"pointer\",\n//                     }}\n//                   >\n//                     Cancel\n//                   </button>\n//                 </div>\n//               </div>\n//             ) : (\n//               <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\n//                 <div style={{ fontWeight: \"bold\", fontSize: \"1.1rem\" }}>{a.name}</div>\n//                 <div style={{ fontSize: \"0.9rem\", color: \"#555\" }}>\n//                   {a.type} | {a.owner || \"-\"}\n//                 </div>\n//               </div>\n//             )}\n\n//             {hoveredId === a.id && editingId !== a.id && (\n//               <div\n//                 style={{\n//                   position: \"absolute\",\n//                   top: \"8px\",\n//                   right: \"8px\",\n//                   display: \"flex\",\n//                   gap: \"0.5rem\",\n//                 }}\n//               >\n//                 <button\n//                   onClick={() => startEditing(a)}\n//                   style={{\n//                     background: \"#0052CC\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     borderRadius: \"6px\",\n//                     padding: \"0.3rem 0.6rem\",\n//                     fontWeight: \"bold\",\n//                     cursor: \"pointer\",\n//                   }}\n//                 >\n//                   ‚úèÔ∏è Edit\n//                 </button>\n//                 <button\n//                   onClick={() => deleteAsset(a.id)}\n//                   style={{\n//                     background: \"#DE350B\",\n//                     color: \"#fff\",\n//                     border: \"none\",\n//                     borderRadius: \"6px\",\n//                     padding: \"0.3rem 0.6rem\",\n//                     fontWeight: \"bold\",\n//                     cursor: \"pointer\",\n//                   }}\n//                 >\n//                   üóëÔ∏è Delete\n//                 </button>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Responsive Styles */}\n//       <style>{`\n//         @media (max-width: 600px) {\n//           /* Stack form inputs vertically with full width */\n//           .form-container {\n//             flex-direction: column !important;\n//           }\n//           .form-container input {\n//             flex: none !important;\n//             width: 100% !important;\n//           }\n//           /* Buttons full width on small screens */\n//           .form-container button {\n//             width: 100% !important;\n//           }\n//           /* Asset card padding smaller and font adjustments */\n//           div[style*=\"padding: 1rem\"][style*=\"margin-bottom: 1rem\"] {\n//             padding: 0.75rem !important;\n//             margin-bottom: 0.75rem !important;\n//           }\n//           div[style*=\"font-weight: bold\"][style*=\"font-size: 1.1rem\"] {\n//             font-size: 1rem !important;\n//           }\n//           div[style*=\"font-size: 0.9rem\"][style*=\"color: #555\"] {\n//             font-size: 0.85rem !important;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/assets/Assets.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// this code is ok.\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { listAssets, addAsset } from \"../../services/mockApi\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n \r\n// export default function AssetsBoard() {\r\n//   const [assets, setAssets] = useState([]);\r\n//   const [form, setForm] = useState({ name: \"\", type: \"Laptop\", owner: \"\" });\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editFields, setEditFields] = useState({});\r\n//   const [hoveredId, setHoveredId] = useState(null);\r\n \r\n//   useEffect(() => {\r\n//     listAssets().then(setAssets);\r\n//   }, []);\r\n \r\n//   const add = async () => {\r\n//     const assetName = form.name;\r\n//     const assetType = form.type || \"Laptop\";\r\n//     const assetOwner = form.owner || \"\";\r\n//     if (!assetName?.trim()) return;\r\n \r\n//     const newAsset = {\r\n//       id: uuidv4(),\r\n//       name: assetName,\r\n//       type: assetType,\r\n//       owner: assetOwner,\r\n//     };\r\n//     await addAsset(newAsset);\r\n//     setAssets(await listAssets());\r\n//     setForm({ name: \"\", type: \"Laptop\", owner: \"\" });\r\n//   };\r\n \r\n//   const startEditing = (asset) => {\r\n//     setEditingId(asset.id);\r\n//     setEditFields({ ...asset });\r\n//   };\r\n//   const saveEdit = async (id) => {\r\n//     setAssets(assets.map((a) => (a.id === id ? { ...a, ...editFields } : a)));\r\n//     setEditingId(null);\r\n//   };\r\n//   const cancelEdit = () => setEditingId(null);\r\n \r\n//   const deleteAsset = async (id) => {\r\n//     setAssets(assets.filter((a) => a.id !== id));\r\n//   };\r\n \r\n//   return (\r\n//     <div\r\n//       style={{\r\n//         padding: \"2rem\",\r\n//         fontFamily: \"'Segoe UI', sans-serif\",\r\n//         background: \"linear-gradient(135deg, #e0eafc, #cfdef3)\",\r\n//         minHeight: \"100vh\",\r\n//       }}\r\n//     >\r\n//       {/* Add Asset Form */}\r\n//       <div\r\n//         style={{\r\n//           marginBottom: \"2rem\",\r\n//           background: \"#ffffff\",\r\n//           padding: \"2rem\",\r\n//           borderRadius: \"12px\",\r\n//           boxShadow: \"0 10px 25px rgba(0,0,0,0.1)\",\r\n//           transform: \"perspective(1000px)\",\r\n//         }}\r\n//       >\r\n//         <h2 style={{ marginBottom: \"1rem\", fontSize: \"2rem\", color: \"#333\" }}>\r\n//           üöÄ Add User Asset\r\n//         </h2>\r\n//         <div\r\n//           className=\"form-container\"\r\n//           style={{ display: \"flex\", gap: \"1rem\", flexWrap: \"wrap\" }}\r\n//         >\r\n//           {[\"name\", \"type\", \"owner\"].map((field) => (\r\n//             <input\r\n//               key={field}\r\n//               placeholder={field.charAt(0).toUpperCase() + field.slice(1)}\r\n//               value={form[field]}\r\n//               onChange={(e) => setForm((f) => ({ ...f, [field]: e.target.value }))}\r\n//               style={{\r\n//                 flex: 1,\r\n//                 padding: \"0.75rem\",\r\n//                 borderRadius: \"8px\",\r\n//                 border: \"1px solid #ccc\",\r\n//                 boxShadow: \"inset 0 1px 3px rgba(0,0,0,0.1)\",\r\n//                 transition: \"all 0.3s ease\",\r\n//               }}\r\n//             />\r\n//           ))}\r\n//           <button\r\n//             onClick={add}\r\n//             style={{\r\n//               padding: \"0.75rem 1.5rem\",\r\n//               background: \"linear-gradient(135deg, #667eea, #764ba2)\",\r\n//               color: \"#fff\",\r\n//               border: \"none\",\r\n//               borderRadius: \"8px\",\r\n//               cursor: \"pointer\",\r\n//               fontWeight: \"bold\",\r\n//               boxShadow: \"0 4px 12px rgba(0,0,0,0.2)\",\r\n//               transition: \"transform 0.2s ease\",\r\n//             }}\r\n//             onMouseEnter={(e) => (e.target.style.transform = \"scale(1.05)\")}\r\n//             onMouseLeave={(e) => (e.target.style.transform = \"scale(1)\")}\r\n//           >\r\n//             Add\r\n//           </button>\r\n//         </div>\r\n//       </div>\r\n \r\n//       {/* Asset List */}\r\n//       <div\r\n//         style={{\r\n//           background: \"#ffffff\",\r\n//           padding: \"2rem\",\r\n//           borderRadius: \"12px\",\r\n//           boxShadow: \"0 10px 25px rgba(0,0,0,0.1)\",\r\n//         }}\r\n//       >\r\n//         <h3 style={{ color: \"#764ba2\", fontSize: \"1.5rem\" }}>üì¶ User Assets</h3>\r\n//         {assets.length === 0 && (\r\n//           <div style={{ color: \"#999\", marginTop: \"2rem\" }}>No assets found for the user.</div>\r\n//         )}\r\n \r\n//         {assets.map((a) => (\r\n//           <div\r\n//             key={a.id}\r\n//             onMouseEnter={() => setHoveredId(a.id)}\r\n//             onMouseLeave={() => setHoveredId(null)}\r\n//             style={{\r\n//               padding: \"1rem\",\r\n//               marginBottom: \"1rem\",\r\n//               borderRadius: \"10px\",\r\n//               background: \"#f9f9f9\",\r\n//               boxShadow: \"0 6px 16px rgba(0,0,0,0.08)\",\r\n//               transition: \"transform 0.3s ease\",\r\n//               transform: hoveredId === a.id ? \"scale(1.02)\" : \"scale(1)\",\r\n//               position: \"relative\",\r\n//             }}\r\n//           >\r\n//             {editingId === a.id ? (\r\n//               <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"0.5rem\" }}>\r\n//                 {[\"name\", \"type\", \"owner\"].map((field) => (\r\n//                   <input\r\n//                     key={field}\r\n//                     value={editFields[field]}\r\n//                     onChange={(e) =>\r\n//                       setEditFields((f) => ({ ...f, [field]: e.target.value }))\r\n//                     }\r\n//                     style={{\r\n//                       padding: \"0.5rem\",\r\n//                       borderRadius: \"6px\",\r\n//                       border: \"1px solid #ccc\",\r\n//                     }}\r\n//                   />\r\n//                 ))}\r\n//                 <div style={{ display: \"flex\", gap: \"0.5rem\" }}>\r\n//                   <button\r\n//                     onClick={() => saveEdit(a.id)}\r\n//                     style={{\r\n//                       background: \"#36B37E\",\r\n//                       color: \"#fff\",\r\n//                       border: \"none\",\r\n//                       borderRadius: \"6px\",\r\n//                       padding: \"0.5rem 1rem\",\r\n//                       fontWeight: \"bold\",\r\n//                       cursor: \"pointer\",\r\n//                     }}\r\n//                   >\r\n//                     Save\r\n//                   </button>\r\n//                   <button\r\n//                     onClick={cancelEdit}\r\n//                     style={{\r\n//                       background: \"#DE350B\",\r\n//                       color: \"#fff\",\r\n//                       border: \"none\",\r\n//                       borderRadius: \"6px\",\r\n//                       padding: \"0.5rem 1rem\",\r\n//                       fontWeight: \"bold\",\r\n//                       cursor: \"pointer\",\r\n//                     }}\r\n//                   >\r\n//                     Cancel\r\n//                   </button>\r\n//                 </div>\r\n//               </div>\r\n//             ) : (\r\n//               <div onClick={() => startEditing(a)} style={{ cursor: \"pointer\" }}>\r\n//                 <div style={{ fontWeight: \"bold\", fontSize: \"1.1rem\" }}>{a.name}</div>\r\n//                 <div style={{ fontSize: \"0.9rem\", color: \"#555\" }}>\r\n//                   {a.type} | {a.owner || \"-\"}\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n \r\n//             {hoveredId === a.id && editingId !== a.id && (\r\n//               <div\r\n//                 style={{\r\n//                   position: \"absolute\",\r\n//                   top: \"8px\",\r\n//                   right: \"8px\",\r\n//                   display: \"flex\",\r\n//                   gap: \"0.5rem\",\r\n//                 }}\r\n//               >\r\n//                 <button\r\n//                   onClick={() => startEditing(a)}\r\n//                   style={{\r\n//                     background: \"#0052CC\",\r\n//                     color: \"#fff\",\r\n//                     border: \"none\",\r\n//                     borderRadius: \"6px\",\r\n//                     padding: \"0.3rem 0.6rem\",\r\n//                     fontWeight: \"bold\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                 >\r\n//                   ‚úèÔ∏è Edit\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={() => deleteAsset(a.id)}\r\n//                   style={{\r\n//                     background: \"#DE350B\",\r\n//                     color: \"#fff\",\r\n//                     border: \"none\",\r\n//                     borderRadius: \"6px\",\r\n//                     padding: \"0.3rem 0.6rem\",\r\n//                     fontWeight: \"bold\",\r\n//                     cursor: \"pointer\",\r\n//                   }}\r\n//                 >\r\n//                   üóëÔ∏è Delete\r\n//                 </button>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n \r\n//       {/* Responsive Styles */}\r\n//       <style>{`\r\n//         @media (max-width: 600px) {\r\n//           /* Stack form inputs vertically with full width */\r\n//           .form-container {\r\n//             flex-direction: column !important;\r\n//           }\r\n//           .form-container input {\r\n//             flex: none !important;\r\n//             width: 100% !important;\r\n//           }\r\n//           /* Buttons full width on small screens */\r\n//           .form-container button {\r\n//             width: 100% !important;\r\n//           }\r\n//           /* Asset card padding smaller and font adjustments */\r\n//           div[style*=\"padding: 1rem\"][style*=\"margin-bottom: 1rem\"] {\r\n//             padding: 0.75rem !important;\r\n//             margin-bottom: 0.75rem !important;\r\n//           }\r\n//           div[style*=\"font-weight: bold\"][style*=\"font-size: 1.1rem\"] {\r\n//             font-size: 1rem !important;\r\n//           }\r\n//           div[style*=\"font-size: 0.9rem\"][style*=\"color: #555\"] {\r\n//             font-size: 0.85rem !important;\r\n//           }\r\n//         }\r\n//       `}</style>\r\n//     </div>\r\n//   );\r\n// }"],"mappings":";;AASA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}