{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\context\\\\ProjectContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useState } from 'react';\n\n// const ProjectContext = createContext();\n\n// export const useProjects = () => useContext(ProjectContext);\n\n// export const ProjectProvider = ({ children }) => {\n//   const [projects, setProjects] = useState([]);\n\n//   const addProject = (project) => {\n//     setProjects((prev) => [...prev, project]);\n//   };\n\n//   return (\n//     <ProjectContext.Provider value={{ projects, addProject }}>\n//       {children}\n//     </ProjectContext.Provider>\n//   );\n// };\n\n//////////////////////////////////////////////////////////////////////////////////////////\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { listProjects, addProject, updateProject, deleteProject } from '../services/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectContext = /*#__PURE__*/createContext();\nexport const useProjects = () => {\n  _s();\n  return useContext(ProjectContext);\n};\n_s(useProjects, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const ProjectProvider = ({\n  children\n}) => {\n  _s2();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    // Fetch projects on mount\n    const fetchProjects = async () => {\n      const data = await listProjects();\n      setProjects(data);\n    };\n    fetchProjects();\n  }, []);\n  const addNewProject = async project => {\n    const newProject = await addProject(project);\n    setProjects(prev => [...prev, newProject]);\n    return newProject;\n  };\n  const updateExistingProject = async (id, patch) => {\n    const updatedProject = await updateProject(id, patch);\n    setProjects(prev => prev.map(p => p.id === id ? updatedProject : p));\n    return updatedProject;\n  };\n  const deleteExistingProject = async id => {\n    await deleteProject(id);\n    setProjects(prev => prev.filter(p => p.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(ProjectContext.Provider, {\n    value: {\n      projects,\n      addProject: addNewProject,\n      updateProject: updateExistingProject,\n      deleteProject: deleteExistingProject\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProjectProvider, \"TSrpuQX6QU8EgjQSxaAzj2u9i4o=\");\n_c = ProjectProvider;\nvar _c;\n$RefreshReg$(_c, \"ProjectProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","listProjects","addProject","updateProject","deleteProject","jsxDEV","_jsxDEV","ProjectContext","useProjects","_s","ProjectProvider","children","_s2","projects","setProjects","fetchProjects","data","addNewProject","project","newProject","prev","updateExistingProject","id","patch","updatedProject","map","p","deleteExistingProject","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/context/ProjectContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState } from 'react';\r\n\r\n// const ProjectContext = createContext();\r\n\r\n// export const useProjects = () => useContext(ProjectContext);\r\n\r\n// export const ProjectProvider = ({ children }) => {\r\n//   const [projects, setProjects] = useState([]);\r\n\r\n//   const addProject = (project) => {\r\n//     setProjects((prev) => [...prev, project]);\r\n//   };\r\n\r\n//   return (\r\n//     <ProjectContext.Provider value={{ projects, addProject }}>\r\n//       {children}\r\n//     </ProjectContext.Provider>\r\n//   );\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////////////////////////\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { listProjects, addProject, updateProject, deleteProject } from '../services/mockApi';\r\n\r\nconst ProjectContext = createContext();\r\n\r\nexport const useProjects = () => useContext(ProjectContext);\r\n\r\nexport const ProjectProvider = ({ children }) => {\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch projects on mount\r\n    const fetchProjects = async () => {\r\n      const data = await listProjects();\r\n      setProjects(data);\r\n    };\r\n    fetchProjects();\r\n  }, []);\r\n\r\n  const addNewProject = async (project) => {\r\n    const newProject = await addProject(project);\r\n    setProjects((prev) => [...prev, newProject]);\r\n    return newProject;\r\n  };\r\n\r\n  const updateExistingProject = async (id, patch) => {\r\n    const updatedProject = await updateProject(id, patch);\r\n    setProjects((prev) => prev.map(p => p.id === id ? updatedProject : p));\r\n    return updatedProject;\r\n  };\r\n\r\n  const deleteExistingProject = async (id) => {\r\n    await deleteProject(id);\r\n    setProjects((prev) => prev.filter(p => p.id !== id));\r\n  };\r\n\r\n  return (\r\n    <ProjectContext.Provider value={{ projects, addProject: addNewProject, updateProject: updateExistingProject, deleteProject: deleteExistingProject }}>\r\n      {children}\r\n    </ProjectContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,YAAY,EAAEC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7F,MAAMC,cAAc,gBAAGV,aAAa,CAAC,CAAC;AAEtC,OAAO,MAAMW,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMX,UAAU,CAACS,cAAc,CAAC;AAAA;AAACE,EAAA,CAA/CD,WAAW;AAExB,OAAO,MAAME,eAAe,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC/C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMe,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,IAAI,GAAG,MAAMf,YAAY,CAAC,CAAC;MACjCa,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAG,MAAOC,OAAO,IAAK;IACvC,MAAMC,UAAU,GAAG,MAAMjB,UAAU,CAACgB,OAAO,CAAC;IAC5CJ,WAAW,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,UAAU,CAAC,CAAC;IAC5C,OAAOA,UAAU;EACnB,CAAC;EAED,MAAME,qBAAqB,GAAG,MAAAA,CAAOC,EAAE,EAAEC,KAAK,KAAK;IACjD,MAAMC,cAAc,GAAG,MAAMrB,aAAa,CAACmB,EAAE,EAAEC,KAAK,CAAC;IACrDT,WAAW,CAAEM,IAAI,IAAKA,IAAI,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,GAAGE,cAAc,GAAGE,CAAC,CAAC,CAAC;IACtE,OAAOF,cAAc;EACvB,CAAC;EAED,MAAMG,qBAAqB,GAAG,MAAOL,EAAE,IAAK;IAC1C,MAAMlB,aAAa,CAACkB,EAAE,CAAC;IACvBR,WAAW,CAAEM,IAAI,IAAKA,IAAI,CAACQ,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;EACtD,CAAC;EAED,oBACEhB,OAAA,CAACC,cAAc,CAACsB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,QAAQ;MAAEX,UAAU,EAAEe,aAAa;MAAEd,aAAa,EAAEkB,qBAAqB;MAAEjB,aAAa,EAAEuB;IAAsB,CAAE;IAAAhB,QAAA,EACjJA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;AAACtB,GAAA,CAlCWF,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}