{"ast":null,"code":"// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\nimport { v4 as uuidv4 } from 'uuid';\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [{\n      id: 'u1',\n      name: 'Admin User',\n      email: 'admin@demo.com',\n      role: 'Admin'\n    }, {\n      id: 'u2',\n      name: 'Dev Alice',\n      email: 'alice@demo.com',\n      role: 'Developer'\n    }, {\n      id: 'u3',\n      name: 'Manager Bob',\n      email: 'bob@demo.com',\n      role: 'Manager'\n    }];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [{\n      id: 'p1',\n      key: 'ALPHA',\n      name: 'Alpha',\n      description: 'Alpha project',\n      leads: ['u3'],\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }, {\n      id: 'p2',\n      key: 'BETA',\n      name: 'Beta',\n      description: 'Beta project',\n      leads: ['u2'],\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [{\n      id: 'i1',\n      projectId: 'p1',\n      title: 'Setup repo',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 3,\n      createdAt: Date.now()\n    }, {\n      id: 'i2',\n      projectId: 'p1',\n      title: 'Login bug',\n      status: 'inprogress',\n      priority: 'P1',\n      assignee: 'u2',\n      type: 'Bug',\n      storyPoints: 1,\n      createdAt: Date.now()\n    }, {\n      id: 'i3',\n      projectId: 'p2',\n      title: 'OAuth',\n      status: 'done',\n      priority: 'P3',\n      assignee: 'u3',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{\n      id: 'a1',\n      name: 'Dev Laptop',\n      type: 'Laptop',\n      owner: 'u2',\n      status: 'active'\n    }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{\n      id: uuidv4(),\n      userId: 'u2',\n      text: 'Assigned i1',\n      read: false,\n      ts: Date.now()\n    }]));\n  }\n}\nexport function mockLogin(email, password) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\nexport function getProject(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n}\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const now = Date.now();\n  p.createdAt = now;\n  p.lastUpdated = now;\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\n\n// ✅ New: delete project\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\n\n// ✅ New: update project\nexport function updateProject(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch,\n      lastUpdated: Date.now()\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Project not found');\n}\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\nexport function getIssue(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n}\nexport function createIssue(data) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = {\n    ...data,\n    id,\n    createdAt: Date.now()\n  };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr[idx]));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('not found');\n}\nexport function moveIssue(id, status) {\n  return updateIssue(id, {\n    status\n  });\n}\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}","map":{"version":3,"names":["v4","uuidv4","KEY","USER","USERS","PROJECTS","ISSUES","ASSETS","NOTIFS","ensure","localStorage","getItem","users","id","name","email","role","setItem","JSON","stringify","projects","key","description","leads","createdAt","Date","now","lastUpdated","issues","projectId","title","status","priority","assignee","type","storyPoints","owner","userId","text","read","ts","mockLogin","password","parse","user","find","u","Promise","resolve","logout","removeItem","getCurrentUser","s","listUsers","addUser","arr","push","listProjects","getProject","x","addProject","p","deleteProject","filtered","filter","updateProject","patch","idx","findIndex","reject","listIssues","i","getIssue","createIssue","data","Math","floor","random","issue","updateIssue","moveIssue","listAssets","addAsset","a","listNotifs","n","markNotif"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/services/mockApi.js"],"sourcesContent":["\n// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\nimport { v4 as uuidv4 } from 'uuid';\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS:'tf_users_v3',\n  PROJECTS:'tf_projects_v3',\n  ISSUES:'tf_issues_v3',\n  ASSETS:'tf_assets_v3',\n  NOTIFS:'tf_notifs_v3'\n};\n\nfunction ensure(){\n  if(!localStorage.getItem(KEY.USERS)){\n    const users = [\n      {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n      {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n      {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n    ];\n    localStorage.setItem(KEY.USERS,JSON.stringify(users));\n  }\n  if(!localStorage.getItem(KEY.PROJECTS)){\n    const projects=[\n      {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n      {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n    ];\n    localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n  }\n  if(!localStorage.getItem(KEY.ISSUES)){\n    const issues=[\n      {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n      {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n      {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n    ];\n    localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n  }\n  if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n  if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n}\n\nexport function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\nexport function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\nexport function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\nexport function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\nexport function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\nexport function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\nexport function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\nexport function addProject(p){\n  const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n  const now = Date.now();\n  p.createdAt = now;\n  p.lastUpdated = now;\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n  return Promise.resolve(p);\n}\n\n// ✅ New: delete project\nexport function deleteProject(id){\n  const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\n\n// ✅ New: update project\nexport function updateProject(id, patch){\n  const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n  const idx=arr.findIndex(p => p.id===id);\n  if(idx>=0){\n    arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n    localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Project not found');\n}\n\nexport function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\nexport function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\nexport function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\nexport function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\nexport function moveIssue(id,status){ return updateIssue(id,{status}); }\n\nexport function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\nexport function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\nexport function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\nexport function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}