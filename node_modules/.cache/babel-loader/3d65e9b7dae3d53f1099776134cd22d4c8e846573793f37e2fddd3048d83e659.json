{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\forusers\\\\userspage\\\\src\\\\components\\\\boards\\\\KanbanBoard.js\",\n  _s = $RefreshSig$();\n// //////////////////////////////////////////////////////////////////\n// //for updated the ticket\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'John Doe', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'Jane Smith', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\n// const mockEpics = [{ id: 'p1', name: 'Frontend' }, { id: 'p2', name: 'Middleware' }];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n// const listEpics = async () => { await simulateApiDelay(); return mockEpics; };\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = { id: 'p' + (mockEpics.length + 1), name: epicName };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => { if (issue.epic === epicId) issueIndices.push(index); });\n//   issueIndices.sort((a, b) => b - a).forEach(index => { mockIssues.splice(index, 1); });\n// };\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n// const createIssueAPI = async (issue) => { await simulateApiDelay(); mockIssues.push(issue); };\n// const deleteIssueAPI = async (issueId) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === issueId); if (idx > -1) mockIssues.splice(idx, 1); };\n// const updateIssueAPI = async (updatedIssue) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === updatedIssue.id); if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue }; };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n//   const [columnsByLane, setColumnsByLane] = useState({});\n//   const [columnModal, setColumnModal] = useState(null);\n//   const [columnInput, setColumnInput] = useState('');\n//   const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n//   const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {}, initialTitles = {}, initialCols = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//           initialCols[lane.id] = defaultStatuses.slice();\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//         setColumnsByLane(initialCols);\n//       } catch (err) { console.error(err); }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const openAddColumnModal = (e, laneId, colIndex) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n//     setColumnModal({ laneId, colIndex, type: 'add' });\n//     setColumnInput('');\n//   };\n//   const openEditColumnModal = (e, laneId, colIndex, status) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n//     setColumnModal({ laneId, colIndex, type: 'menu' });\n//     setColumnInput(status);\n//   };\n//   const handleAddColumn = () => {\n//     const name = columnInput.trim();\n//     if (!name) return alert('Column name is required');\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[columnModal.laneId]];\n//       if (cols.includes(name.toLowerCase())) alert('Column name already exists');\n//       else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n//       return { ...prev, [columnModal.laneId]: cols };\n//     });\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const handleEditColumn = () => {\n//     const name = columnInput.trim();\n//     if (!name) return alert('Column name is required');\n//     const { laneId, colIndex } = columnModal;\n//     const oldCol = columnsByLane[laneId][colIndex];\n//     if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n//       alert('Column name already exists');\n//       return;\n//     }\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[laneId]];\n//       cols[colIndex] = name.toLowerCase();\n//       return { ...prev, [laneId]: cols };\n//     });\n//     const updatedIssues = issues.map(issue =>\n//       (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? { ...issue, status: name.toLowerCase() } : issue\n//     );\n//     setIssues(updatedIssues);\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const handleDeleteColumn = () => {\n//     const { laneId, colIndex } = columnModal;\n//     const removedCol = columnsByLane[laneId][colIndex];\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[laneId]];\n//       cols.splice(colIndex, 1);\n//       return { ...prev, [laneId]: cols };\n//     });\n//     const updatedIssues = issues.map(issue =>\n//       (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? { ...issue, status: 'backlog' } : issue\n//     );\n//     setIssues(updatedIssues);\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) { console.error(err); }\n//   };\n//   const onDragOver = e => e.preventDefault();\n\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error(err); }\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   // Create Epic Modal Handlers\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) {\n//       alert('Epic name is required');\n//       return;\n//     }\n//     try {\n//       await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n//       const newEpic = updatedEpics[updatedEpics.length - 1];\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//       setColumnsByLane(prev => ({ ...prev, [newEpic.id]: defaultStatuses.slice() }));\n//     } catch (error) {\n//       console.error('Error creating epic:', error);\n//     }\n//   };\n\n//   // Delete Epic Modal Handler\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) {\n//       alert('Please select an epic to delete');\n//       return;\n//     }\n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//       setColumnsByLane(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//       setOpenSwimlanes(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//       setCustomTitles(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//     } catch (error) {\n//       console.error('Error deleting epic:', error);\n//     }\n//   };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic management buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           {/* <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>+ Create Epic</button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>🗑 Delete Epic</button> */}\n//         </div>\n\n//       </div>\n\n//       {/* Swimlanes and columns */}\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         const statuses = columnsByLane[lane.id] || defaultStatuses;\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>{isOpen ? '▼' : '▶'}</button>\n//               <span className=\"swimlane-icon\">⚡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => setCustomTitles(prev => ({ ...prev, [lane.id]: e.target.value }))} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {statuses.map((status, idx) => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         <span className=\"col-icons\">\n//                           <button className=\"col-icon\" title=\"Add Column\" onClick={e => openAddColumnModal(e, lane.id, idx)}>＋</button>\n//                           <button className=\"col-icon\" title=\"Edit/Delete Column\" onClick={e => openEditColumnModal(e, lane.id, idx, status)}>⋮</button>\n//                         </span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>✔</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>✖</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => {\n//                         const isHovered = hoveredAssigneeId === issue.id;\n//                         return (\n//                           <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                             <div className=\"card-top\">\n//                               <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                               <span className=\"card-id\">{issue.id}</span>\n//                             </div>\n//                             <div className=\"card-title\">{issue.title}</div>\n//                             <div className=\"card-meta\">\n//                               {issue.dueDate && <span className=\"card-due\">📅 {issue.dueDate}</span>}\n//                               <span className={`card-priority ${issue.priority.toLowerCase()}`}>⚑ {issue.priority}</span>\n//                               {issue.assignee && (\n//                                 <span className=\"card-assignee\" onMouseEnter={() => setHoveredAssigneeId(issue.id)} onMouseLeave={() => setHoveredAssigneeId(null)} style={{ position: 'relative', cursor: 'default', userSelect: 'none' }}>\n//                                   👤\n//                                   {isHovered && <div className=\"assignee-tooltip\">{issue.assignee}</div>}\n//                                 </span>\n//                               )}\n//                             </div>\n//                           </div>\n//                         );\n//                       })}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Column Add/Edit modal */}\n//       {columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && (\n//         <div className=\"epic-modal-overlay\" onClick={() => setColumnModal(null)} style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, zIndex: 1000 }}>\n//           <div className=\"epic-modal\" onClick={e => e.stopPropagation()} style={{\n//             position: 'absolute',\n//             top: modalPosition.top,\n//             left: modalPosition.left,\n//             transform: 'translateX(-50%)',\n//             minWidth: 280,\n//             maxWidth: 320,\n//             padding: 20,\n//             borderRadius: 10,\n//             background: 'white',\n//             boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n//             zIndex: 1100\n//           }}>\n//             {columnModal.type === 'add' ? (\n//               <>\n//                 <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Add Column</h3>\n//                 <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n//                 <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n//                   <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n//                   <button className=\"btn-create\" onClick={handleAddColumn} style={btnStyle.create}>Add</button>\n//                 </div>\n//               </>\n//             ) : (\n//               <>\n//                 <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Edit/Delete Column</h3>\n//                 <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n//                 <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n//                   <button className=\"btn-save\" onClick={handleEditColumn} style={btnStyle.create}>Rename</button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteColumn} style={btnStyle.delete}>Delete</button>\n//                   <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n//                 </div>\n//               </>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Issue modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <div className=\"modal-header\">\n//               <h2>{editIssue.epicName}</h2>\n//               <button className=\"modal-close-btn\" onClick={() => setSelectedIssue(null)}>✖</button>\n//             </div>\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {columnsByLane[editIssue.epic]?.map(st => <option key={st} value={st}>{st}</option>) || defaultStatuses.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\", alignItems: 'center' }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//               <button className=\"modal-delete-btn\" onClick={async () => {\n//                 if (window.confirm('Delete this issue?')) {\n//                   await deleteIssueAPI(selectedIssue.id);\n//                   const refreshed = await listIssues(projectId);\n//                   setIssues(refreshed);\n//                   setSelectedIssue(null);\n//                 }\n//               }}>🗑</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Inline CSS styles */}\n//       <style>{`\n//         /* Include the full CSS from the previous answer - Kanban board styling, tooltip, modals, buttons */\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n// body {\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//   background-color: #f5f6f8;\n//   margin: 0;\n//   padding: 16px;\n// }\n// .board-wrap {\n//   max-width: 100%;\n//   overflow-x: auto;\n// }\n// .swimlane {\n//   background: white;\n//   border-radius: 8px;\n//   margin-bottom: 16px;\n//   box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n//   overflow: hidden;\n// }\n// .swimlane-header {\n//   display: flex;\n//   align-items: center;\n//   padding: 12px 16px;\n//   background: #fafbfc;\n//   border-bottom: 1px solid #dfe5e5;\n//   font-weight: 600;\n//   font-size: 14px;\n//   color: #172b4d;\n// }\n// .swimlane-toggle, .swimlane-icon {\n//   color: #5e6c84;\n//   margin-right: 8px;\n//   cursor: pointer;\n// }\n// .swimlane-toggle {\n//   border: none;\n//   background: transparent;\n//   font-size: 14px;\n// }\n// .swimlane-icon {\n//   font-size: 18px;\n// }\n// .swimlane-title-input {\n//   border: 1px solid #dfe5e5;\n//   border-radius: 4px;\n//   padding: 4px 8px;\n//   font-size: 14px;\n//   font-weight: 600;\n//   background: white;\n//   margin-right: 8px;\n//   min-width: 150px;\n//   color: #172b4d;\n// }\n// .swimlane-title-input:focus {\n//   outline: none;\n//   border-color: #1976d2;\n// }\n// .swimlane-title-input::placeholder {\n//   color: #a2adba;\n// }\n// .swimlane-title-input:hover {\n//   border-color: #a2adba;\n// }\n// .swimlane-title-input:disabled {\n//   background: #f5f6f8;\n//   color: #a2adba;\n// }\n// .swimlane-count {\n//   color: #5e6c84;\n//   font-size: 12px;\n//   font-weight: normal;\n//   user-select: none;\n// }\n// .kanban-row {\n//   display: flex;\n//   padding: 16px;\n//   gap: 12px;\n//   overflow-x: auto;\n// }\n// .kanban-column {\n//   flex: 0 0 260px;\n//   background: #f5f6f8;\n//   border-radius: 6px;\n//   padding: 12px;\n//   display: flex;\n//   flex-direction: column;\n//   gap: 12px;\n//   border: 1px solid #dfe5e5;\n//   user-select: none;\n// }\n// .col-header {\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 4px;\n//   gap: 6px;\n// }\n// .col-title {\n//   font-weight: 600;\n//   font-size: 12px;\n//   color: #5e6c84;\n//   text-transform: uppercase;\n//   letter-spacing: 0.5px;\n//   flex-grow: 1;\n//   user-select: none;\n// }\n// .col-title:empty {\n//   height: 20px;\n// }\n// .col-count {\n//   background: #dfe5e5;\n//   color: #5e6c84;\n//   border-radius: 12px;\n//   padding: 2px 8px;\n//   font-size: 11px;\n//   font-weight: 600;\n//   user-select: none;\n//   min-width: 20px;\n//   text-align: center;\n// }\n// .col-icons {\n//   display: flex;\n//   gap: 6px;\n// }\n// .col-icon {\n//   cursor: pointer;\n//   color: #5e6c84;\n//   font-size: 18px;\n//   background: none;\n//   border: none;\n//   padding: 0;\n//   user-select: none;\n// }\n// .col-icon:hover {\n//   color: #1976d2;\n// }\n// .create-card {\n//   background: white;\n//   padding: 10px;\n//   border-radius: 6px;\n//   box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n// }\n// .create-card textarea {\n//   resize: vertical;\n//   min-height: 50px;\n//   font-size: 14px;\n//   padding: 8px;\n//   border-radius: 5px;\n//   border: 1px solid #dfe5e5;\n//   font-family: inherit;\n// }\n// .create-card textarea:focus {\n//   outline: none;\n//   border-color: #1976d2;\n// }\n// .create-card .create-actions {\n//   display: flex;\n//   align-items: center;\n//   gap: 12px;\n// }\n// .create-card .create-actions select {\n//   flex-grow: 1;\n//   padding: 8px;\n//   border: 1px solid #dfe5e5;\n//   border-radius: 5px;\n//   font-size: 14px;\n// }\n// .create-card button {\n//   padding: 8px 12px;\n//   font-size: 14px;\n//   cursor: pointer;\n//   border-radius: 5px;\n//   border: 1px solid #dfe5e5;\n//   background: #f5f6f8;\n//   user-select: none;\n//   transition: background-color 0.2s;\n// }\n// .create-card button:hover {\n//   background: #e1e7f0;\n// }\n// .card-item {\n//   background: white;\n//   border-radius: 8px;\n//   padding: 12px;\n//   box-shadow: 0 0 2px rgba(0,0,0,0.1);\n//   cursor: pointer;\n//   user-select: none;\n//   display: flex;\n//   flex-direction: column;\n//   gap: 6px;\n//   border: 1px solid #dfe5e5;\n//   transition: box-shadow 0.2s ease, border-color 0.2s ease;\n// }\n// .card-item:hover {\n//   box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n//   border-color: #a2adba;\n// }\n// .card-item .card-top {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   font-size: 12px;\n//   font-weight: 600;\n//   color: #5e6c84;\n//   gap: 10px;\n// }\n// .card-item .card-top .card-id {\n//   font-family: monospace;\n//   color: #a2adba;\n//   user-select: text;\n// }\n// .card-item .card-tags .tag {\n//   border-radius: 6px;\n//   padding: 3px 7px;\n//   font-size: 11px;\n//   font-weight: 600;\n//   text-transform: uppercase;\n//   white-space: nowrap;\n//   user-select: none;\n//   margin-right: 6px;\n// }\n// .tag-task {\n//   background: #e1efff;\n//   color: #1976d2;\n// }\n// .tag-bug {\n//   background: #ffebec;\n//   color: #d62127;\n// }\n// .tag-subtask {\n//   background: #f5e6ff;\n//   color: #772da0;\n// }\n// .card-item .card-title {\n//   font-weight: 600;\n//   font-size: 14px;\n//   color: #2b3a59;\n// }\n// .card-item .card-meta {\n//   display: flex;\n//   gap: 10px;\n//   font-size: 12px;\n//   color: #6b7c93;\n//   align-items: center;\n//   user-select: none;\n// }\n// .card-item .card-meta span {\n//   background: #f5f7fa;\n//   color: #6b7c93;\n//   padding: 3px 8px;\n//   border-radius: 12px;\n// }\n// .card-item .card-meta .card-priority.low {\n//   background: #d4edda;\n//   color: #155724;\n// }\n// .card-item .card-meta .card-priority.medium {\n//   background: #fff3cd;\n//   color: #856404;\n// }\n// .card-item .card-meta .card-priority.high {\n//   background: #f8d7da;\n//   color: #721c24;\n// }\n// .card-item .card-meta .card-assignee {\n//   position: relative;\n//   cursor: default;\n//   padding-left: 18px;\n// }\n// .card-item .card-meta .card-assignee:hover .tooltip {\n//   display: block;\n// }\n// .card-item .card-meta .tooltip {\n//   position: absolute;\n//   top: -30px;\n//   left: 50%;\n//   transform: translateX(-50%);\n//   background: #222;\n//   color: white;\n//   border-radius: 4px;\n//   padding: 4px 8px;\n//   font-size: 11px;\n//   white-space: nowrap;\n//   z-index: 10;\n//   display: none;\n//   user-select: none;\n// }\n// .modal-overlay {\n//   position: fixed;\n//   top: 0; left: 0; right: 0; bottom: 0;\n//   background: rgba(0,0,0,0.5);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   z-index: 1000;\n// }\n// .modal {\n//   background: white;\n//   border-radius: 8px;\n//   padding: 24px;\n//   width: 700px;\n//   max-height: 80vh;\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 16px;\n//   overflow-y: auto;\n//   position: relative;\n// }\n// .modal-header {\n//   grid-column: 1 / -1;\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   font-weight: 700;\n//   font-size: 20px;\n//   color: #2b3a59;\n// }\n// .modal-header button {\n//   background: none;\n//   border: none;\n//   font-size: 22px;\n//   cursor: pointer;\n//   color: #a2adba;\n// }\n// .modal-header button:hover {\n//   color: #485fc7;\n// }\n// .modal-field {\n//   display: flex;\n//   flex-direction: column;\n//   gap: 6px;\n// }\n// .modal-field label {\n//   font-size: 12px;\n//   font-weight: 600;\n//   color: #6b7c93;\n//   user-select: none;\n// }\n// .modal-field input, .modal-field textarea, .modal-field select {\n//   padding: 8px 10px;\n//   border-radius: 6px;\n//   border: 1px solid #dfe5e5;\n//   font-size: 14px;\n//   color: #2b3a59;\n//   font-family: inherit;\n// }\n// .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//   outline: none;\n//   border-color: #485fc7;\n//   background: #f8fcff;\n// }\n// .modal-actions {\n//   grid-column: 1 / -1;\n//   display: flex;\n//   justify-content: flex-end;\n//   gap: 12px;\n//   align-items: center;\n//   margin-top: 12px;\n// }\n// button.btn-reset {\n//   background: #5e6c84;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-reset:hover {\n//   background: #485fc7;\n// }\n// button.btn-save {\n//   background: #485fc7;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-save:hover {\n//   background: #374cac;\n// }\n// button.btn-delete {\n//   background: #d94343;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-delete:hover {\n//   background: #b83232;\n// }\n// input[disabled] {\n//   background: #efeff1;\n//   cursor: not-allowed;\n//   color: #b3b3b3;\n// }\n// .epic-modal-overlay {\n//   position: fixed;\n//   top: 0; left: 0; right: 0; bottom: 0;\n//   background: rgba(0,0,0,0.5);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   z-index: 1000;\n// }\n// .epic-modal {\n//   background: white;\n//   border-radius: 8px;\n//   width: 350px;\n//   padding: 20px;\n//   box-shadow: 0 0 10px rgba(0,0,0,0.2);\n//   position: relative;\n// }\n// .epic-modal-content h3 {\n//   margin: 0 0 20px 0;\n//   font-weight: 700;\n//   font-size: 20px;\n//   color: #2b3a59;\n//   user-select: none;\n// }\n// .epic-modal-content p.delete-warning {\n//   background: #ffe6e6;\n//   padding: 10px;\n//   color: #d94343;\n//   font-size: 14px;\n//   margin-bottom: 15px;\n//   border-radius: 6px;\n// }\n// .epic-modal-input, .epic-modal-select {\n//   width: 100%;\n//   padding: 10px;\n//   font-size: 14px;\n//   margin-bottom: 20px;\n//   border-radius: 6px;\n//   border: 1px solid #dfe5e5;\n//   box-sizing: border-box;\n//   font-family: inherit;\n// }\n// .epic-modal-input:focus, .epic-modal-select:focus {\n//   outline: none;\n//   border-color: #485fc7;\n// }\n// .epic-modal-actions {\n//   display: flex;\n//   justify-content: space-between;\n//   gap: 15px;\n// }\n// button.create-epic-btn, button.delete-epic-btn {\n//   background: #485fc7;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 10px 20px;\n//   border-radius: 8px;\n//   cursor: pointer;\n//   font-size: 15px;\n//   user-select: none;\n// }\n// button.create-epic-btn:hover, button.delete-epic-btn:hover {\n//   background: #374cac;\n// }\n// button.delete-epic-btn {\n//   background: #d94343;\n// }\n// button.delete-epic-btn:hover {\n//   background: #b83232;\n// }\n\n//       `}</style>\n\n//     </div>\n//   );\n// }\n\n// const btnStyle = {\n//   cancel: {\n//     padding: '10px 18px',\n//     borderRadius: '6px',\n//     border: 'none',\n//     backgroundColor: '#5e6c84',\n//     color: 'white',\n//     fontWeight: '600',\n//     fontSize: '14px',\n//     cursor: 'pointer'\n//   },\n//   // create: {\n//   //   padding: '10px 18px',\n//   //   borderRadius: '6px',\n//   //   border: 'none',\n//   //   backgroundColor: '#1976d2',\n//   //   color: 'white',\n//   //   fontWeight: '600',\n//   //   fontSize: '14px',\n//   //   cursor: 'pointer'\n//   // },\n//   delete: {\n//     padding: '10px 18px',\n//     borderRadius: '6px',\n//     border: 'none',\n//     backgroundColor: '#d32f2f',\n//     color: 'white',\n//     fontWeight: '600',\n//     fontSize: '14px',\n//     cursor: 'pointer'\n//   }\n// };\n\n//======================================================================================\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockIssues = [{\n  id: 'i1',\n  epic: 'p1',\n  epicName: 'Frontend',\n  status: 'todo',\n  type: 'Task',\n  title: 'Setup repo',\n  assignee: 'John Doe',\n  storyPoints: 3,\n  labels: [],\n  dueDate: '2025-09-30',\n  reporter: 'admin',\n  priority: 'High',\n  startDate: '2025-09-15',\n  description: '',\n  subtasks: '',\n  comments: ''\n}, {\n  id: 'i3',\n  epic: 'p2',\n  epicName: 'Middleware',\n  status: 'todo',\n  type: 'Subtask',\n  title: 'API integration',\n  assignee: 'Jane Smith',\n  storyPoints: 2,\n  labels: [],\n  dueDate: '',\n  reporter: 'lead-dev',\n  priority: 'Low',\n  startDate: '2025-09-18',\n  description: '',\n  subtasks: '',\n  comments: ''\n}];\nconst defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\nconst mockEpics = [{\n  id: 'p1',\n  name: 'Frontend'\n}, {\n  id: 'p2',\n  name: 'Middleware'\n}];\nconst simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\nconst listIssues = async projectId => {\n  await simulateApiDelay();\n  return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n};\nconst listEpics = async () => {\n  await simulateApiDelay();\n  return mockEpics;\n};\nconst createEpicAPI = async epicName => {\n  await simulateApiDelay();\n  const newEpic = {\n    id: 'p' + (mockEpics.length + 1),\n    name: epicName\n  };\n  mockEpics.push(newEpic);\n  return newEpic;\n};\nconst deleteEpicAPI = async epicId => {\n  await simulateApiDelay();\n  const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n  if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n  const issueIndices = [];\n  mockIssues.forEach((issue, index) => {\n    if (issue.epic === epicId) issueIndices.push(index);\n  });\n  issueIndices.sort((a, b) => b - a).forEach(index => {\n    mockIssues.splice(index, 1);\n  });\n};\nconst moveIssue = async (issueId, status) => {\n  await simulateApiDelay();\n  const issue = mockIssues.find(i => i.id === issueId);\n  if (!issue) throw new Error('Issue not found');\n  issue.status = status;\n};\nconst createIssueAPI = async issue => {\n  await simulateApiDelay();\n  mockIssues.push(issue);\n};\nconst deleteIssueAPI = async issueId => {\n  await simulateApiDelay();\n  const idx = mockIssues.findIndex(i => i.id === issueId);\n  if (idx > -1) mockIssues.splice(idx, 1);\n};\nconst updateIssueAPI = async updatedIssue => {\n  await simulateApiDelay();\n  const idx = mockIssues.findIndex(i => i.id === updatedIssue.id);\n  if (idx > -1) mockIssues[idx] = {\n    ...mockIssues[idx],\n    ...updatedIssue\n  };\n};\nconst getSwimlanes = (issues, epics) => epics.map(epic => {\n  const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n  return {\n    id: epic.id,\n    title: epic.name,\n    issues: epicIssues\n  };\n});\nexport default function KanbanBoard() {\n  _s();\n  var _columnsByLane$editIs;\n  const {\n    projectId\n  } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [openSwimlanes, setOpenSwimlanes] = useState({});\n  const [customTitles, setCustomTitles] = useState({});\n  const [createLaneId, setCreateLaneId] = useState(null);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [newTaskType, setNewTaskType] = useState('Task');\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [editIssue, setEditIssue] = useState(null);\n  const [showCreateEpic, setShowCreateEpic] = useState(false);\n  const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [epicToDelete, setEpicToDelete] = useState('');\n  const [columnsByLane, setColumnsByLane] = useState({});\n  const [columnModal, setColumnModal] = useState(null);\n  const [columnInput, setColumnInput] = useState('');\n  const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n  const [modalPosition, setModalPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [isMobile, setIsMobile] = useState(false);\n  const [activeSwimlane, setActiveSwimlane] = useState(null);\n\n  // Detect mobile screen size\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkScreenSize();\n    window.addEventListener('resize', checkScreenSize);\n    return () => window.removeEventListener('resize', checkScreenSize);\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n        setIssues(issuesData);\n        setEpics(epicsData);\n        const lanes = getSwimlanes(issuesData, epicsData);\n        const initialOpen = {},\n          initialTitles = {},\n          initialCols = {};\n        lanes.forEach(lane => {\n          initialOpen[lane.id] = true;\n          initialTitles[lane.id] = lane.title;\n          initialCols[lane.id] = defaultStatuses.slice();\n        });\n        setOpenSwimlanes(initialOpen);\n        setCustomTitles(initialTitles);\n        setColumnsByLane(initialCols);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [projectId]);\n  const openAddColumnModal = (e, laneId, colIndex) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({\n      top: rect.bottom + window.scrollY + 8,\n      left: rect.left + window.scrollX\n    });\n    setColumnModal({\n      laneId,\n      colIndex,\n      type: 'add'\n    });\n    setColumnInput('');\n  };\n  const openEditColumnModal = (e, laneId, colIndex, status) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({\n      top: rect.bottom + window.scrollY + 8,\n      left: rect.left + window.scrollX\n    });\n    setColumnModal({\n      laneId,\n      colIndex,\n      type: 'menu'\n    });\n    setColumnInput(status);\n  };\n  const handleAddColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    setColumnsByLane(prev => {\n      const cols = [...prev[columnModal.laneId]];\n      if (cols.includes(name.toLowerCase())) alert('Column name already exists');else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n      return {\n        ...prev,\n        [columnModal.laneId]: cols\n      };\n    });\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleEditColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    const {\n      laneId,\n      colIndex\n    } = columnModal;\n    const oldCol = columnsByLane[laneId][colIndex];\n    if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n      alert('Column name already exists');\n      return;\n    }\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols[colIndex] = name.toLowerCase();\n      return {\n        ...prev,\n        [laneId]: cols\n      };\n    });\n    const updatedIssues = issues.map(issue => (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? {\n      ...issue,\n      status: name.toLowerCase()\n    } : issue);\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleDeleteColumn = () => {\n    const {\n      laneId,\n      colIndex\n    } = columnModal;\n    const removedCol = columnsByLane[laneId][colIndex];\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols.splice(colIndex, 1);\n      return {\n        ...prev,\n        [laneId]: cols\n      };\n    });\n    const updatedIssues = issues.map(issue => (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? {\n      ...issue,\n      status: 'backlog'\n    } : issue);\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const toggleSwimlane = id => setOpenSwimlanes(prev => ({\n    ...prev,\n    [id]: !prev[id]\n  }));\n  const byStatus = (collection, status) => collection.filter(i => i.status === status);\n  const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n  const onDrop = async (e, targetStatus, swimlaneId) => {\n    e.preventDefault();\n    try {\n      const issueId = e.dataTransfer.getData('text/plain');\n      const issue = issues.find(i => i.id === issueId);\n      const srcLaneId = issue.epic || issue.projectId;\n      if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n        await moveIssue(issueId, targetStatus);\n        const refreshed = await listIssues(projectId);\n        setIssues(refreshed);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const onDragOver = e => e.preventDefault();\n  const handleCreateClick = laneId => {\n    setCreateLaneId(laneId);\n    setNewTaskText('');\n    setNewTaskType('Task');\n  };\n  const handleCreateSubmit = async lane => {\n    if (!newTaskText.trim()) {\n      alert('Task title is required');\n      return;\n    }\n    const newIssue = {\n      id: Math.random().toString(36).slice(2),\n      epic: lane.id,\n      projectId: lane.id,\n      epicName: lane.title,\n      title: newTaskText,\n      status: 'backlog',\n      assignee: '',\n      type: newTaskType,\n      storyPoints: '',\n      labels: [],\n      dueDate: '',\n      reporter: 'system',\n      priority: 'Medium',\n      startDate: new Date().toISOString().split('T')[0],\n      description: '',\n      subtasks: '',\n      comments: ''\n    };\n    try {\n      await createIssueAPI(newIssue);\n      const refreshed = await listIssues(projectId);\n      setIssues(refreshed);\n      setCreateLaneId(null);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const handleOpenModal = issue => {\n    setSelectedIssue(issue);\n    setEditIssue({\n      ...issue\n    });\n  };\n  const handleUpdateField = (field, value) => {\n    setEditIssue(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleSave = async () => {\n    await updateIssueAPI(editIssue);\n    const refreshed = await listIssues(projectId);\n    setIssues(refreshed);\n    setSelectedIssue(null);\n    setEditIssue(null);\n  };\n  const handleReset = () => {\n    setEditIssue({\n      ...selectedIssue\n    });\n  };\n\n  // Create Epic Modal Handlers\n  const handleCreateEpic = async () => {\n    if (!newEpicName.trim()) {\n      alert('Epic name is required');\n      return;\n    }\n    try {\n      await createEpicAPI(newEpicName);\n      const updatedEpics = await listEpics();\n      setEpics(updatedEpics);\n      setNewEpicName('');\n      setShowCreateEpic(false);\n      const newEpic = updatedEpics[updatedEpics.length - 1];\n      setOpenSwimlanes(prev => ({\n        ...prev,\n        [newEpic.id]: true\n      }));\n      setCustomTitles(prev => ({\n        ...prev,\n        [newEpic.id]: newEpic.name\n      }));\n      setColumnsByLane(prev => ({\n        ...prev,\n        [newEpic.id]: defaultStatuses.slice()\n      }));\n    } catch (error) {\n      console.error('Error creating epic:', error);\n    }\n  };\n\n  // Delete Epic Modal Handler\n  const handleDeleteEpic = async () => {\n    var _epics$find;\n    if (!epicToDelete) {\n      alert('Please select an epic to delete');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete the epic \"${(_epics$find = epics.find(e => e.id === epicToDelete)) === null || _epics$find === void 0 ? void 0 : _epics$find.name}\"? This will also delete all issues in this epic.`)) {\n      return;\n    }\n    try {\n      await deleteEpicAPI(epicToDelete);\n      const [refreshedIssues, refreshedEpics] = await Promise.all([listIssues(projectId), listEpics()]);\n      setIssues(refreshedIssues);\n      setEpics(refreshedEpics);\n      setEpicToDelete('');\n      setShowDeleteEpic(false);\n      setColumnsByLane(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setOpenSwimlanes(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setCustomTitles(prev => {\n        const copy = {\n          ...prev\n        };\n        delete copy[epicToDelete];\n        return copy;\n      });\n    } catch (error) {\n      console.error('Error deleting epic:', error);\n    }\n  };\n\n  // Mobile-specific functions\n  const toggleMobileSwimlane = laneId => {\n    if (activeSwimlane === laneId) {\n      setActiveSwimlane(null);\n    } else {\n      setActiveSwimlane(laneId);\n    }\n  };\n  const swimlanes = getSwimlanes(issues, epics);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-wrap\",\n    children: [isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobile-swimlane-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: activeSwimlane || '',\n        onChange: e => setActiveSwimlane(e.target.value || null),\n        className: \"mobile-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Swimlanes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1265,\n          columnNumber: 13\n        }, this), swimlanes.map(lane => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lane.id,\n          children: customTitles[lane.id] || lane.title\n        }, lane.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1267,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1260,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1259,\n      columnNumber: 9\n    }, this), swimlanes.map(lane => {\n      const isOpen = isMobile ? activeSwimlane === null || activeSwimlane === lane.id : openSwimlanes[lane.id];\n      const statuses = columnsByLane[lane.id] || defaultStatuses;\n\n      // Skip rendering if mobile and this isn't the active swimlane\n      if (isMobile && activeSwimlane && activeSwimlane !== lane.id) {\n        return null;\n      }\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"swimlane\",\n        children: [/*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"swimlane-header\",\n          children: [!isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"swimlane-toggle\",\n            onClick: () => toggleSwimlane(lane.id),\n            children: isOpen ? '▼' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1287,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"swimlane-icon\",\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"swimlane-title-input\",\n            value: customTitles[lane.id] || '',\n            onChange: e => setCustomTitles(prev => ({\n              ...prev,\n              [lane.id]: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1292,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"swimlane-count\",\n            children: [lane.issues.length, \" work items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1297,\n            columnNumber: 15\n          }, this), isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"mobile-swimlane-toggle\",\n            onClick: () => toggleMobileSwimlane(lane.id),\n            children: activeSwimlane === lane.id ? '▲' : '▼'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1299,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1285,\n          columnNumber: 13\n        }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `kanban-row ${isMobile ? 'mobile-view' : ''}`,\n          children: statuses.map((status, idx) => {\n            const issuesForStatus = byStatus(lane.issues, status);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `kanban-column ${isMobile ? 'mobile-column' : ''}`,\n              onDragOver: onDragOver,\n              onDrop: e => onDrop(e, status, lane.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-title\",\n                  children: status.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1319,\n                  columnNumber: 25\n                }, this), !isMobile && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-icons\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"col-icon\",\n                    title: \"Add Column\",\n                    onClick: e => openAddColumnModal(e, lane.id, idx),\n                    children: \"\\uFF0B\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1322,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"col-icon\",\n                    title: \"Edit/Delete Column\",\n                    onClick: e => openEditColumnModal(e, lane.id, idx, status),\n                    children: \"\\u22EE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1323,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1321,\n                  columnNumber: 27\n                }, this), issuesForStatus.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"col-count\",\n                  children: issuesForStatus.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1326,\n                  columnNumber: 56\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-create\",\n                children: status === 'backlog' && (createLaneId === lane.id ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"create-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                    rows: 2,\n                    className: \"create-input\",\n                    placeholder: \"What needs to be done?\",\n                    value: newTaskText,\n                    onChange: e => setNewTaskText(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1332,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"create-actions\",\n                    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                      value: newTaskType,\n                      onChange: e => setNewTaskType(e.target.value),\n                      className: \"create-select\",\n                      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Task\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1335,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Subtask\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1335,\n                        columnNumber: 56\n                      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                        children: \"Bug\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1335,\n                        columnNumber: 80\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1334,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"create-btn\",\n                      onClick: () => handleCreateSubmit(lane),\n                      children: \"\\u2714\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1337,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"create-btn\",\n                      onClick: () => setCreateLaneId(null),\n                      children: \"\\u2716\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1338,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1333,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1331,\n                  columnNumber: 29\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"create-link\",\n                  onClick: () => handleCreateClick(lane.id),\n                  children: \"+ Create\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1341,\n                  columnNumber: 32\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1328,\n                columnNumber: 23\n              }, this), issuesForStatus.map(issue => {\n                const isHovered = hoveredAssigneeId === issue.id;\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-item\",\n                  draggable: true,\n                  onDragStart: e => onDragStart(e, issue.id),\n                  onClick: () => handleOpenModal(issue),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-top\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `card-tag card-tag-${issue.type.toLowerCase()}`,\n                      children: issue.type\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1349,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-id\",\n                      children: issue.id\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1350,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1348,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-title\",\n                    children: issue.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1352,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-meta\",\n                    children: [issue.dueDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-due\",\n                      children: [\"\\uD83D\\uDCC5 \", issue.dueDate]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1354,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: `card-priority ${issue.priority.toLowerCase()}`,\n                      children: [\"\\u2691 \", issue.priority]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1355,\n                      columnNumber: 31\n                    }, this), issue.assignee && /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"card-assignee\",\n                      onMouseEnter: () => setHoveredAssigneeId(issue.id),\n                      onMouseLeave: () => setHoveredAssigneeId(null),\n                      style: {\n                        position: 'relative',\n                        cursor: 'default',\n                        userSelect: 'none'\n                      },\n                      children: [\"\\uD83D\\uDC64\", isHovered && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"assignee-tooltip\",\n                        children: issue.assignee\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1359,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1357,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1353,\n                    columnNumber: 29\n                  }, this)]\n                }, issue.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1347,\n                  columnNumber: 27\n                }, this);\n              })]\n            }, status, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1312,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1308,\n          columnNumber: 15\n        }, this)]\n      }, lane.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1284,\n        columnNumber: 11\n      }, this);\n    }), columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"epic-modal-overlay\",\n      onClick: () => setColumnModal(null),\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"epic-modal\",\n        onClick: e => e.stopPropagation(),\n        style: {\n          position: isMobile ? 'fixed' : 'absolute',\n          top: isMobile ? '50%' : modalPosition.top,\n          left: isMobile ? '50%' : modalPosition.left,\n          transform: isMobile ? 'translate(-50%, -50%)' : 'translateX(-50%)',\n          minWidth: isMobile ? '90vw' : 280,\n          maxWidth: isMobile ? '95vw' : 320,\n          padding: 20,\n          borderRadius: 10,\n          background: 'white',\n          boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n          zIndex: 1100\n        },\n        children: columnModal.type === 'add' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 15,\n              fontWeight: 600,\n              fontSize: 20,\n              color: '#172b4d'\n            },\n            children: \"Add Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1393,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: columnInput,\n            onChange: e => setColumnInput(e.target.value),\n            placeholder: \"Column name\",\n            autoFocus: true,\n            className: \"epic-modal-input\",\n            style: {\n              width: '100%',\n              padding: 12,\n              fontSize: 16,\n              borderRadius: 6,\n              border: '1px solid #dfe1e5',\n              marginBottom: 20,\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 12,\n              flexWrap: isMobile ? 'wrap' : 'nowrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setColumnModal(null),\n              style: btnStyle.cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-create\",\n              onClick: handleAddColumn,\n              style: btnStyle.create,\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1397,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginBottom: 15,\n              fontWeight: 600,\n              fontSize: 20,\n              color: '#172b4d'\n            },\n            children: \"Edit/Delete Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1402,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: columnInput,\n            onChange: e => setColumnInput(e.target.value),\n            placeholder: \"Column name\",\n            autoFocus: true,\n            className: \"epic-modal-input\",\n            style: {\n              width: '100%',\n              padding: 12,\n              fontSize: 16,\n              borderRadius: 6,\n              border: '1px solid #dfe1e5',\n              marginBottom: 20,\n              boxSizing: 'border-box'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1403,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"epic-modal-actions\",\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: 12,\n              flexWrap: isMobile ? 'wrap' : 'nowrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-save\",\n              onClick: handleEditColumn,\n              style: btnStyle.create,\n              children: \"Rename\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1405,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-delete\",\n              onClick: handleDeleteColumn,\n              style: btnStyle.delete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1406,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-cancel\",\n              onClick: () => setColumnModal(null),\n              style: btnStyle.cancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1407,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1404,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1378,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1377,\n      columnNumber: 9\n    }, this), selectedIssue && editIssue && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      onClick: () => setSelectedIssue(null),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal ${isMobile ? 'mobile-modal' : ''}`,\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: editIssue.epicName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close-btn\",\n            onClick: () => setSelectedIssue(null),\n            children: \"\\u2716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1421,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `modal-content ${isMobile ? 'mobile-modal-content' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1424,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editIssue.title,\n              onChange: e => handleUpdateField('title', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1424,\n              columnNumber: 64\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editIssue.description,\n              onChange: e => handleUpdateField('description', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1425,\n              columnNumber: 70\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1425,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Subtasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editIssue.subtasks,\n              onChange: e => handleUpdateField('subtasks', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1426,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editIssue.comments,\n              onChange: e => handleUpdateField('comments', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1427,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1428,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editIssue.status,\n              onChange: e => handleUpdateField('status', e.target.value),\n              children: ((_columnsByLane$editIs = columnsByLane[editIssue.epic]) === null || _columnsByLane$editIs === void 0 ? void 0 : _columnsByLane$editIs.map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: st,\n                children: st\n              }, st, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 61\n              }, this))) || defaultStatuses.map(st => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: st,\n                children: st\n              }, st, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1430,\n                columnNumber: 133\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Assignee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              value: editIssue.assignee,\n              onChange: e => handleUpdateField('assignee', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1433,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Reporter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              disabled: true,\n              value: editIssue.reporter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1434,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Priority\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1435,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: editIssue.priority,\n              onChange: e => handleUpdateField('priority', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Low\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1437,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Medium\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1437,\n                columnNumber: 39\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"High\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1437,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Due Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: editIssue.dueDate,\n              onChange: e => handleUpdateField('dueDate', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1440,\n              columnNumber: 67\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 44\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: editIssue.startDate,\n              onChange: e => handleUpdateField('startDate', e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1441,\n              columnNumber: 69\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1441,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1423,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-actions\",\n          style: {\n            gridColumn: \"span 3\",\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-reset\",\n            onClick: handleReset,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-save\",\n            onClick: handleSave,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-delete-btn\",\n            onClick: async () => {\n              if (window.confirm('Delete this issue?')) {\n                await deleteIssueAPI(selectedIssue.id);\n                const refreshed = await listIssues(projectId);\n                setIssues(refreshed);\n                setSelectedIssue(null);\n              }\n            },\n            children: \"\\uD83D\\uDDD1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1418,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1417,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        /* Base styles */\n        body {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          background-color: #f5f6f8;\n          margin: 0;\n          padding: 16px;\n        }\n        .board-wrap {\n          max-width: 100%;\n          overflow-x: auto;\n        }\n\n        /* Desktop styles */\n        @media (min-width: 768px) {\n          .swimlane {\n            background: white;\n            border-radius: 8px;\n            margin-bottom: 16px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n            overflow: hidden;\n          }\n          \n          .kanban-row {\n            display: flex;\n            padding: 16px;\n            gap: 12px;\n            overflow-x: auto;\n          }\n          \n          .kanban-column {\n            flex: 0 0 260px;\n            background: #f5f6f8;\n            border-radius: 6px;\n            padding: 12px;\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n            border: 1px solid #dfe5e5;\n            user-select: none;\n            min-height: 400px;\n          }\n          \n          .modal {\n            background: white;\n            border-radius: 8px;\n            padding: 24px;\n            width: 700px;\n            max-height: 80vh;\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: 16px;\n            overflow-y: auto;\n            position: relative;\n          }\n        }\n\n        /* Mobile styles */\n        @media (max-width: 767px) {\n          body {\n            padding: 8px;\n          }\n          \n          .mobile-swimlane-selector {\n            margin-bottom: 16px;\n            position: sticky;\n            top: 0;\n            background: white;\n            padding: 12px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            z-index: 100;\n          }\n          \n          .mobile-select {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #dfe5e5;\n            border-radius: 6px;\n            font-size: 16px;\n            background: white;\n          }\n          \n          .swimlane {\n            background: white;\n            border-radius: 8px;\n            margin-bottom: 12px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n            overflow: hidden;\n          }\n          \n          .swimlane-header {\n            display: flex;\n            align-items: center;\n            padding: 12px;\n            background: #fafbfc;\n            border-bottom: 1px solid #dfe5e5;\n            font-weight: 600;\n            font-size: 14px;\n            color: #172b4d;\n            position: relative;\n          }\n          \n          .mobile-swimlane-toggle {\n            background: none;\n            border: none;\n            font-size: 16px;\n            color: #5e6c84;\n            margin-left: auto;\n            padding: 4px 8px;\n          }\n          \n          .kanban-row.mobile-view {\n            display: block;\n            padding: 8px;\n            overflow-x: auto;\n            white-space: nowrap;\n          }\n          \n          .kanban-column.mobile-column {\n            display: inline-block;\n            vertical-align: top;\n            width: 280px;\n            margin-right: 8px;\n            background: #f5f6f8;\n            border-radius: 6px;\n            padding: 8px;\n            border: 1px solid #dfe5e5;\n            user-select: none;\n            min-height: 300px;\n          }\n          \n          .col-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 8px;\n            gap: 6px;\n          }\n          \n          .col-title {\n            font-weight: 600;\n            font-size: 11px;\n            color: #5e6c84;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            flex-grow: 1;\n          }\n          \n          .card-item {\n            background: white;\n            border-radius: 6px;\n            padding: 10px;\n            box-shadow: 0 0 2px rgba(0,0,0,0.1);\n            cursor: pointer;\n            user-select: none;\n            display: flex;\n            flex-direction: column;\n            gap: 6px;\n            border: 1px solid #dfe5e5;\n            margin-bottom: 8px;\n          }\n          \n          .card-title {\n            font-weight: 600;\n            font-size: 13px;\n            color: #2b3a59;\n            line-height: 1.3;\n          }\n          \n          .card-meta {\n            display: flex;\n            gap: 6px;\n            font-size: 10px;\n            color: #6b7c93;\n            align-items: center;\n            flex-wrap: wrap;\n          }\n          \n          .modal.mobile-modal {\n            width: 95vw;\n            max-height: 90vh;\n            padding: 16px;\n            display: flex;\n            flex-direction: column;\n          }\n          \n          .modal-content.mobile-modal-content {\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n            overflow-y: auto;\n          }\n          \n          .modal-field {\n            display: flex;\n            flex-direction: column;\n            gap: 4px;\n          }\n          \n          .modal-field input, .modal-field textarea, .modal-field select {\n            padding: 10px;\n            font-size: 16px; /* Better for mobile touch */\n          }\n          \n          .modal-actions {\n            display: flex;\n            gap: 8px;\n            justify-content: space-between;\n            margin-top: 16px;\n          }\n          \n          .modal-actions button {\n            flex: 1;\n            padding: 12px;\n            font-size: 16px;\n          }\n        }\n\n        /* Common styles (applied to both desktop and mobile) */\n        .swimlane-header {\n          display: flex;\n          align-items: center;\n          padding: 12px 16px;\n          background: #fafbfc;\n          border-bottom: 1px solid #dfe5e5;\n          font-weight: 600;\n          font-size: 14px;\n          color: #172b4d;\n        }\n        \n        .swimlane-toggle, .swimlane-icon {\n          color: #5e6c84;\n          margin-right: 8px;\n          cursor: pointer;\n        }\n        \n        .swimlane-toggle {\n          border: none;\n          background: transparent;\n          font-size: 14px;\n        }\n        \n        .swimlane-icon {\n          font-size: 18px;\n        }\n        \n        .swimlane-title-input {\n          border: 1px solid #dfe5e5;\n          border-radius: 4px;\n          padding: 4px 8px;\n          font-size: 14px;\n          font-weight: 600;\n          background: white;\n          margin-right: 8px;\n          min-width: 150px;\n          color: #172b4d;\n        }\n        \n        .swimlane-title-input:focus {\n          outline: none;\n          border-color: #1976d2;\n        }\n        \n        .swimlane-count {\n          color: #5e6c84;\n          font-size: 12px;\n          font-weight: normal;\n        }\n        \n        .col-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 4px;\n          gap: 6px;\n        }\n        \n        .col-title {\n          font-weight: 600;\n          font-size: 12px;\n          color: #5e6c84;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          flex-grow: 1;\n        }\n        \n        .col-count {\n          background: #dfe5e5;\n          color: #5e6c84;\n          border-radius: 12px;\n          padding: 2px 8px;\n          font-size: 11px;\n          font-weight: 600;\n          min-width: 20px;\n          text-align: center;\n        }\n        \n        .col-icons {\n          display: flex;\n          gap: 6px;\n        }\n        \n        .col-icon {\n          cursor: pointer;\n          color: #5e6c84;\n          font-size: 18px;\n          background: none;\n          border: none;\n          padding: 0;\n        }\n        \n        .create-card {\n          background: white;\n          padding: 10px;\n          border-radius: 6px;\n          box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .card-item {\n          background: white;\n          border-radius: 8px;\n          padding: 12px;\n          box-shadow: 0 0 2px rgba(0,0,0,0.1);\n          cursor: pointer;\n          user-select: none;\n          display: flex;\n          flex-direction: column;\n          gap: 6px;\n          border: 1px solid #dfe5e5;\n          transition: box-shadow 0.2s ease, border-color 0.2s ease;\n        }\n        \n        .card-item:hover {\n          box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n          border-color: #a2adba;\n        }\n        \n        .modal-overlay {\n          position: fixed;\n          top: 0; left: 0; right: 0; bottom: 0;\n          background: rgba(0,0,0,0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1000;\n        }\n        \n        /* Button styles */\n        button {\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n        \n        button:hover {\n          opacity: 0.9;\n        }\n\n        /* Touch improvements for mobile */\n        @media (max-width: 767px) {\n          button, .card-item, .col-icon {\n            min-height: 44px;\n            min-width: 44px;\n          }\n          \n          .card-item {\n            touch-action: manipulation;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1460,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1256,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"HkHO2Ok3Qw6g/5KjzZ0SDjcIzug=\", false, function () {\n  return [useParams];\n});\n_c = KanbanBoard;\nconst btnStyle = {\n  cancel: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#5e6c84',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  create: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#1976d2',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  delete: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#d32f2f',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","mockIssues","id","epic","epicName","status","type","title","assignee","storyPoints","labels","dueDate","reporter","priority","startDate","description","subtasks","comments","defaultStatuses","mockEpics","name","simulateApiDelay","Promise","resolve","setTimeout","listIssues","projectId","filter","i","listEpics","createEpicAPI","newEpic","length","push","deleteEpicAPI","epicId","epicIndex","findIndex","splice","issueIndices","forEach","issue","index","sort","a","b","moveIssue","issueId","find","Error","createIssueAPI","deleteIssueAPI","idx","updateIssueAPI","updatedIssue","getSwimlanes","issues","epics","map","epicIssues","KanbanBoard","_s","_columnsByLane$editIs","setIssues","setEpics","openSwimlanes","setOpenSwimlanes","customTitles","setCustomTitles","createLaneId","setCreateLaneId","newTaskText","setNewTaskText","newTaskType","setNewTaskType","selectedIssue","setSelectedIssue","editIssue","setEditIssue","showCreateEpic","setShowCreateEpic","showDeleteEpic","setShowDeleteEpic","newEpicName","setNewEpicName","epicToDelete","setEpicToDelete","columnsByLane","setColumnsByLane","columnModal","setColumnModal","columnInput","setColumnInput","hoveredAssigneeId","setHoveredAssigneeId","modalPosition","setModalPosition","top","left","isMobile","setIsMobile","activeSwimlane","setActiveSwimlane","checkScreenSize","window","innerWidth","addEventListener","removeEventListener","fetchData","issuesData","epicsData","all","lanes","initialOpen","initialTitles","initialCols","lane","slice","err","console","error","openAddColumnModal","e","laneId","colIndex","rect","currentTarget","getBoundingClientRect","bottom","scrollY","scrollX","openEditColumnModal","handleAddColumn","trim","alert","prev","cols","includes","toLowerCase","handleEditColumn","oldCol","updatedIssues","handleDeleteColumn","removedCol","toggleSwimlane","byStatus","collection","onDragStart","dataTransfer","setData","onDrop","targetStatus","swimlaneId","preventDefault","getData","srcLaneId","refreshed","onDragOver","handleCreateClick","handleCreateSubmit","newIssue","Math","random","toString","Date","toISOString","split","handleOpenModal","handleUpdateField","field","value","handleSave","handleReset","handleCreateEpic","updatedEpics","handleDeleteEpic","_epics$find","confirm","refreshedIssues","refreshedEpics","copy","toggleMobileSwimlane","swimlanes","className","children","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","statuses","onClick","issuesForStatus","toUpperCase","rows","placeholder","isHovered","draggable","onMouseEnter","onMouseLeave","style","position","cursor","userSelect","right","zIndex","stopPropagation","transform","minWidth","maxWidth","padding","borderRadius","background","boxShadow","marginBottom","fontWeight","fontSize","color","autoFocus","width","border","boxSizing","display","justifyContent","gap","flexWrap","btnStyle","cancel","create","delete","st","disabled","gridColumn","alignItems","_c","backgroundColor","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/boards/KanbanBoard.js"],"sourcesContent":["\n// //////////////////////////////////////////////////////////////////\n// //for updated the ticket\n\n// import React, { useEffect, useState } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// const mockIssues = [\n//   { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'John Doe', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n//   { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'Jane Smith', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n// ];\n\n// const defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\n// const mockEpics = [{ id: 'p1', name: 'Frontend' }, { id: 'p2', name: 'Middleware' }];\n\n// const simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\n// const listIssues = async (projectId) => {\n//   await simulateApiDelay();\n//   return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n// };\n// const listEpics = async () => { await simulateApiDelay(); return mockEpics; };\n// const createEpicAPI = async (epicName) => {\n//   await simulateApiDelay();\n//   const newEpic = { id: 'p' + (mockEpics.length + 1), name: epicName };\n//   mockEpics.push(newEpic);\n//   return newEpic;\n// };\n// const deleteEpicAPI = async (epicId) => {\n//   await simulateApiDelay();\n//   const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n//   if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n//   const issueIndices = [];\n//   mockIssues.forEach((issue, index) => { if (issue.epic === epicId) issueIndices.push(index); });\n//   issueIndices.sort((a, b) => b - a).forEach(index => { mockIssues.splice(index, 1); });\n// };\n// const moveIssue = async (issueId, status) => {\n//   await simulateApiDelay();\n//   const issue = mockIssues.find(i => i.id === issueId);\n//   if (!issue) throw new Error('Issue not found');\n//   issue.status = status;\n// };\n// const createIssueAPI = async (issue) => { await simulateApiDelay(); mockIssues.push(issue); };\n// const deleteIssueAPI = async (issueId) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === issueId); if (idx > -1) mockIssues.splice(idx, 1); };\n// const updateIssueAPI = async (updatedIssue) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === updatedIssue.id); if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue }; };\n\n// const getSwimlanes = (issues, epics) =>\n//   epics.map(epic => {\n//     const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n//     return { id: epic.id, title: epic.name, issues: epicIssues };\n//   });\n\n// export default function KanbanBoard() {\n//   const { projectId } = useParams();\n//   const [issues, setIssues] = useState([]);\n//   const [epics, setEpics] = useState([]);\n//   const [openSwimlanes, setOpenSwimlanes] = useState({});\n//   const [customTitles, setCustomTitles] = useState({});\n//   const [createLaneId, setCreateLaneId] = useState(null);\n//   const [newTaskText, setNewTaskText] = useState('');\n//   const [newTaskType, setNewTaskType] = useState('Task');\n//   const [selectedIssue, setSelectedIssue] = useState(null);\n//   const [editIssue, setEditIssue] = useState(null);\n//   const [showCreateEpic, setShowCreateEpic] = useState(false);\n//   const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n//   const [newEpicName, setNewEpicName] = useState('');\n//   const [epicToDelete, setEpicToDelete] = useState('');\n//   const [columnsByLane, setColumnsByLane] = useState({});\n//   const [columnModal, setColumnModal] = useState(null);\n//   const [columnInput, setColumnInput] = useState('');\n//   const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n//   const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n//         setIssues(issuesData);\n//         setEpics(epicsData);\n//         const lanes = getSwimlanes(issuesData, epicsData);\n//         const initialOpen = {}, initialTitles = {}, initialCols = {};\n//         lanes.forEach(lane => {\n//           initialOpen[lane.id] = true;\n//           initialTitles[lane.id] = lane.title;\n//           initialCols[lane.id] = defaultStatuses.slice();\n//         });\n//         setOpenSwimlanes(initialOpen);\n//         setCustomTitles(initialTitles);\n//         setColumnsByLane(initialCols);\n//       } catch (err) { console.error(err); }\n//     };\n//     fetchData();\n//   }, [projectId]);\n\n//   const openAddColumnModal = (e, laneId, colIndex) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n//     setColumnModal({ laneId, colIndex, type: 'add' });\n//     setColumnInput('');\n//   };\n//   const openEditColumnModal = (e, laneId, colIndex, status) => {\n//     const rect = e.currentTarget.getBoundingClientRect();\n//     setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n//     setColumnModal({ laneId, colIndex, type: 'menu' });\n//     setColumnInput(status);\n//   };\n//   const handleAddColumn = () => {\n//     const name = columnInput.trim();\n//     if (!name) return alert('Column name is required');\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[columnModal.laneId]];\n//       if (cols.includes(name.toLowerCase())) alert('Column name already exists');\n//       else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n//       return { ...prev, [columnModal.laneId]: cols };\n//     });\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const handleEditColumn = () => {\n//     const name = columnInput.trim();\n//     if (!name) return alert('Column name is required');\n//     const { laneId, colIndex } = columnModal;\n//     const oldCol = columnsByLane[laneId][colIndex];\n//     if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n//       alert('Column name already exists');\n//       return;\n//     }\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[laneId]];\n//       cols[colIndex] = name.toLowerCase();\n//       return { ...prev, [laneId]: cols };\n//     });\n//     const updatedIssues = issues.map(issue =>\n//       (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? { ...issue, status: name.toLowerCase() } : issue\n//     );\n//     setIssues(updatedIssues);\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const handleDeleteColumn = () => {\n//     const { laneId, colIndex } = columnModal;\n//     const removedCol = columnsByLane[laneId][colIndex];\n//     setColumnsByLane(prev => {\n//       const cols = [...prev[laneId]];\n//       cols.splice(colIndex, 1);\n//       return { ...prev, [laneId]: cols };\n//     });\n//     const updatedIssues = issues.map(issue =>\n//       (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? { ...issue, status: 'backlog' } : issue\n//     );\n//     setIssues(updatedIssues);\n//     setColumnModal(null);\n//     setColumnInput('');\n//   };\n//   const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n//   const byStatus = (collection, status) => collection.filter(i => i.status === status);\n\n//   const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n//   const onDrop = async (e, targetStatus, swimlaneId) => {\n//     e.preventDefault();\n//     try {\n//       const issueId = e.dataTransfer.getData('text/plain');\n//       const issue = issues.find(i => i.id === issueId);\n//       const srcLaneId = issue.epic || issue.projectId;\n//       if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n//         await moveIssue(issueId, targetStatus);\n//         const refreshed = await listIssues(projectId);\n//         setIssues(refreshed);\n//       }\n//     } catch (err) { console.error(err); }\n//   };\n//   const onDragOver = e => e.preventDefault();\n\n//   const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n//   const handleCreateSubmit = async lane => {\n//     if (!newTaskText.trim()) { alert('Task title is required'); return; }\n//     const newIssue = {\n//       id: Math.random().toString(36).slice(2),\n//       epic: lane.id,\n//       projectId: lane.id,\n//       epicName: lane.title,\n//       title: newTaskText,\n//       status: 'backlog',\n//       assignee: '',\n//       type: newTaskType,\n//       storyPoints: '',\n//       labels: [],\n//       dueDate: '',\n//       reporter: 'system',\n//       priority: 'Medium',\n//       startDate: new Date().toISOString().split('T')[0],\n//       description: '',\n//       subtasks: '',\n//       comments: ''\n//     };\n//     try {\n//       await createIssueAPI(newIssue);\n//       const refreshed = await listIssues(projectId);\n//       setIssues(refreshed);\n//       setCreateLaneId(null);\n//     } catch (err) { console.error(err); }\n//   };\n\n//   const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n//   const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n//   const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n//   const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n//   // Create Epic Modal Handlers\n//   const handleCreateEpic = async () => {\n//     if (!newEpicName.trim()) {\n//       alert('Epic name is required');\n//       return;\n//     }\n//     try {\n//       await createEpicAPI(newEpicName);\n//       const updatedEpics = await listEpics();\n//       setEpics(updatedEpics);\n//       setNewEpicName('');\n//       setShowCreateEpic(false);\n//       const newEpic = updatedEpics[updatedEpics.length - 1];\n//       setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n//       setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n//       setColumnsByLane(prev => ({ ...prev, [newEpic.id]: defaultStatuses.slice() }));\n//     } catch (error) {\n//       console.error('Error creating epic:', error);\n//     }\n//   };\n\n//   // Delete Epic Modal Handler\n//   const handleDeleteEpic = async () => {\n//     if (!epicToDelete) {\n//       alert('Please select an epic to delete');\n//       return;\n//     }\n//     if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n//       return;\n//     }\n//     try {\n//       await deleteEpicAPI(epicToDelete);\n//       const [refreshedIssues, refreshedEpics] = await Promise.all([\n//         listIssues(projectId),\n//         listEpics()\n//       ]);\n//       setIssues(refreshedIssues);\n//       setEpics(refreshedEpics);\n//       setEpicToDelete('');\n//       setShowDeleteEpic(false);\n//       setColumnsByLane(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//       setOpenSwimlanes(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//       setCustomTitles(prev => {\n//         const copy = { ...prev };\n//         delete copy[epicToDelete];\n//         return copy;\n//       });\n//     } catch (error) {\n//       console.error('Error deleting epic:', error);\n//     }\n//   };\n\n//   const swimlanes = getSwimlanes(issues, epics);\n\n//   return (\n//     <div className=\"board-wrap\">\n//       {/* Epic management buttons */}\n//       <div className=\"epic-management-section\">\n//         <div className=\"epic-buttons-container\">\n//           {/* <button className=\"create-epic-btn\" onClick={() => { setShowCreateEpic(true); setShowDeleteEpic(false); }}>+ Create Epic</button>\n//           <button className=\"delete-epic-btn\" onClick={() => { setShowDeleteEpic(true); setShowCreateEpic(false); }}>🗑 Delete Epic</button> */}\n//         </div>\n        \n//       </div>\n\n//       {/* Swimlanes and columns */}\n//       {swimlanes.map(lane => {\n//         const isOpen = openSwimlanes[lane.id];\n//         const statuses = columnsByLane[lane.id] || defaultStatuses;\n//         return (\n//           <section className=\"swimlane\" key={lane.id}>\n//             <header className=\"swimlane-header\">\n//               <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>{isOpen ? '▼' : '▶'}</button>\n//               <span className=\"swimlane-icon\">⚡</span>\n//               <input className=\"swimlane-title-input\" value={customTitles[lane.id] || ''} onChange={e => setCustomTitles(prev => ({ ...prev, [lane.id]: e.target.value }))} />\n//               <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n//             </header>\n//             {isOpen && (\n//               <div className=\"kanban-row\">\n//                 {statuses.map((status, idx) => {\n//                   const issuesForStatus = byStatus(lane.issues, status);\n//                   return (\n//                     <div className=\"kanban-column\" key={status} onDragOver={onDragOver} onDrop={e => onDrop(e, status, lane.id)}>\n//                       <div className=\"col-header\">\n//                         <span className=\"col-title\">{status.toUpperCase()}</span>\n//                         <span className=\"col-icons\">\n//                           <button className=\"col-icon\" title=\"Add Column\" onClick={e => openAddColumnModal(e, lane.id, idx)}>＋</button>\n//                           <button className=\"col-icon\" title=\"Edit/Delete Column\" onClick={e => openEditColumnModal(e, lane.id, idx, status)}>⋮</button>\n//                         </span>\n//                         {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n//                       </div>\n//                       <div className=\"col-create\">\n//                         {status === 'backlog' && (\n//                           createLaneId === lane.id ? (\n//                             <div className=\"create-card\">\n//                               <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n//                               <div className=\"create-actions\">\n//                                 <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n//                                   <option>Task</option><option>Subtask</option><option>Bug</option>\n//                                 </select>\n//                                 <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>✔</button>\n//                                 <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>✖</button>\n//                               </div>\n//                             </div>\n//                           ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n//                         )}\n//                       </div>\n//                       {issuesForStatus.map(issue => {\n//                         const isHovered = hoveredAssigneeId === issue.id;\n//                         return (\n//                           <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n//                             <div className=\"card-top\">\n//                               <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n//                               <span className=\"card-id\">{issue.id}</span>\n//                             </div>\n//                             <div className=\"card-title\">{issue.title}</div>\n//                             <div className=\"card-meta\">\n//                               {issue.dueDate && <span className=\"card-due\">📅 {issue.dueDate}</span>}\n//                               <span className={`card-priority ${issue.priority.toLowerCase()}`}>⚑ {issue.priority}</span>\n//                               {issue.assignee && (\n//                                 <span className=\"card-assignee\" onMouseEnter={() => setHoveredAssigneeId(issue.id)} onMouseLeave={() => setHoveredAssigneeId(null)} style={{ position: 'relative', cursor: 'default', userSelect: 'none' }}>\n//                                   👤\n//                                   {isHovered && <div className=\"assignee-tooltip\">{issue.assignee}</div>}\n//                                 </span>\n//                               )}\n//                             </div>\n//                           </div>\n//                         );\n//                       })}\n//                     </div>\n//                   );\n//                 })}\n//               </div>\n//             )}\n//           </section>\n//         );\n//       })}\n\n//       {/* Column Add/Edit modal */}\n//       {columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && (\n//         <div className=\"epic-modal-overlay\" onClick={() => setColumnModal(null)} style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, zIndex: 1000 }}>\n//           <div className=\"epic-modal\" onClick={e => e.stopPropagation()} style={{\n//             position: 'absolute',\n//             top: modalPosition.top,\n//             left: modalPosition.left,\n//             transform: 'translateX(-50%)',\n//             minWidth: 280,\n//             maxWidth: 320,\n//             padding: 20,\n//             borderRadius: 10,\n//             background: 'white',\n//             boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n//             zIndex: 1100\n//           }}>\n//             {columnModal.type === 'add' ? (\n//               <>\n//                 <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Add Column</h3>\n//                 <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n//                 <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n//                   <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n//                   <button className=\"btn-create\" onClick={handleAddColumn} style={btnStyle.create}>Add</button>\n//                 </div>\n//               </>\n//             ) : (\n//               <>\n//                 <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Edit/Delete Column</h3>\n//                 <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n//                 <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12 }}>\n//                   <button className=\"btn-save\" onClick={handleEditColumn} style={btnStyle.create}>Rename</button>\n//                   <button className=\"btn-delete\" onClick={handleDeleteColumn} style={btnStyle.delete}>Delete</button>\n//                   <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n//                 </div>\n//               </>\n//             )}\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Issue modal */}\n//       {selectedIssue && editIssue && (\n//         <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <div className=\"modal-header\">\n//               <h2>{editIssue.epicName}</h2>\n//               <button className=\"modal-close-btn\" onClick={() => setSelectedIssue(null)}>✖</button>\n//             </div>\n//             <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Status</label>\n//               <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n//                 {columnsByLane[editIssue.epic]?.map(st => <option key={st} value={st}>{st}</option>) || defaultStatuses.map(st => <option key={st} value={st}>{st}</option>)}\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n//             <div className=\"modal-field\"><label>Priority</label>\n//               <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n//                 <option>Low</option><option>Medium</option><option>High</option>\n//               </select>\n//             </div>\n//             <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n//             <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n//             <div className=\"modal-actions\" style={{ gridColumn: \"span 3\", alignItems: 'center' }}>\n//               <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n//               <button className=\"btn-save\" onClick={handleSave}>Save</button>\n//               <button className=\"modal-delete-btn\" onClick={async () => {\n//                 if (window.confirm('Delete this issue?')) {\n//                   await deleteIssueAPI(selectedIssue.id);\n//                   const refreshed = await listIssues(projectId);\n//                   setIssues(refreshed);\n//                   setSelectedIssue(null);\n//                 }\n//               }}>🗑</button>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Inline CSS styles */}\n//       <style>{`\n//         /* Include the full CSS from the previous answer - Kanban board styling, tooltip, modals, buttons */\n//         body {\n//           font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//           background-color: #f5f6f8;\n//           margin: 0;\n//           padding: 16px;\n//         }\n//         .board-wrap {\n//           max-width: 100%;\n//           overflow-x: auto;\n//         }\n// body {\n//   font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n//   background-color: #f5f6f8;\n//   margin: 0;\n//   padding: 16px;\n// }\n// .board-wrap {\n//   max-width: 100%;\n//   overflow-x: auto;\n// }\n// .swimlane {\n//   background: white;\n//   border-radius: 8px;\n//   margin-bottom: 16px;\n//   box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n//   overflow: hidden;\n// }\n// .swimlane-header {\n//   display: flex;\n//   align-items: center;\n//   padding: 12px 16px;\n//   background: #fafbfc;\n//   border-bottom: 1px solid #dfe5e5;\n//   font-weight: 600;\n//   font-size: 14px;\n//   color: #172b4d;\n// }\n// .swimlane-toggle, .swimlane-icon {\n//   color: #5e6c84;\n//   margin-right: 8px;\n//   cursor: pointer;\n// }\n// .swimlane-toggle {\n//   border: none;\n//   background: transparent;\n//   font-size: 14px;\n// }\n// .swimlane-icon {\n//   font-size: 18px;\n// }\n// .swimlane-title-input {\n//   border: 1px solid #dfe5e5;\n//   border-radius: 4px;\n//   padding: 4px 8px;\n//   font-size: 14px;\n//   font-weight: 600;\n//   background: white;\n//   margin-right: 8px;\n//   min-width: 150px;\n//   color: #172b4d;\n// }\n// .swimlane-title-input:focus {\n//   outline: none;\n//   border-color: #1976d2;\n// }\n// .swimlane-title-input::placeholder {\n//   color: #a2adba;\n// }\n// .swimlane-title-input:hover {\n//   border-color: #a2adba;\n// }\n// .swimlane-title-input:disabled {\n//   background: #f5f6f8;\n//   color: #a2adba;\n// }\n// .swimlane-count {\n//   color: #5e6c84;\n//   font-size: 12px;\n//   font-weight: normal;\n//   user-select: none;\n// }\n// .kanban-row {\n//   display: flex;\n//   padding: 16px;\n//   gap: 12px;\n//   overflow-x: auto;\n// }\n// .kanban-column {\n//   flex: 0 0 260px;\n//   background: #f5f6f8;\n//   border-radius: 6px;\n//   padding: 12px;\n//   display: flex;\n//   flex-direction: column;\n//   gap: 12px;\n//   border: 1px solid #dfe5e5;\n//   user-select: none;\n// }\n// .col-header {\n//   display: flex;\n//   align-items: center;\n//   margin-bottom: 4px;\n//   gap: 6px;\n// }\n// .col-title {\n//   font-weight: 600;\n//   font-size: 12px;\n//   color: #5e6c84;\n//   text-transform: uppercase;\n//   letter-spacing: 0.5px;\n//   flex-grow: 1;\n//   user-select: none;\n// }\n// .col-title:empty {\n//   height: 20px;\n// }\n// .col-count {\n//   background: #dfe5e5;\n//   color: #5e6c84;\n//   border-radius: 12px;\n//   padding: 2px 8px;\n//   font-size: 11px;\n//   font-weight: 600;\n//   user-select: none;\n//   min-width: 20px;\n//   text-align: center;\n// }\n// .col-icons {\n//   display: flex;\n//   gap: 6px;\n// }\n// .col-icon {\n//   cursor: pointer;\n//   color: #5e6c84;\n//   font-size: 18px;\n//   background: none;\n//   border: none;\n//   padding: 0;\n//   user-select: none;\n// }\n// .col-icon:hover {\n//   color: #1976d2;\n// }\n// .create-card {\n//   background: white;\n//   padding: 10px;\n//   border-radius: 6px;\n//   box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n//   display: flex;\n//   flex-direction: column;\n//   gap: 10px;\n// }\n// .create-card textarea {\n//   resize: vertical;\n//   min-height: 50px;\n//   font-size: 14px;\n//   padding: 8px;\n//   border-radius: 5px;\n//   border: 1px solid #dfe5e5;\n//   font-family: inherit;\n// }\n// .create-card textarea:focus {\n//   outline: none;\n//   border-color: #1976d2;\n// }\n// .create-card .create-actions {\n//   display: flex;\n//   align-items: center;\n//   gap: 12px;\n// }\n// .create-card .create-actions select {\n//   flex-grow: 1;\n//   padding: 8px;\n//   border: 1px solid #dfe5e5;\n//   border-radius: 5px;\n//   font-size: 14px;\n// }\n// .create-card button {\n//   padding: 8px 12px;\n//   font-size: 14px;\n//   cursor: pointer;\n//   border-radius: 5px;\n//   border: 1px solid #dfe5e5;\n//   background: #f5f6f8;\n//   user-select: none;\n//   transition: background-color 0.2s;\n// }\n// .create-card button:hover {\n//   background: #e1e7f0;\n// }\n// .card-item {\n//   background: white;\n//   border-radius: 8px;\n//   padding: 12px;\n//   box-shadow: 0 0 2px rgba(0,0,0,0.1);\n//   cursor: pointer;\n//   user-select: none;\n//   display: flex;\n//   flex-direction: column;\n//   gap: 6px;\n//   border: 1px solid #dfe5e5;\n//   transition: box-shadow 0.2s ease, border-color 0.2s ease;\n// }\n// .card-item:hover {\n//   box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n//   border-color: #a2adba;\n// }\n// .card-item .card-top {\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   font-size: 12px;\n//   font-weight: 600;\n//   color: #5e6c84;\n//   gap: 10px;\n// }\n// .card-item .card-top .card-id {\n//   font-family: monospace;\n//   color: #a2adba;\n//   user-select: text;\n// }\n// .card-item .card-tags .tag {\n//   border-radius: 6px;\n//   padding: 3px 7px;\n//   font-size: 11px;\n//   font-weight: 600;\n//   text-transform: uppercase;\n//   white-space: nowrap;\n//   user-select: none;\n//   margin-right: 6px;\n// }\n// .tag-task {\n//   background: #e1efff;\n//   color: #1976d2;\n// }\n// .tag-bug {\n//   background: #ffebec;\n//   color: #d62127;\n// }\n// .tag-subtask {\n//   background: #f5e6ff;\n//   color: #772da0;\n// }\n// .card-item .card-title {\n//   font-weight: 600;\n//   font-size: 14px;\n//   color: #2b3a59;\n// }\n// .card-item .card-meta {\n//   display: flex;\n//   gap: 10px;\n//   font-size: 12px;\n//   color: #6b7c93;\n//   align-items: center;\n//   user-select: none;\n// }\n// .card-item .card-meta span {\n//   background: #f5f7fa;\n//   color: #6b7c93;\n//   padding: 3px 8px;\n//   border-radius: 12px;\n// }\n// .card-item .card-meta .card-priority.low {\n//   background: #d4edda;\n//   color: #155724;\n// }\n// .card-item .card-meta .card-priority.medium {\n//   background: #fff3cd;\n//   color: #856404;\n// }\n// .card-item .card-meta .card-priority.high {\n//   background: #f8d7da;\n//   color: #721c24;\n// }\n// .card-item .card-meta .card-assignee {\n//   position: relative;\n//   cursor: default;\n//   padding-left: 18px;\n// }\n// .card-item .card-meta .card-assignee:hover .tooltip {\n//   display: block;\n// }\n// .card-item .card-meta .tooltip {\n//   position: absolute;\n//   top: -30px;\n//   left: 50%;\n//   transform: translateX(-50%);\n//   background: #222;\n//   color: white;\n//   border-radius: 4px;\n//   padding: 4px 8px;\n//   font-size: 11px;\n//   white-space: nowrap;\n//   z-index: 10;\n//   display: none;\n//   user-select: none;\n// }\n// .modal-overlay {\n//   position: fixed;\n//   top: 0; left: 0; right: 0; bottom: 0;\n//   background: rgba(0,0,0,0.5);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   z-index: 1000;\n// }\n// .modal {\n//   background: white;\n//   border-radius: 8px;\n//   padding: 24px;\n//   width: 700px;\n//   max-height: 80vh;\n//   display: grid;\n//   grid-template-columns: 1fr 1fr 1fr;\n//   gap: 16px;\n//   overflow-y: auto;\n//   position: relative;\n// }\n// .modal-header {\n//   grid-column: 1 / -1;\n//   display: flex;\n//   justify-content: space-between;\n//   align-items: center;\n//   font-weight: 700;\n//   font-size: 20px;\n//   color: #2b3a59;\n// }\n// .modal-header button {\n//   background: none;\n//   border: none;\n//   font-size: 22px;\n//   cursor: pointer;\n//   color: #a2adba;\n// }\n// .modal-header button:hover {\n//   color: #485fc7;\n// }\n// .modal-field {\n//   display: flex;\n//   flex-direction: column;\n//   gap: 6px;\n// }\n// .modal-field label {\n//   font-size: 12px;\n//   font-weight: 600;\n//   color: #6b7c93;\n//   user-select: none;\n// }\n// .modal-field input, .modal-field textarea, .modal-field select {\n//   padding: 8px 10px;\n//   border-radius: 6px;\n//   border: 1px solid #dfe5e5;\n//   font-size: 14px;\n//   color: #2b3a59;\n//   font-family: inherit;\n// }\n// .modal-field input:focus, .modal-field textarea:focus, .modal-field select:focus {\n//   outline: none;\n//   border-color: #485fc7;\n//   background: #f8fcff;\n// }\n// .modal-actions {\n//   grid-column: 1 / -1;\n//   display: flex;\n//   justify-content: flex-end;\n//   gap: 12px;\n//   align-items: center;\n//   margin-top: 12px;\n// }\n// button.btn-reset {\n//   background: #5e6c84;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-reset:hover {\n//   background: #485fc7;\n// }\n// button.btn-save {\n//   background: #485fc7;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-save:hover {\n//   background: #374cac;\n// }\n// button.btn-delete {\n//   background: #d94343;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 8px 16px;\n//   border-radius: 6px;\n//   cursor: pointer;\n// }\n// button.btn-delete:hover {\n//   background: #b83232;\n// }\n// input[disabled] {\n//   background: #efeff1;\n//   cursor: not-allowed;\n//   color: #b3b3b3;\n// }\n// .epic-modal-overlay {\n//   position: fixed;\n//   top: 0; left: 0; right: 0; bottom: 0;\n//   background: rgba(0,0,0,0.5);\n//   display: flex;\n//   align-items: center;\n//   justify-content: center;\n//   z-index: 1000;\n// }\n// .epic-modal {\n//   background: white;\n//   border-radius: 8px;\n//   width: 350px;\n//   padding: 20px;\n//   box-shadow: 0 0 10px rgba(0,0,0,0.2);\n//   position: relative;\n// }\n// .epic-modal-content h3 {\n//   margin: 0 0 20px 0;\n//   font-weight: 700;\n//   font-size: 20px;\n//   color: #2b3a59;\n//   user-select: none;\n// }\n// .epic-modal-content p.delete-warning {\n//   background: #ffe6e6;\n//   padding: 10px;\n//   color: #d94343;\n//   font-size: 14px;\n//   margin-bottom: 15px;\n//   border-radius: 6px;\n// }\n// .epic-modal-input, .epic-modal-select {\n//   width: 100%;\n//   padding: 10px;\n//   font-size: 14px;\n//   margin-bottom: 20px;\n//   border-radius: 6px;\n//   border: 1px solid #dfe5e5;\n//   box-sizing: border-box;\n//   font-family: inherit;\n// }\n// .epic-modal-input:focus, .epic-modal-select:focus {\n//   outline: none;\n//   border-color: #485fc7;\n// }\n// .epic-modal-actions {\n//   display: flex;\n//   justify-content: space-between;\n//   gap: 15px;\n// }\n// button.create-epic-btn, button.delete-epic-btn {\n//   background: #485fc7;\n//   color: white;\n//   font-weight: 600;\n//   border: none;\n//   padding: 10px 20px;\n//   border-radius: 8px;\n//   cursor: pointer;\n//   font-size: 15px;\n//   user-select: none;\n// }\n// button.create-epic-btn:hover, button.delete-epic-btn:hover {\n//   background: #374cac;\n// }\n// button.delete-epic-btn {\n//   background: #d94343;\n// }\n// button.delete-epic-btn:hover {\n//   background: #b83232;\n// }\n\n//       `}</style>\n\n//     </div>\n//   );\n// }\n\n// const btnStyle = {\n//   cancel: {\n//     padding: '10px 18px',\n//     borderRadius: '6px',\n//     border: 'none',\n//     backgroundColor: '#5e6c84',\n//     color: 'white',\n//     fontWeight: '600',\n//     fontSize: '14px',\n//     cursor: 'pointer'\n//   },\n//   // create: {\n//   //   padding: '10px 18px',\n//   //   borderRadius: '6px',\n//   //   border: 'none',\n//   //   backgroundColor: '#1976d2',\n//   //   color: 'white',\n//   //   fontWeight: '600',\n//   //   fontSize: '14px',\n//   //   cursor: 'pointer'\n//   // },\n//   delete: {\n//     padding: '10px 18px',\n//     borderRadius: '6px',\n//     border: 'none',\n//     backgroundColor: '#d32f2f',\n//     color: 'white',\n//     fontWeight: '600',\n//     fontSize: '14px',\n//     cursor: 'pointer'\n//   }\n// };\n\n\n\n\n\n\n\n//======================================================================================\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst mockIssues = [\n  { id: 'i1', epic: 'p1', epicName: 'Frontend', status: 'todo', type: 'Task', title: 'Setup repo', assignee: 'John Doe', storyPoints: 3, labels: [], dueDate: '2025-09-30', reporter: 'admin', priority: 'High', startDate: '2025-09-15', description: '', subtasks: '', comments: '' },\n  { id: 'i3', epic: 'p2', epicName: 'Middleware', status: 'todo', type: 'Subtask', title: 'API integration', assignee: 'Jane Smith', storyPoints: 2, labels: [], dueDate: '', reporter: 'lead-dev', priority: 'Low', startDate: '2025-09-18', description: '', subtasks: '', comments: '' }\n];\n\nconst defaultStatuses = ['backlog', 'todo', 'analysis', 'inprogress', 'blocked', 'code review', 'qa', 'milestone', 'done'];\nconst mockEpics = [{ id: 'p1', name: 'Frontend' }, { id: 'p2', name: 'Middleware' }];\n\nconst simulateApiDelay = () => new Promise(resolve => setTimeout(resolve, 200));\nconst listIssues = async (projectId) => {\n  await simulateApiDelay();\n  return mockIssues.filter(i => !projectId || i.epic === projectId || i.projectId === projectId);\n};\nconst listEpics = async () => { await simulateApiDelay(); return mockEpics; };\nconst createEpicAPI = async (epicName) => {\n  await simulateApiDelay();\n  const newEpic = { id: 'p' + (mockEpics.length + 1), name: epicName };\n  mockEpics.push(newEpic);\n  return newEpic;\n};\nconst deleteEpicAPI = async (epicId) => {\n  await simulateApiDelay();\n  const epicIndex = mockEpics.findIndex(epic => epic.id === epicId);\n  if (epicIndex > -1) mockEpics.splice(epicIndex, 1);\n  const issueIndices = [];\n  mockIssues.forEach((issue, index) => { if (issue.epic === epicId) issueIndices.push(index); });\n  issueIndices.sort((a, b) => b - a).forEach(index => { mockIssues.splice(index, 1); });\n};\nconst moveIssue = async (issueId, status) => {\n  await simulateApiDelay();\n  const issue = mockIssues.find(i => i.id === issueId);\n  if (!issue) throw new Error('Issue not found');\n  issue.status = status;\n};\nconst createIssueAPI = async (issue) => { await simulateApiDelay(); mockIssues.push(issue); };\nconst deleteIssueAPI = async (issueId) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === issueId); if (idx > -1) mockIssues.splice(idx, 1); };\nconst updateIssueAPI = async (updatedIssue) => { await simulateApiDelay(); const idx = mockIssues.findIndex(i => i.id === updatedIssue.id); if (idx > -1) mockIssues[idx] = { ...mockIssues[idx], ...updatedIssue }; };\n\nconst getSwimlanes = (issues, epics) =>\n  epics.map(epic => {\n    const epicIssues = issues.filter(i => (i.epic || i.projectId) === epic.id);\n    return { id: epic.id, title: epic.name, issues: epicIssues };\n  });\n\nexport default function KanbanBoard() {\n  const { projectId } = useParams();\n  const [issues, setIssues] = useState([]);\n  const [epics, setEpics] = useState([]);\n  const [openSwimlanes, setOpenSwimlanes] = useState({});\n  const [customTitles, setCustomTitles] = useState({});\n  const [createLaneId, setCreateLaneId] = useState(null);\n  const [newTaskText, setNewTaskText] = useState('');\n  const [newTaskType, setNewTaskType] = useState('Task');\n  const [selectedIssue, setSelectedIssue] = useState(null);\n  const [editIssue, setEditIssue] = useState(null);\n  const [showCreateEpic, setShowCreateEpic] = useState(false);\n  const [showDeleteEpic, setShowDeleteEpic] = useState(false);\n  const [newEpicName, setNewEpicName] = useState('');\n  const [epicToDelete, setEpicToDelete] = useState('');\n  const [columnsByLane, setColumnsByLane] = useState({});\n  const [columnModal, setColumnModal] = useState(null);\n  const [columnInput, setColumnInput] = useState('');\n  const [hoveredAssigneeId, setHoveredAssigneeId] = useState(null);\n  const [modalPosition, setModalPosition] = useState({ top: 0, left: 0 });\n  const [isMobile, setIsMobile] = useState(false);\n  const [activeSwimlane, setActiveSwimlane] = useState(null);\n\n  // Detect mobile screen size\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    \n    checkScreenSize();\n    window.addEventListener('resize', checkScreenSize);\n    \n    return () => window.removeEventListener('resize', checkScreenSize);\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [issuesData, epicsData] = await Promise.all([listIssues(projectId), listEpics()]);\n        setIssues(issuesData);\n        setEpics(epicsData);\n        const lanes = getSwimlanes(issuesData, epicsData);\n        const initialOpen = {}, initialTitles = {}, initialCols = {};\n        lanes.forEach(lane => {\n          initialOpen[lane.id] = true;\n          initialTitles[lane.id] = lane.title;\n          initialCols[lane.id] = defaultStatuses.slice();\n        });\n        setOpenSwimlanes(initialOpen);\n        setCustomTitles(initialTitles);\n        setColumnsByLane(initialCols);\n      } catch (err) { console.error(err); }\n    };\n    fetchData();\n  }, [projectId]);\n\n  const openAddColumnModal = (e, laneId, colIndex) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n    setColumnModal({ laneId, colIndex, type: 'add' });\n    setColumnInput('');\n  };\n  const openEditColumnModal = (e, laneId, colIndex, status) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    setModalPosition({ top: rect.bottom + window.scrollY + 8, left: rect.left + window.scrollX });\n    setColumnModal({ laneId, colIndex, type: 'menu' });\n    setColumnInput(status);\n  };\n  const handleAddColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    setColumnsByLane(prev => {\n      const cols = [...prev[columnModal.laneId]];\n      if (cols.includes(name.toLowerCase())) alert('Column name already exists');\n      else cols.splice(columnModal.colIndex + 1, 0, name.toLowerCase());\n      return { ...prev, [columnModal.laneId]: cols };\n    });\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleEditColumn = () => {\n    const name = columnInput.trim();\n    if (!name) return alert('Column name is required');\n    const { laneId, colIndex } = columnModal;\n    const oldCol = columnsByLane[laneId][colIndex];\n    if (columnsByLane[laneId].includes(name.toLowerCase()) && name.toLowerCase() !== oldCol) {\n      alert('Column name already exists');\n      return;\n    }\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols[colIndex] = name.toLowerCase();\n      return { ...prev, [laneId]: cols };\n    });\n    const updatedIssues = issues.map(issue =>\n      (issue.epic || issue.projectId) === laneId && issue.status === oldCol ? { ...issue, status: name.toLowerCase() } : issue\n    );\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const handleDeleteColumn = () => {\n    const { laneId, colIndex } = columnModal;\n    const removedCol = columnsByLane[laneId][colIndex];\n    setColumnsByLane(prev => {\n      const cols = [...prev[laneId]];\n      cols.splice(colIndex, 1);\n      return { ...prev, [laneId]: cols };\n    });\n    const updatedIssues = issues.map(issue =>\n      (issue.epic || issue.projectId) === laneId && issue.status === removedCol ? { ...issue, status: 'backlog' } : issue\n    );\n    setIssues(updatedIssues);\n    setColumnModal(null);\n    setColumnInput('');\n  };\n  const toggleSwimlane = (id) => setOpenSwimlanes(prev => ({ ...prev, [id]: !prev[id] }));\n  const byStatus = (collection, status) => collection.filter(i => i.status === status);\n\n  const onDragStart = (e, issueId) => e.dataTransfer.setData('text/plain', issueId);\n  const onDrop = async (e, targetStatus, swimlaneId) => {\n    e.preventDefault();\n    try {\n      const issueId = e.dataTransfer.getData('text/plain');\n      const issue = issues.find(i => i.id === issueId);\n      const srcLaneId = issue.epic || issue.projectId;\n      if (srcLaneId === swimlaneId && issue.status !== targetStatus) {\n        await moveIssue(issueId, targetStatus);\n        const refreshed = await listIssues(projectId);\n        setIssues(refreshed);\n      }\n    } catch (err) { console.error(err); }\n  };\n  const onDragOver = e => e.preventDefault();\n\n  const handleCreateClick = laneId => { setCreateLaneId(laneId); setNewTaskText(''); setNewTaskType('Task'); };\n  const handleCreateSubmit = async lane => {\n    if (!newTaskText.trim()) { alert('Task title is required'); return; }\n    const newIssue = {\n      id: Math.random().toString(36).slice(2),\n      epic: lane.id,\n      projectId: lane.id,\n      epicName: lane.title,\n      title: newTaskText,\n      status: 'backlog',\n      assignee: '',\n      type: newTaskType,\n      storyPoints: '',\n      labels: [],\n      dueDate: '',\n      reporter: 'system',\n      priority: 'Medium',\n      startDate: new Date().toISOString().split('T')[0],\n      description: '',\n      subtasks: '',\n      comments: ''\n    };\n    try {\n      await createIssueAPI(newIssue);\n      const refreshed = await listIssues(projectId);\n      setIssues(refreshed);\n      setCreateLaneId(null);\n    } catch (err) { console.error(err); }\n  };\n\n  const handleOpenModal = (issue) => { setSelectedIssue(issue); setEditIssue({ ...issue }); };\n  const handleUpdateField = (field, value) => { setEditIssue(prev => ({ ...prev, [field]: value })); };\n  const handleSave = async () => { await updateIssueAPI(editIssue); const refreshed = await listIssues(projectId); setIssues(refreshed); setSelectedIssue(null); setEditIssue(null); };\n  const handleReset = () => { setEditIssue({ ...selectedIssue }); };\n\n  // Create Epic Modal Handlers\n  const handleCreateEpic = async () => {\n    if (!newEpicName.trim()) {\n      alert('Epic name is required');\n      return;\n    }\n    try {\n      await createEpicAPI(newEpicName);\n      const updatedEpics = await listEpics();\n      setEpics(updatedEpics);\n      setNewEpicName('');\n      setShowCreateEpic(false);\n      const newEpic = updatedEpics[updatedEpics.length - 1];\n      setOpenSwimlanes(prev => ({ ...prev, [newEpic.id]: true }));\n      setCustomTitles(prev => ({ ...prev, [newEpic.id]: newEpic.name }));\n      setColumnsByLane(prev => ({ ...prev, [newEpic.id]: defaultStatuses.slice() }));\n    } catch (error) {\n      console.error('Error creating epic:', error);\n    }\n  };\n\n  // Delete Epic Modal Handler\n  const handleDeleteEpic = async () => {\n    if (!epicToDelete) {\n      alert('Please select an epic to delete');\n      return;\n    }\n    if (!window.confirm(`Are you sure you want to delete the epic \"${epics.find(e => e.id === epicToDelete)?.name}\"? This will also delete all issues in this epic.`)) {\n      return;\n    }\n    try {\n      await deleteEpicAPI(epicToDelete);\n      const [refreshedIssues, refreshedEpics] = await Promise.all([\n        listIssues(projectId),\n        listEpics()\n      ]);\n      setIssues(refreshedIssues);\n      setEpics(refreshedEpics);\n      setEpicToDelete('');\n      setShowDeleteEpic(false);\n      setColumnsByLane(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setOpenSwimlanes(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n      setCustomTitles(prev => {\n        const copy = { ...prev };\n        delete copy[epicToDelete];\n        return copy;\n      });\n    } catch (error) {\n      console.error('Error deleting epic:', error);\n    }\n  };\n\n  // Mobile-specific functions\n  const toggleMobileSwimlane = (laneId) => {\n    if (activeSwimlane === laneId) {\n      setActiveSwimlane(null);\n    } else {\n      setActiveSwimlane(laneId);\n    }\n  };\n\n  const swimlanes = getSwimlanes(issues, epics);\n\n  return (\n    <div className=\"board-wrap\">\n      {/* Mobile swimlane selector */}\n      {isMobile && (\n        <div className=\"mobile-swimlane-selector\">\n          <select \n            value={activeSwimlane || ''} \n            onChange={(e) => setActiveSwimlane(e.target.value || null)}\n            className=\"mobile-select\"\n          >\n            <option value=\"\">All Swimlanes</option>\n            {swimlanes.map(lane => (\n              <option key={lane.id} value={lane.id}>{customTitles[lane.id] || lane.title}</option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      {/* Swimlanes and columns */}\n      {swimlanes.map(lane => {\n        const isOpen = isMobile ? (activeSwimlane === null || activeSwimlane === lane.id) : openSwimlanes[lane.id];\n        const statuses = columnsByLane[lane.id] || defaultStatuses;\n        \n        // Skip rendering if mobile and this isn't the active swimlane\n        if (isMobile && activeSwimlane && activeSwimlane !== lane.id) {\n          return null;\n        }\n\n        return (\n          <section className=\"swimlane\" key={lane.id}>\n            <header className=\"swimlane-header\">\n              {!isMobile && (\n                <button className=\"swimlane-toggle\" onClick={() => toggleSwimlane(lane.id)}>\n                  {isOpen ? '▼' : '▶'}\n                </button>\n              )}\n              <span className=\"swimlane-icon\">⚡</span>\n              <input \n                className=\"swimlane-title-input\" \n                value={customTitles[lane.id] || ''} \n                onChange={e => setCustomTitles(prev => ({ ...prev, [lane.id]: e.target.value }))} \n              />\n              <span className=\"swimlane-count\">{lane.issues.length} work items</span>\n              {isMobile && (\n                <button \n                  className=\"mobile-swimlane-toggle\"\n                  onClick={() => toggleMobileSwimlane(lane.id)}\n                >\n                  {activeSwimlane === lane.id ? '▲' : '▼'}\n                </button>\n              )}\n            </header>\n            {isOpen && (\n              <div className={`kanban-row ${isMobile ? 'mobile-view' : ''}`}>\n                {statuses.map((status, idx) => {\n                  const issuesForStatus = byStatus(lane.issues, status);\n                  return (\n                    <div \n                      className={`kanban-column ${isMobile ? 'mobile-column' : ''}`} \n                      key={status} \n                      onDragOver={onDragOver} \n                      onDrop={e => onDrop(e, status, lane.id)}\n                    >\n                      <div className=\"col-header\">\n                        <span className=\"col-title\">{status.toUpperCase()}</span>\n                        {!isMobile && (\n                          <span className=\"col-icons\">\n                            <button className=\"col-icon\" title=\"Add Column\" onClick={e => openAddColumnModal(e, lane.id, idx)}>＋</button>\n                            <button className=\"col-icon\" title=\"Edit/Delete Column\" onClick={e => openEditColumnModal(e, lane.id, idx, status)}>⋮</button>\n                          </span>\n                        )}\n                        {issuesForStatus.length > 0 && <span className=\"col-count\">{issuesForStatus.length}</span>}\n                      </div>\n                      <div className=\"col-create\">\n                        {status === 'backlog' && (\n                          createLaneId === lane.id ? (\n                            <div className=\"create-card\">\n                              <textarea rows={2} className=\"create-input\" placeholder=\"What needs to be done?\" value={newTaskText} onChange={e => setNewTaskText(e.target.value)} />\n                              <div className=\"create-actions\">\n                                <select value={newTaskType} onChange={e => setNewTaskType(e.target.value)} className=\"create-select\">\n                                  <option>Task</option><option>Subtask</option><option>Bug</option>\n                                </select>\n                                <button className=\"create-btn\" onClick={() => handleCreateSubmit(lane)}>✔</button>\n                                <button className=\"create-btn\" onClick={() => setCreateLaneId(null)}>✖</button>\n                              </div>\n                            </div>\n                          ) : (<span className=\"create-link\" onClick={() => handleCreateClick(lane.id)}>+ Create</span>)\n                        )}\n                      </div>\n                      {issuesForStatus.map(issue => {\n                        const isHovered = hoveredAssigneeId === issue.id;\n                        return (\n                          <div className=\"card-item\" key={issue.id} draggable onDragStart={e => onDragStart(e, issue.id)} onClick={() => handleOpenModal(issue)}>\n                            <div className=\"card-top\">\n                              <span className={`card-tag card-tag-${issue.type.toLowerCase()}`}>{issue.type}</span>\n                              <span className=\"card-id\">{issue.id}</span>\n                            </div>\n                            <div className=\"card-title\">{issue.title}</div>\n                            <div className=\"card-meta\">\n                              {issue.dueDate && <span className=\"card-due\">📅 {issue.dueDate}</span>}\n                              <span className={`card-priority ${issue.priority.toLowerCase()}`}>⚑ {issue.priority}</span>\n                              {issue.assignee && (\n                                <span className=\"card-assignee\" onMouseEnter={() => setHoveredAssigneeId(issue.id)} onMouseLeave={() => setHoveredAssigneeId(null)} style={{ position: 'relative', cursor: 'default', userSelect: 'none' }}>\n                                  👤\n                                  {isHovered && <div className=\"assignee-tooltip\">{issue.assignee}</div>}\n                                </span>\n                              )}\n                            </div>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </section>\n        );\n      })}\n\n      {/* Column Add/Edit modal */}\n      {columnModal && (columnModal.type === 'add' || columnModal.type === 'menu') && (\n        <div className=\"epic-modal-overlay\" onClick={() => setColumnModal(null)} style={{ position: 'fixed', top: 0, left: 0, right: 0, bottom: 0, zIndex: 1000 }}>\n          <div className=\"epic-modal\" onClick={e => e.stopPropagation()} style={{\n            position: isMobile ? 'fixed' : 'absolute',\n            top: isMobile ? '50%' : modalPosition.top,\n            left: isMobile ? '50%' : modalPosition.left,\n            transform: isMobile ? 'translate(-50%, -50%)' : 'translateX(-50%)',\n            minWidth: isMobile ? '90vw' : 280,\n            maxWidth: isMobile ? '95vw' : 320,\n            padding: 20,\n            borderRadius: 10,\n            background: 'white',\n            boxShadow: '0 10px 40px rgba(0,0,0,0.3)',\n            zIndex: 1100\n          }}>\n            {columnModal.type === 'add' ? (\n              <>\n                <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Add Column</h3>\n                <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n                <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12, flexWrap: isMobile ? 'wrap' : 'nowrap' }}>\n                  <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n                  <button className=\"btn-create\" onClick={handleAddColumn} style={btnStyle.create}>Add</button>\n                </div>\n              </>\n            ) : (\n              <>\n                <h3 style={{ marginBottom: 15, fontWeight: 600, fontSize: 20, color: '#172b4d' }}>Edit/Delete Column</h3>\n                <input value={columnInput} onChange={e => setColumnInput(e.target.value)} placeholder=\"Column name\" autoFocus className=\"epic-modal-input\" style={{ width: '100%', padding: 12, fontSize: 16, borderRadius: 6, border: '1px solid #dfe1e5', marginBottom: 20, boxSizing: 'border-box' }} />\n                <div className=\"epic-modal-actions\" style={{ display: 'flex', justifyContent: 'flex-end', gap: 12, flexWrap: isMobile ? 'wrap' : 'nowrap' }}>\n                  <button className=\"btn-save\" onClick={handleEditColumn} style={btnStyle.create}>Rename</button>\n                  <button className=\"btn-delete\" onClick={handleDeleteColumn} style={btnStyle.delete}>Delete</button>\n                  <button className=\"btn-cancel\" onClick={() => setColumnModal(null)} style={btnStyle.cancel}>Cancel</button>\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      )}\n\n      {/* Issue modal */}\n      {selectedIssue && editIssue && (\n        <div className=\"modal-overlay\" onClick={() => setSelectedIssue(null)}>\n          <div className={`modal ${isMobile ? 'mobile-modal' : ''}`} onClick={e => e.stopPropagation()}>\n            <div className=\"modal-header\">\n              <h2>{editIssue.epicName}</h2>\n              <button className=\"modal-close-btn\" onClick={() => setSelectedIssue(null)}>✖</button>\n            </div>\n            <div className={`modal-content ${isMobile ? 'mobile-modal-content' : ''}`}>\n              <div className=\"modal-field\"><label>Title</label><input value={editIssue.title} onChange={e => handleUpdateField('title', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Description</label><textarea value={editIssue.description} onChange={e => handleUpdateField('description', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Subtasks</label><input value={editIssue.subtasks} onChange={e => handleUpdateField('subtasks', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Comments</label><textarea value={editIssue.comments} onChange={e => handleUpdateField('comments', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Status</label>\n                <select value={editIssue.status} onChange={e => handleUpdateField('status', e.target.value)}>\n                  {columnsByLane[editIssue.epic]?.map(st => <option key={st} value={st}>{st}</option>) || defaultStatuses.map(st => <option key={st} value={st}>{st}</option>)}\n                </select>\n              </div>\n              <div className=\"modal-field\"><label>Assignee</label><input value={editIssue.assignee} onChange={e => handleUpdateField('assignee', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Reporter</label><input disabled value={editIssue.reporter} /></div>\n              <div className=\"modal-field\"><label>Priority</label>\n                <select value={editIssue.priority} onChange={e => handleUpdateField('priority', e.target.value)}>\n                  <option>Low</option><option>Medium</option><option>High</option>\n                </select>\n              </div>\n              <div className=\"modal-field\"><label>Due Date</label><input type=\"date\" value={editIssue.dueDate} onChange={e => handleUpdateField('dueDate', e.target.value)} /></div>\n              <div className=\"modal-field\"><label>Start Date</label><input type=\"date\" value={editIssue.startDate} onChange={e => handleUpdateField('startDate', e.target.value)} /></div>\n            </div>\n            <div className=\"modal-actions\" style={{ gridColumn: \"span 3\", alignItems: 'center' }}>\n              <button className=\"btn-reset\" onClick={handleReset}>Reset</button>\n              <button className=\"btn-save\" onClick={handleSave}>Save</button>\n              <button className=\"modal-delete-btn\" onClick={async () => {\n                if (window.confirm('Delete this issue?')) {\n                  await deleteIssueAPI(selectedIssue.id);\n                  const refreshed = await listIssues(projectId);\n                  setIssues(refreshed);\n                  setSelectedIssue(null);\n                }\n              }}>🗑</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Inline CSS styles */}\n      <style>{`\n        /* Base styles */\n        body {\n          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n          background-color: #f5f6f8;\n          margin: 0;\n          padding: 16px;\n        }\n        .board-wrap {\n          max-width: 100%;\n          overflow-x: auto;\n        }\n\n        /* Desktop styles */\n        @media (min-width: 768px) {\n          .swimlane {\n            background: white;\n            border-radius: 8px;\n            margin-bottom: 16px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n            overflow: hidden;\n          }\n          \n          .kanban-row {\n            display: flex;\n            padding: 16px;\n            gap: 12px;\n            overflow-x: auto;\n          }\n          \n          .kanban-column {\n            flex: 0 0 260px;\n            background: #f5f6f8;\n            border-radius: 6px;\n            padding: 12px;\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n            border: 1px solid #dfe5e5;\n            user-select: none;\n            min-height: 400px;\n          }\n          \n          .modal {\n            background: white;\n            border-radius: 8px;\n            padding: 24px;\n            width: 700px;\n            max-height: 80vh;\n            display: grid;\n            grid-template-columns: 1fr 1fr 1fr;\n            gap: 16px;\n            overflow-y: auto;\n            position: relative;\n          }\n        }\n\n        /* Mobile styles */\n        @media (max-width: 767px) {\n          body {\n            padding: 8px;\n          }\n          \n          .mobile-swimlane-selector {\n            margin-bottom: 16px;\n            position: sticky;\n            top: 0;\n            background: white;\n            padding: 12px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            z-index: 100;\n          }\n          \n          .mobile-select {\n            width: 100%;\n            padding: 12px;\n            border: 1px solid #dfe5e5;\n            border-radius: 6px;\n            font-size: 16px;\n            background: white;\n          }\n          \n          .swimlane {\n            background: white;\n            border-radius: 8px;\n            margin-bottom: 12px;\n            box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n            overflow: hidden;\n          }\n          \n          .swimlane-header {\n            display: flex;\n            align-items: center;\n            padding: 12px;\n            background: #fafbfc;\n            border-bottom: 1px solid #dfe5e5;\n            font-weight: 600;\n            font-size: 14px;\n            color: #172b4d;\n            position: relative;\n          }\n          \n          .mobile-swimlane-toggle {\n            background: none;\n            border: none;\n            font-size: 16px;\n            color: #5e6c84;\n            margin-left: auto;\n            padding: 4px 8px;\n          }\n          \n          .kanban-row.mobile-view {\n            display: block;\n            padding: 8px;\n            overflow-x: auto;\n            white-space: nowrap;\n          }\n          \n          .kanban-column.mobile-column {\n            display: inline-block;\n            vertical-align: top;\n            width: 280px;\n            margin-right: 8px;\n            background: #f5f6f8;\n            border-radius: 6px;\n            padding: 8px;\n            border: 1px solid #dfe5e5;\n            user-select: none;\n            min-height: 300px;\n          }\n          \n          .col-header {\n            display: flex;\n            align-items: center;\n            margin-bottom: 8px;\n            gap: 6px;\n          }\n          \n          .col-title {\n            font-weight: 600;\n            font-size: 11px;\n            color: #5e6c84;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            flex-grow: 1;\n          }\n          \n          .card-item {\n            background: white;\n            border-radius: 6px;\n            padding: 10px;\n            box-shadow: 0 0 2px rgba(0,0,0,0.1);\n            cursor: pointer;\n            user-select: none;\n            display: flex;\n            flex-direction: column;\n            gap: 6px;\n            border: 1px solid #dfe5e5;\n            margin-bottom: 8px;\n          }\n          \n          .card-title {\n            font-weight: 600;\n            font-size: 13px;\n            color: #2b3a59;\n            line-height: 1.3;\n          }\n          \n          .card-meta {\n            display: flex;\n            gap: 6px;\n            font-size: 10px;\n            color: #6b7c93;\n            align-items: center;\n            flex-wrap: wrap;\n          }\n          \n          .modal.mobile-modal {\n            width: 95vw;\n            max-height: 90vh;\n            padding: 16px;\n            display: flex;\n            flex-direction: column;\n          }\n          \n          .modal-content.mobile-modal-content {\n            display: flex;\n            flex-direction: column;\n            gap: 12px;\n            overflow-y: auto;\n          }\n          \n          .modal-field {\n            display: flex;\n            flex-direction: column;\n            gap: 4px;\n          }\n          \n          .modal-field input, .modal-field textarea, .modal-field select {\n            padding: 10px;\n            font-size: 16px; /* Better for mobile touch */\n          }\n          \n          .modal-actions {\n            display: flex;\n            gap: 8px;\n            justify-content: space-between;\n            margin-top: 16px;\n          }\n          \n          .modal-actions button {\n            flex: 1;\n            padding: 12px;\n            font-size: 16px;\n          }\n        }\n\n        /* Common styles (applied to both desktop and mobile) */\n        .swimlane-header {\n          display: flex;\n          align-items: center;\n          padding: 12px 16px;\n          background: #fafbfc;\n          border-bottom: 1px solid #dfe5e5;\n          font-weight: 600;\n          font-size: 14px;\n          color: #172b4d;\n        }\n        \n        .swimlane-toggle, .swimlane-icon {\n          color: #5e6c84;\n          margin-right: 8px;\n          cursor: pointer;\n        }\n        \n        .swimlane-toggle {\n          border: none;\n          background: transparent;\n          font-size: 14px;\n        }\n        \n        .swimlane-icon {\n          font-size: 18px;\n        }\n        \n        .swimlane-title-input {\n          border: 1px solid #dfe5e5;\n          border-radius: 4px;\n          padding: 4px 8px;\n          font-size: 14px;\n          font-weight: 600;\n          background: white;\n          margin-right: 8px;\n          min-width: 150px;\n          color: #172b4d;\n        }\n        \n        .swimlane-title-input:focus {\n          outline: none;\n          border-color: #1976d2;\n        }\n        \n        .swimlane-count {\n          color: #5e6c84;\n          font-size: 12px;\n          font-weight: normal;\n        }\n        \n        .col-header {\n          display: flex;\n          align-items: center;\n          margin-bottom: 4px;\n          gap: 6px;\n        }\n        \n        .col-title {\n          font-weight: 600;\n          font-size: 12px;\n          color: #5e6c84;\n          text-transform: uppercase;\n          letter-spacing: 0.5px;\n          flex-grow: 1;\n        }\n        \n        .col-count {\n          background: #dfe5e5;\n          color: #5e6c84;\n          border-radius: 12px;\n          padding: 2px 8px;\n          font-size: 11px;\n          font-weight: 600;\n          min-width: 20px;\n          text-align: center;\n        }\n        \n        .col-icons {\n          display: flex;\n          gap: 6px;\n        }\n        \n        .col-icon {\n          cursor: pointer;\n          color: #5e6c84;\n          font-size: 18px;\n          background: none;\n          border: none;\n          padding: 0;\n        }\n        \n        .create-card {\n          background: white;\n          padding: 10px;\n          border-radius: 6px;\n          box-shadow: 0 0 2px rgba(0, 0, 0, 0.2);\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n        \n        .card-item {\n          background: white;\n          border-radius: 8px;\n          padding: 12px;\n          box-shadow: 0 0 2px rgba(0,0,0,0.1);\n          cursor: pointer;\n          user-select: none;\n          display: flex;\n          flex-direction: column;\n          gap: 6px;\n          border: 1px solid #dfe5e5;\n          transition: box-shadow 0.2s ease, border-color 0.2s ease;\n        }\n        \n        .card-item:hover {\n          box-shadow: 0px 2px 10px rgba(0,0,0,0.15);\n          border-color: #a2adba;\n        }\n        \n        .modal-overlay {\n          position: fixed;\n          top: 0; left: 0; right: 0; bottom: 0;\n          background: rgba(0,0,0,0.5);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          z-index: 1000;\n        }\n        \n        /* Button styles */\n        button {\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n        \n        button:hover {\n          opacity: 0.9;\n        }\n\n        /* Touch improvements for mobile */\n        @media (max-width: 767px) {\n          button, .card-item, .col-icon {\n            min-height: 44px;\n            min-width: 44px;\n          }\n          \n          .card-item {\n            touch-action: manipulation;\n          }\n        }\n      `}</style>\n    </div>\n  );\n}\n\nconst btnStyle = {\n  cancel: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#5e6c84',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  create: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#1976d2',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  },\n  delete: {\n    padding: '10px 18px',\n    borderRadius: '6px',\n    border: 'none',\n    backgroundColor: '#d32f2f',\n    color: 'white',\n    fontWeight: '600',\n    fontSize: '14px',\n    cursor: 'pointer'\n  }\n};"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}