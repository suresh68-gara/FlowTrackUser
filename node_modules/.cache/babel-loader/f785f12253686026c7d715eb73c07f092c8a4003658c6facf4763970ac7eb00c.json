{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battina srinuvasurao\\\\OneDrive\\\\Desktop\\\\userstool\\\\src\\\\components\\\\users\\\\Users.js\",\n  _s = $RefreshSig$();\n// full code before changes\n\n// import React, { useEffect, useState } from 'react';\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import {\n//   FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload,\n//   FiPlus, FiMinus\n// } from 'react-icons/fi';\n\n// const ROLES_KEY = 'user-management-roles';\n// const DEPARTMENTS_KEY = 'user-management-departments';\n\n// const defaultRoles = ['Assosiate Developer', 'Senior Assosiate Developer', 'HR', 'Administration'];\n// const defaultDepartments = ['Frontend', 'Backend', 'Middleware', 'AI/ML','DevOps','Testing','FlowTrack','NetWork','Hr'];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: '',\n//     lastName: '',\n//     email: '',\n//     role: 'Developer',\n//     department: 'Engineering',\n//     active: true,\n//     mobileNumber: '',\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [error, setError] = useState(null);\n\n//   // Roles & Departments state\n//   const [roles, setRoles] = useState(() => getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(() => getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   // Modal state\n//   const [showRoleModal, setShowRoleModal] = useState(false);\n//   const [showDepartmentModal, setShowDepartmentModal] = useState(false);\n//   const [roleInput, setRoleInput] = useState('');\n//   const [departmentInput, setDepartmentInput] = useState('');\n//   const [roleToDelete, setRoleToDelete] = useState('');\n//   const [departmentToDelete, setDepartmentToDelete] = useState('');\n\n//   // Load users on mount\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         console.error('Failed to load users:', err);\n//         setError('Failed to load users');\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   // Save roles and departments to localStorage if changed\n//   useEffect(() => { setStored(ROLES_KEY, roles); }, [roles]);\n//   useEffect(() => { setStored(DEPARTMENTS_KEY, departments); }, [departments]);\n\n//   // Handlers\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const handleEditChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setEditForm(prev => ({\n//       ...prev,\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\n//     }));\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.lastName.trim() || !newUserForm.email.trim()) {\n//       setError('First Name, Email are required.');\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: `${newUserForm.firstName.trim()} ${newUserForm.lastName.trim()}`,\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to add user:', err);\n//       setError('Failed to add user');\n//     }\n//   };\n\n//   const startEdit = (u) => {\n//     setEditingId(u.id);\n//     setEditForm({ ...u });\n//     setError(null);\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditForm({});\n//     setError(null);\n//   };\n\n//   const saveEdit = async (id) => {\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\n//       setError('Full Name, and Email cannot be empty.');\n//       return;\n//     }\n//     try {\n//       const updatedUser = {\n//         ...editForm,\n//         name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\n//         profileFile: editForm.profileFile && editForm.profileFile.name\n//           ? { name: editForm.profileFile.name, size: editForm.profileFile.size }\n//           : editForm.profileFile\n//       };\n//       await updateUser(updatedUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       cancelEdit();\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to update user:', err);\n//       setError('User not found or failed to update');\n//     }\n//   };\n\n//   const remove = async (id) => {\n//     try {\n//       await deleteUser(id);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setError(null);\n//     } catch (err) {\n//       console.error('Failed to delete user:', err);\n//       setError('User not found or failed to delete');\n//     }\n//   };\n\n//   const filteredUsers = users.filter(user => {\n//     const searchLower = searchTerm.toLowerCase();\n//     return (\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\n//       (user.department && user.department.toLowerCase().includes(searchLower))\n//     );\n//   });\n\n//   const getRoleColor = (roleOrDepartment) => {\n//     const colors = {\n//       'admin': 'role-admin',\n//       'manager': 'role-manager',\n//       'developer': 'role-developer',\n//       'reporter': 'role-reporter',\n//       'engineering': 'role-developer',\n//       'sales': 'role-sales',\n//       'hr': 'role-hr',\n//       'marketing': 'role-marketing',\n\n//     };\n//     return colors[roleOrDepartment.toLowerCase()] || '';\n//   };\n\n//   // ---- Modal handlers ----\n//   // Role modals\n//   const openRoleModal = () => { setShowRoleModal(true); setRoleInput(''); setRoleToDelete(''); };\n//   const closeRoleModal = () => { setShowRoleModal(false); setRoleInput(''); setRoleToDelete(''); };\n\n//   const addRole = () => {\n//     const v = roleInput.trim();\n//     if (v && !roles.includes(v)) {\n//       setRoles([...roles, v]);\n//       setRoleInput('');\n//     }\n//   };\n//   const deleteRole = (r) => {\n//     setRoles(roles.filter(role => role !== r));\n//     // Optionally, update forms if current value is deleted\n//     if (newUserForm.role === r) setNewUserForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     if (editForm.role === r) setEditForm(prev => ({ ...prev, role: roles[0] || '' }));\n//     setRoleToDelete('');\n//   };\n\n//   // Department modals\n//   const openDepartmentModal = () => { setShowDepartmentModal(true); setDepartmentInput(''); setDepartmentToDelete(''); };\n//   const closeDepartmentModal = () => { setShowDepartmentModal(false); setDepartmentInput(''); setDepartmentToDelete(''); };\n\n//   const addDepartment = () => {\n//     const v = departmentInput.trim();\n//     if (v && !departments.includes(v)) {\n//       setDepartments([...departments, v]);\n//       setDepartmentInput('');\n//     }\n//   };\n//   const deleteDepartment = (d) => {\n//     setDepartments(departments.filter(dep => dep !== d));\n//     if (newUserForm.department === d)\n//       setNewUserForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     if (editForm.department === d)\n//       setEditForm(prev => ({ ...prev, department: departments[0] || '' }));\n//     setDepartmentToDelete('');\n//   };\n\n//   return (\n//     <div className=\"users-container\">\n//       <style jsx global>{`\n//         body { background: #D8F7FA; min-height: 100vh; }\n//       `}</style>\n//       {/* Header */}\n//       <div className=\"users-header\">\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\n//         {error && <p className=\"error-message\">{error}</p>}\n//       </div>\n//       <div className=\"users-grid\">\n//         {/* ---- FORM SECTION ---- */}\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-form-title\" className=\"card-title\">\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\n//             </h2>\n//           </div>\n//           <div className=\"form-grid-expanded\">\n//             {/* Standard fields */}\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Full Name *</label>\n//               <input className=\"modern-input\" name=\"firstName\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"First Name\"\n//               />\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Email Address *</label>\n//               <input className=\"modern-input\" name=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Email Address\"\n//                 type=\"email\"\n//               />\n//             </div>\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Mobile Number</label>\n//               <input className=\"modern-input\" name=\"mobileNumber\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//                 placeholder=\"Mobile Number\"\n//                 type=\"tel\"\n//               />\n//             </div>\n//             {/* Role dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Role\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openRoleModal} title=\"Edit roles\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}>\n//                 {roles.map(r => (\n//                   <option key={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             {/* Department dropdown with add/delete buttons */}\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\n//               <label className=\"input-label\">Department\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\n//                   onClick={openDepartmentModal} title=\"Edit departments\" />\n//               </label>\n//               <select className=\"modern-select\" name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}>\n//                 {departments.map(d => (\n//                   <option key={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n\n//             <div className=\"input-group\">\n//               <label className=\"input-label\">Date of Birth</label>\n//               <input\n//                 className=\"modern-input\"\n//                 name=\"dob\"\n//                 type=\"date\"\n//                 value={newUserForm.dob}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n\n//             {/* <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">User Status</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"active\"\n//                   checked={newUserForm.active}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">{newUserForm.active ? 'Active' : 'Inactive'}</span>\n//               </label>\n//             </div> */}\n//             <div className=\"input-group checkbox-group\">\n//               <label className=\"input-label\">Password Reset</label>\n//               <label className=\"checkbox-label\">\n//                 <input\n//                   type=\"checkbox\"\n//                   name=\"passwordResetNeeded\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                 />\n//                 <span className=\"checkbox-text\">Reset on next login</span>\n//               </label>\n//             </div>\n//           </div>\n//           {/* <button className=\"create-btn\" onClick={create}>\n//             <FiUserPlus className=\"btn-icon\" />\n//             Create User\n//           </button> */}\n//         </div>\n//         {/* ---- LIST SECTION ---- */}\n//         {/* <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\n//           <div className=\"card-header\">\n//             <h2 id=\"users-list-title\" className=\"card-title\">\n//               Team Members ({filteredUsers.length})\n//             </h2>\n//             <div className=\"search-container\">\n//               <FiSearch className=\"search-icon\" />\n//               <input\n//                 type=\"text\"\n//                 className=\"search-input\"\n//                 placeholder=\"Search users...\"\n//                 value={searchTerm}\n//                 onChange={(e) => setSearchTerm(e.target.value)}\n//               />\n//             </div>\n//           </div>\n//           <div className=\"table-container\">\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Department</th>\n//                   <th>Role</th>\n//                   <th>Active</th>\n//                   <th>Actions</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {filteredUsers.map(u => (\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\n//                     {editingId === u.id ? (\n//                       <>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"firstName\"\n//                             value={editForm.firstName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"First Name\"\n//                           />\n//                           <input className=\"edit-input\"\n//                             name=\"lastName\"\n//                             value={editForm.lastName || ''}\n//                             onChange={handleEditChange}\n//                             placeholder=\"Last Name\"\n//                             style={{ marginTop: '5px' }}\n//                           />\n//                         </td>\n//                         <td>\n//                           <input className=\"edit-input\" name=\"email\"\n//                             value={editForm.email || ''}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"department\"\n//                               value={editForm.department || defaultNewUser.department}\n//                               onChange={handleEditChange}>\n//                               {departments.map(d => (\n//                                 <option key={d}>{d}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openDepartmentModal} title=\"Edit departments\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\n//                             <select className=\"edit-select\"\n//                               name=\"role\"\n//                               value={editForm.role || defaultNewUser.role}\n//                               onChange={handleEditChange}>\n//                               {roles.map(r => (\n//                                 <option key={r}>{r}</option>\n//                               ))}\n//                             </select>\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\n//                               onClick={openRoleModal} title=\"Edit roles\" />\n//                           </div>\n//                         </td>\n//                         <td>\n//                           <input type=\"checkbox\"\n//                             name=\"active\"\n//                             checked={editForm.active || false}\n//                             onChange={handleEditChange}\n//                           />\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\n//                               <FiCheck />\n//                             </button>\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\n//                               <FiX />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <td>\n//                           <div className=\"user-info\">\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\n//                               {u.profileFile && '📁'}\n//                             </div>\n//                           </div>\n//                         </td>\n//                         <td>{u.email}</td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\n//                             {u.department}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\n//                             {u.role}\n//                           </span>\n//                         </td>\n//                         <td>\n//                           <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`}></span>\n//                         </td>\n//                         <td>\n//                           <div className=\"action-buttons\">\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\n//                               <FiEdit2 />\n//                             </button>\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\n//                               <FiTrash2 />\n//                             </button>\n//                           </div>\n//                         </td>\n//                       </>\n//                     )}\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//             {filteredUsers.length === 0 && (\n//               <div className=\"empty-state\">\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\n//               </div>\n//             )}\n//           </div>\n//         </div> */}\n//       </div>\n//       {/* ------ MODALS ------ */}\n//       {showRoleModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Roles</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new role\"\n//                 className=\"modern-input\"\n//                 value={roleInput}\n//                 onChange={e => setRoleInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addRole()}\n//               />\n//               <button onClick={addRole} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {roles.map(r => (\n//                 <div key={r} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{r}</span>\n//                   <FiMinus style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete role\"\n//                     onClick={() => setRoleToDelete(r)}\n//                   />\n//                   {roleToDelete === r && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteRole(r)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setRoleToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeRoleModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {showDepartmentModal && (\n//         <div className=\"modal-overlay\">\n//           <div className=\"modal-content\">\n//             <h3>Edit Departments</h3>\n//             <div style={{ marginBottom: 12 }}>\n//               <input type=\"text\"\n//                 placeholder=\"Add new department\"\n//                 className=\"modern-input\"\n//                 value={departmentInput}\n//                 onChange={e => setDepartmentInput(e.target.value)}\n//                 onKeyDown={e => e.key === 'Enter' && addDepartment()}\n//               />\n//               <button onClick={addDepartment} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\n//             </div>\n//             <div>\n//               {departments.map(d => (\n//                 <div key={d} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\n//                   <span>{d}</span>\n//                   <FiMinus\n//                     style={{ cursor: 'pointer', color: '#e53e3e' }}\n//                     title=\"Delete department\"\n//                     onClick={() => setDepartmentToDelete(d)}\n//                   />\n//                   {departmentToDelete === d && (\n//                     <span style={{ marginLeft: 6 }}>\n//                       Delete?\n//                       <button className=\"btn-delete\" onClick={() => deleteDepartment(d)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setDepartmentToDelete('')}>No</button>\n//                     </span>\n//                   )}\n//                 </div>\n//               ))}\n//             </div>\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeDepartmentModal}>Close</button>\n//           </div>\n//         </div>\n//       )}\n//       {/* --- Modal Styles --- */}\n//   <style jsx>{`\n//     .modal-overlay {\n//       position: fixed; top: 0; left: 0; right: 0; bottom: 0;\n//       background: rgba(0,0,0,.15);\n//       z-index: 1100;\n//       display: flex;\n//       justify-content: center;\n//       align-items: center;\n//     }\n//     .modal-content {\n//       background: #fff;\n//       border-radius: 12px;\n//       padding: 30px 35px;\n//       box-shadow: 0 8px 32px rgba(0,0,0,.15);\n//       min-width: 350px;\n//       max-width: 95vw;\n//       font-size: 1.03rem;\n//       color: #2d3748;\n//     }\n//     .modal-content h3 { margin-top:0; font-size:1.18em; margin-bottom:0.9em; }\n//     .modal-content input { margin-bottom:6px; }\n\n//     .users-container {\n//       min-height: 100vh;\n//       background: #D8F7FA;\n//       padding: 20px;\n//     }\n//     /* ... (rest of your unchanged styles remain here) ... */\n//     .users-header {\n//       text-align: center;\n//       margin-bottom: 40px;\n//       color: #2d3748;\n//     }\n//     .users-title {\n//       font-size: 2.5rem;\n//       font-weight: 700;\n//       margin-bottom: 8px;\n//     }\n//     .users-subtitle {\n//       font-size: 1.1rem;\n//       opacity: 0.8;\n//       color: #4a5568;\n//     }\n//     .error-message {\n//         color: #e53e3e;\n//         background: #fed7d7;\n//         padding: 8px 15px;\n//         border-radius: 8px;\n//         margin-top: 15px;\n//         display: inline-block;\n//         font-weight: 500;\n//     }\n//     .users-grid {\n//       display: grid;\n//       grid-template-columns: 1fr;\n//       gap: 30px;\n//       max-width: 1400px;\n//       margin: 0 auto;\n//     }\n//     @media (min-width: 1024px) {\n//       .users-grid {\n//         grid-template-columns: 450px 1fr;\n//       }\n//     }\n//     .glassmorphism {\n//       background: rgba(255, 255, 255, 0.95);\n\n//       backdrop-filter: blur(10px);\n//       border-radius: 20px;\n//       border: 1px solid rgba(255, 255, 255, 0.2);\n//       box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05);\n//     }\n//     .users-form-card,\n//     .users-list-card {\n//       padding: 30px;\n//     }\n//     .card-header {\n//       display: flex;\n//       justify-content: space-between;\n//       align-items: center;\n//       margin-bottom: 30px;\n//       flex-wrap: wrap;\n//       gap: 15px;\n//     }\n//     .card-title {\n//       font-size: 1.5rem;\n//       font-weight: 600;\n//       color: #2d3748;\n//       display: flex;\n//       align-items: center;\n//     }\n//     .icon-spacing {\n//       margin-right: 10px;\n//     }\n//     .form-grid-expanded {\n//       display: grid;\n//       grid-template-columns: 1fr 1fr;\n//       gap: 20px;\n//       margin-bottom: 30px;\n//     }\n//     .input-group {\n//       display: flex;\n//       flex-direction: column;\n//     }\n//     .input-label {\n//       font-weight: 500;\n//       margin-bottom: 8px;\n//       color: #4a5568;\n//     }\n//     .checkbox-group {\n//         grid-column: span 1;\n//     }\n//     .checkbox-label {\n//         display: flex;\n//         align-items: center;\n//         font-weight: 400;\n//         color: #4a5568;\n//         cursor: pointer;\n//         padding: 10px;\n//         border-radius: 8px;\n//     }\n//     .checkbox-label input[type=\"checkbox\"] {\n//         margin-right: 10px;\n//         width: 18px;\n//         height: 18px;\n//         accent-color: #667eea;\n//     }\n//     .file-group input[type=\"file\"] {\n//       display: none;\n//     }\n//     .file-upload-btn {\n//       padding: 12px 16px;\n//       border: 2px solid #667eea;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 500;\n//       color: #667eea;\n//       background: #ebf4ff;\n//       cursor: pointer;\n//       transition: background-color 0.2s;\n//       display: flex;\n//       align-items: center;\n//       justify-content: flex-start;\n//     }\n//     .file-upload-btn:hover {\n//       background: #d4e3ff;\n//     }\n//     .file-upload-btn .btn-icon {\n//       margin-right: 8px;\n//       font-size: 1.2rem;\n//     }\n//     .modern-input,\n//     .modern-select {\n//       padding: 12px 16px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       transition: all 0.3s ease;\n//       // background: #D8F7FA;\n//       width: 100%;\n//       box-sizing: border-box;\n//     }\n//     .modern-input:focus,\n//     .modern-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .create-btn {\n//       grid-column: 1 / -1;\n//       width: 100%;\n//       padding: 14px;\n//       background: #4e54c8;\n//       color: white;\n//       border: none;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       font-weight: 600;\n//       cursor: pointer;\n//       transition: transform 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .create-btn:hover {\n//       transform: translateY(-2px);\n//       box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\n//     }\n//     .btn-icon {\n//       margin-right: 8px;\n//     }\n//     .search-container {\n//       position: relative;\n//       min-width: 250px;\n//     }\n//     .search-input {\n//       padding: 12px 16px 12px 40px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 10px;\n//       font-size: 1rem;\n//       width: 100%;\n//       transition: all 0.3s ease;\n//     }\n//     .search-input:focus {\n//       outline: none;\n//       border-color: #667eea;\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n//     }\n//     .search-icon {\n//       position: absolute;\n//       left: 12px;\n//       top: 50%;\n//       transform: translateY(-50%);\n//       color: #a0aec0;\n//     }\n//     .table-container {\n//       border-radius: 10px;\n//       /* Removed overflow-x to prevent horizontal scroll */\n//     }\n//     .modern-table {\n//       width: 100%;\n//       border-collapse: collapse;\n//       table-layout: auto; /* Changed from fixed or default to auto */\n//       /* Removed min-width */\n//     }\n//     .modern-table th {\n//       background: #f7fafc;\n//       padding: 12px 8px; /* Slightly reduce padding for smaller widths */\n//       text-align: left;\n//       font-weight: 600;\n//       color: #4a5568;\n//       border-bottom: 2px solid #e2e8f0;\n//       word-wrap: break-word;\n//     }\n//     .modern-table td {\n//       padding: 12px 8px; /* Adjust padding */\n//       border-bottom: 1px solid #e2e8f0;\n//       vertical-align: middle;\n//       word-wrap: break-word;\n//       white-space: normal;\n//     }\n//     .modern-table tr:hover {\n//       background: #D8F7FA;\n//     }\n//     .editing-row {\n//       background: #fff9e6 !important;\n//     }\n//     .user-info {\n//       display: flex;\n//       align-items: center;\n//       gap: 12px;\n//       flex-wrap: wrap;\n//       white-space: normal;\n//     }\n//     .file-indicator {\n//         font-size: 1.1em;\n//         cursor: help;\n//       white-space: nowrap;\n//     }\n//     .avatar {\n//       width: 40px;\n//       height: 40px;\n//       border-radius: 50%;\n//       background:#4e54c8;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//       color: white;\n//       font-weight: 600;\n//       font-size: 1.1rem;\n//       flex-shrink: 0;\n//     }\n//     .status-dot {\n//         height: 10px;\n//         width: 10px;\n//         border-radius: 50%;\n//         display: inline-block;\n//         margin-right: 5px;\n//     }\n//     .status-active {\n//         background-color: #48bb78;\n//     }\n//     .status-inactive {\n//         background-color: #e53e3e;\n//     }\n//     .role-badge {\n//       padding: 6px 12px;\n//       border-radius: 20px;\n//       font-size: 0.85rem;\n//       font-weight: 500;\n//       white-space: nowrap;\n//     }\n//     .role-admin {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .role-manager {\n//       background: #feebc8;\n//       color: #d69e2e;\n//     }\n//     .role-developer, .role-engineering {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .role-reporter {\n//       background: #e9d8fd;\n//       color: #6b46c1;\n//     }\n//     .role-sales {\n//         background: #bee3f8;\n//         color: #2c5282;\n//     }\n//     .role-hr {\n//         background: #fff0f5;\n//         color: #d53f8c;\n//     }\n//     .role-marketing {\n//         background: #faf089;\n//         color: #744210;\n//     }\n//     .action-buttons {\n//       display: flex;\n//       gap: 8px;\n//       flex-wrap: wrap;\n//     }\n//     .btn-edit,\n//     .btn-delete,\n//     .btn-success,\n//     .btn-cancel {\n//       padding: 8px;\n//       border: none;\n//       border-radius: 8px;\n//       cursor: pointer;\n//       transition: all 0.2s ease;\n//       display: flex;\n//       align-items: center;\n//       justify-content: center;\n//     }\n//     .btn-edit {\n//       background: #e6fffa;\n//       color: #234e52;\n//     }\n//     .btn-edit:hover {\n//       background: #b2f5ea;\n//     }\n//     .btn-delete {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-delete:hover {\n//       background: #feb2b2;\n//     }\n//     .btn-success {\n//       background: #c6f6d5;\n//       color: #276749;\n//     }\n//     .btn-success:hover {\n//       background: #9ae6b4;\n//     }\n//     .btn-cancel {\n//       background: #fed7d7;\n//       color: #c53030;\n//     }\n//     .btn-cancel:hover {\n//       background: #feb2b2;\n//     }\n//     .edit-input,\n//     .edit-select {\n//       padding: 8px 12px;\n//       border: 2px solid #e2e8f0;\n//       border-radius: 6px;\n//       width: 100%;\n//       font-size: 0.9rem;\n//       box-sizing: border-box;\n//     }\n//     .edit-input:focus,\n//     .edit-select:focus {\n//       outline: none;\n//       border-color: #667eea;\n//     }\n//     .empty-state {\n//       text-align: center;\n//       padding: 40px;\n//       color: #a0aec0;\n//       font-style: italic;\n//     }\n//     @media (max-width: 1024px) {\n//       .form-grid-expanded {\n//         grid-template-columns: 1fr;\n//       }\n//       .users-grid {\n//         grid-template-columns: 1fr;\n//       }\n//     }\n//     @media (max-width: 768px) {\n//       .users-container {\n//         padding: 10px;\n//       }\n//       .users-title {\n//         font-size: 2rem;\n//       }\n//       .users-form-card,\n//       .users-list-card {\n//         padding: 20px;\n//       }\n//       .card-header {\n//         flex-direction: column;\n//         align-items: stretch;\n//       }\n//       .search-container {\n//         min-width: auto;\n//       }\n//       .modern-table {\n//         font-size: 0.85rem;\n//       }\n//       .modern-table th,\n//       .modern-table td {\n//         padding: 8px 6px;\n//       }\n//       .action-buttons {\n//         flex-direction: row;\n//       }\n//       .user-info {\n//         gap: 6px;\n//       }\n//     }\n//     @media (max-width: 480px) {\n//       .users-title {\n//         font-size: 1.75rem;\n//       }\n//       .card-title {\n//         font-size: 1.25rem;\n//       }\n//       .user-info {\n//         flex-direction: column;\n//         text-align: center;\n//         align-items: flex-start;\n//       }\n//       .avatar {\n//         width: 32px;\n//         height: 32px;\n//         font-size: 1rem;\n//       }\n//     }\n\n//   `}</style>\n//     </div>\n//   );\n// }\n\n// for update 21/10\n\n// import React, { useEffect, useState } from \"react\";\n// import { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import { FiUserPlus } from \"react-icons/fi\";\n\n// const ROLES_KEY = \"user-management-roles\";\n// const DEPARTMENTS_KEY = \"user-management-departments\";\n\n// const defaultRoles = [\n//   \"Associate Developer\",\n//   \"Senior Associate Developer\",\n//   \"HR\",\n//   \"Administration\"\n// ];\n// const defaultDepartments = [\n//   \"Frontend\",\n//   \"Backend\",\n//   \"Middleware\",\n//   \"AIML\",\n//   \"DevOps\",\n//   \"Testing\",\n//   \"FlowTrack\",\n//   \"NetWork\",\n//   \"Hr\"\n// ];\n\n// function getStored(key, fallback) {\n//   const saved = localStorage.getItem(key);\n//   try {\n//     return saved ? JSON.parse(saved) : fallback;\n//   } catch {\n//     return fallback;\n//   }\n// }\n\n// function setStored(key, value) {\n//   localStorage.setItem(key, JSON.stringify(value));\n// }\n\n// // Inline style objects\n// const styles = {\n//   usersContainer: {\n//     minHeight: \"100vh\",\n//     background: \"#D8F7FA\",\n//     padding: 20,\n//     fontFamily: \"'Inter', Arial, sans-serif\"\n//   },\n//   usersHeader: {\n//     textAlign: \"center\",\n//     marginBottom: 40,\n//     color: \"#2d3748\"\n//   },\n//   usersTitle: {\n//     fontSize: \"2.5rem\",\n//     fontWeight: 700,\n//     marginBottom: 8\n//   },\n//   usersSubtitle: {\n//     fontSize: \"1.1rem\",\n//     opacity: 0.8,\n//     color: \"#4a5568\"\n//   },\n//   errorMessage: {\n//     color: \"#e53e3e\",\n//     background: \"#fed7d7\",\n//     padding: \"8px 15px\",\n//     borderRadius: 8,\n//     marginTop: 15,\n//     display: \"inline-block\",\n//     fontWeight: 500\n//   },\n//   usersGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr\",\n//     gap: 30,\n//     maxWidth: 900,\n//     margin: \"0 auto\"\n//   },\n//   glassmorphism: {\n//     background: \"rgba(255,255,255,0.95)\",\n//     backdropFilter: \"blur(10px)\",\n//     borderRadius: 20,\n//     border: \"1px solid rgba(255,255,255,0.2)\",\n//     boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n//   },\n//   formCard: {\n//     padding: 30\n//   },\n//   cardHeader: {\n//     display: \"flex\",\n//     justifyContent: \"space-between\",\n//     alignItems: \"center\",\n//     marginBottom: 30,\n//     flexWrap: \"wrap\",\n//     gap: 15\n//   },\n//   cardTitle: {\n//     fontSize: \"1.5rem\",\n//     fontWeight: 600,\n//     color: \"#2d3748\",\n//     display: \"flex\",\n//     alignItems: \"center\"\n//   },\n//   iconSpacing: {\n//     marginRight: 10\n//   },\n//   formGrid: {\n//     display: \"grid\",\n//     gridTemplateColumns: \"1fr 1fr\",\n//     gap: 20,\n//     marginBottom: 30\n//   },\n//   inputGroup: {\n//     display: \"flex\",\n//     flexDirection: \"column\"\n//   },\n//   inputLabel: {\n//     fontWeight: 500,\n//     marginBottom: 8,\n//     color: \"#4a5568\"\n//   },\n//   checkboxGroup: {},\n//   checkboxLabel: {\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     fontWeight: 400,\n//     color: \"#4a5568\",\n//     cursor: \"pointer\",\n//     padding: 10,\n//     borderRadius: 8\n//   },\n//   checkbox: {\n//     marginRight: 10,\n//     width: 18,\n//     height: 18,\n//     accentColor: \"#667eea\"\n//   },\n//   modernInput: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   modernSelect: {\n//     padding: \"12px 16px\",\n//     border: \"2px solid #e2e8f0\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     background: \"#D8F7FA\",\n//     width: \"100%\",\n//     boxSizing: \"border-box\",\n//     transition: \"all 0.3s\"\n//   },\n//   createBtn: {\n//     gridColumn: \"1 / -1\",\n//     width: \"100%\",\n//     padding: 14,\n//     background: \"#4e54c8\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: 10,\n//     fontSize: \"1rem\",\n//     fontWeight: 600,\n//     cursor: \"pointer\",\n//     transition: \"transform 0.2s\",\n//     display: \"flex\",\n//     alignItems: \"center\",\n//     justifyContent: \"center\"\n//   }\n// };\n\n// export default function Users() {\n//   const defaultNewUser = {\n//     firstName: \"\",\n//     email: \"\",\n//     role: defaultRoles[0],\n//     department: defaultDepartments[0],\n//     active: true,\n//     mobileNumber: \"\",\n//     passwordResetNeeded: false,\n//     profileFile: null,\n//   };\n\n//   const [users, setUsers] = useState([]);\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n//   const [editingId, setEditingId] = useState(null);\n//   const [editForm, setEditForm] = useState({});\n//   const [error, setError] = useState(null);\n//   const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\n//   const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const data = await listUsers();\n//         setUsers(data);\n//       } catch (err) {\n//         setError(\"Failed to load users\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   useEffect(() => {\n//     setStored(ROLES_KEY, roles);\n//   }, [roles]);\n//   useEffect(() => {\n//     setStored(DEPARTMENTS_KEY, departments);\n//   }, [departments]);\n\n//   const handleNewUserChange = (e) => {\n//     const { name, value, type, checked, files } = e.target;\n//     setNewUserForm((prev) => ({\n//       ...prev,\n//       [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\n//     }));\n//   };\n\n//   const create = async () => {\n//     if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n//       setError(\"First Name and Email are required.\");\n//       return;\n//     }\n//     try {\n//       const newUser = {\n//         id: uuidv4(),\n//         ...newUserForm,\n//         name: newUserForm.firstName.trim(),\n//         profileFile: newUserForm.profileFile\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\n//           : null,\n//       };\n//       await addUser(newUser);\n//       const updatedUsers = await listUsers();\n//       setUsers(updatedUsers);\n//       setNewUserForm(defaultNewUser);\n//       setError(null);\n//     } catch (err) {\n//       setError(\"Failed to add user\");\n//     }\n//   };\n\n//   // Responsive fix for single-column on mobile\n//   const formGridStyle = window.innerWidth <= 1024\n//     ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\n//     : styles.formGrid;\n\n//   return (\n//     <div style={styles.usersContainer}>\n//       <div style={styles.usersHeader}>\n//         <h1 style={styles.usersTitle}>User Management</h1>\n//         <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\n//       </div>\n//       <div style={styles.usersGrid}>\n//         <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\n//           <div style={styles.cardHeader}>\n//             <h2 style={styles.cardTitle}>\n//               <span style={styles.iconSpacing}><FiUserPlus /></span>\n//              Profile\n//             </h2>\n//           </div>\n//           <div style={formGridStyle}>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"firstName\"\n//                 name=\"firstName\"\n//                 type=\"text\"\n//                 value={newUserForm.firstName}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"email\"\n//                 name=\"email\"\n//                 type=\"email\"\n//                 value={newUserForm.email}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"role\"\n//                 name=\"role\"\n//                 value={newUserForm.role}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {roles.map((r) => (\n//                   <option key={r} value={r}>{r}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\n//               <select\n//                 style={styles.modernSelect}\n//                 id=\"department\"\n//                 name=\"department\"\n//                 value={newUserForm.department}\n//                 onChange={handleNewUserChange}\n//               >\n//                 {departments.map((d) => (\n//                   <option key={d} value={d}>{d}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div style={styles.inputGroup}>\n//               <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\n//               <input\n//                 style={styles.modernInput}\n//                 id=\"mobileNumber\"\n//                 name=\"mobileNumber\"\n//                 type=\"tel\"\n//                 value={newUserForm.mobileNumber}\n//                 onChange={handleNewUserChange}\n//               />\n//             </div>\n//             <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\n//               <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\n//                 <input\n//                   id=\"passwordResetNeeded\"\n//                   name=\"passwordResetNeeded\"\n//                   type=\"checkbox\"\n//                   checked={newUserForm.passwordResetNeeded}\n//                   onChange={handleNewUserChange}\n//                   style={styles.checkbox}\n//                 />\n//                 Password Reset Needed\n//               </label>\n//             </div>\n//           </div>\n//           {error && (\n//             <p style={styles.errorMessage}>{error}</p>\n//           )}\n\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// \n\nimport React, { useEffect, useState } from \"react\";\nimport { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FiUserPlus } from \"react-icons/fi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROLES_KEY = \"user-management-roles\";\nconst DEPARTMENTS_KEY = \"user-management-departments\";\nconst defaultRoles = [\"Associate Developer\", \"Senior Associate Developer\", \"HR\", \"Administration\"];\nconst defaultDepartments = [\"Frontend\", \"Backend\", \"Middleware\", \"AIML\", \"DevOps\", \"Testing\", \"FlowTrack\", \"NetWork\", \"Hr\"];\nfunction getStored(key, fallback) {\n  const saved = localStorage.getItem(key);\n  try {\n    return saved ? JSON.parse(saved) : fallback;\n  } catch {\n    return fallback;\n  }\n}\nfunction setStored(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\n// Inline style objects\nconst styles = {\n  usersContainer: {\n    minHeight: \"100vh\",\n    background: \"#D8F7FA\",\n    padding: 20,\n    fontFamily: \"'Inter', Arial, sans-serif\"\n  },\n  usersHeader: {\n    textAlign: \"center\",\n    marginBottom: 40,\n    color: \"#2d3748\"\n  },\n  usersTitle: {\n    fontSize: \"2.5rem\",\n    fontWeight: 700,\n    marginBottom: 8\n  },\n  usersSubtitle: {\n    fontSize: \"1.1rem\",\n    opacity: 0.8,\n    color: \"#4a5568\"\n  },\n  errorMessage: {\n    color: \"#e53e3e\",\n    background: \"#fed7d7\",\n    padding: \"8px 15px\",\n    borderRadius: 8,\n    marginTop: 15,\n    display: \"inline-block\",\n    fontWeight: 500\n  },\n  usersGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr\",\n    gap: 30,\n    maxWidth: 900,\n    margin: \"0 auto\"\n  },\n  glassmorphism: {\n    background: \"rgba(255,255,255,0.95)\",\n    backdropFilter: \"blur(10px)\",\n    borderRadius: 20,\n    border: \"1px solid rgba(255,255,255,0.2)\",\n    boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\n  },\n  formCard: {\n    padding: 30\n  },\n  cardHeader: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 30,\n    flexWrap: \"wrap\",\n    gap: 15\n  },\n  cardTitle: {\n    fontSize: \"1.5rem\",\n    fontWeight: 600,\n    color: \"#2d3748\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  iconSpacing: {\n    marginRight: 10\n  },\n  formGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr\",\n    gap: 20,\n    marginBottom: 30\n  },\n  inputGroup: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  inputLabel: {\n    fontWeight: 500,\n    marginBottom: 8,\n    color: \"#4a5568\"\n  },\n  checkboxGroup: {},\n  checkboxLabel: {\n    display: \"flex\",\n    alignItems: \"center\",\n    fontWeight: 400,\n    color: \"#4a5568\",\n    cursor: \"pointer\",\n    padding: 10,\n    borderRadius: 8\n  },\n  checkbox: {\n    marginRight: 10,\n    width: 18,\n    height: 18,\n    accentColor: \"#667eea\"\n  },\n  modernInput: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  modernSelect: {\n    padding: \"12px 16px\",\n    border: \"2px solid #e2e8f0\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    background: \"#D8F7FA\",\n    width: \"100%\",\n    boxSizing: \"border-box\",\n    transition: \"all 0.3s\"\n  },\n  createBtn: {\n    gridColumn: \"1 / -1\",\n    width: \"100%\",\n    padding: 14,\n    background: \"#4e54c8\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 10,\n    fontSize: \"1rem\",\n    fontWeight: 600,\n    cursor: \"pointer\",\n    transition: \"transform 0.2s\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  editBtn: {\n    background: \"#38a169\",\n    color: \"white\",\n    border: \"none\",\n    borderRadius: 10,\n    padding: \"8px 16px\",\n    cursor: \"pointer\",\n    fontWeight: 600,\n    transition: \"background 0.3s\",\n    marginTop: 10,\n    width: \"fit-content\"\n  }\n};\nexport default function Users() {\n  _s();\n  const defaultNewUser = {\n    firstName: \"\",\n    email: \"\",\n    role: defaultRoles[0],\n    department: defaultDepartments[0],\n    active: true,\n    mobileNumber: \"\",\n    passwordResetNeeded: false,\n    profileFile: null\n  };\n  const [users, setUsers] = useState([]);\n  const [newUserForm, setNewUserForm] = useState(defaultNewUser);\n  const [editingId, setEditingId] = useState(null);\n  const [editForm, setEditForm] = useState({});\n  const [error, setError] = useState(null);\n  const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\n  const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await listUsers();\n        setUsers(data);\n      } catch (err) {\n        setError(\"Failed to load users\");\n      }\n    };\n    fetchUsers();\n  }, []);\n  useEffect(() => {\n    setStored(ROLES_KEY, roles);\n  }, [roles]);\n  useEffect(() => {\n    setStored(DEPARTMENTS_KEY, departments);\n  }, [departments]);\n  const handleNewUserChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n      files\n    } = e.target;\n    setNewUserForm(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value\n    }));\n  };\n  const handleEditChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n      files\n    } = e.target;\n    setEditForm(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value\n    }));\n  };\n  const create = async () => {\n    if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\n      setError(\"First Name and Email are required.\");\n      return;\n    }\n    try {\n      const newUser = {\n        id: uuidv4(),\n        ...newUserForm,\n        name: newUserForm.firstName.trim(),\n        profileFile: newUserForm.profileFile ? {\n          name: newUserForm.profileFile.name,\n          size: newUserForm.profileFile.size\n        } : null\n      };\n      await addUser(newUser);\n      const updatedUsers = await listUsers();\n      setUsers(updatedUsers);\n      setNewUserForm(defaultNewUser);\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to add user\");\n    }\n  };\n  const startEditing = user => {\n    setEditingId(user.id);\n    setEditForm({\n      firstName: user.firstName || \"\",\n      email: user.email || \"\",\n      role: user.role || roles[0],\n      department: user.department || departments[0],\n      mobileNumber: user.mobileNumber || \"\",\n      passwordResetNeeded: user.passwordResetNeeded || false,\n      profileFile: user.profileFile || null\n    });\n    setError(null);\n  };\n  const saveEdit = async () => {\n    if (!editForm.firstName.trim() || !editForm.email.trim()) {\n      setError(\"First Name and Email are required.\");\n      return;\n    }\n    try {\n      await updateUser(editingId, {\n        ...editForm,\n        name: editForm.firstName.trim(),\n        profileFile: editForm.profileFile ? {\n          name: editForm.profileFile.name,\n          size: editForm.profileFile.size\n        } : null\n      });\n      const updatedUsers = await listUsers();\n      setUsers(updatedUsers);\n      setEditingId(null);\n      setEditForm({});\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to update user\");\n    }\n  };\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditForm({});\n    setError(null);\n  };\n\n  // Responsive fix for single-column on mobile\n  const formGridStyle = window.innerWidth <= 1024 ? {\n    ...styles.formGrid,\n    gridTemplateColumns: \"1fr\"\n  } : styles.formGrid;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.usersContainer,\n    children: [\"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.usersHeader,\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: styles.usersTitle,\n        children: \"User Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1744,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.usersSubtitle,\n        children: \"Manage your users, roles, and departments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1745,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1743,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.usersGrid,\n      children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.glassmorphism,\n          ...styles.formCard\n        },\n        children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.cardHeader,\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: styles.cardTitle,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.iconSpacing,\n              children: /*#__PURE__*/_jsxDEV(FiUserPlus, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1751,\n                columnNumber: 48\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1751,\n              columnNumber: 15\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0Profile \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1750,\n            columnNumber: 13\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1749,\n          columnNumber: 11\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", !editingId ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: formGridStyle,\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"firstName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1758,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"firstName\",\n              name: \"firstName\",\n              type: \"text\",\n              value: newUserForm.firstName,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1759,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1757,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1769,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"email\",\n              name: \"email\",\n              type: \"email\",\n              value: newUserForm.email,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1770,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1768,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"role\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1780,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"role\",\n              name: \"role\",\n              value: newUserForm.role,\n              onChange: handleNewUserChange,\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", roles.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: r,\n                children: r\n              }, r, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1789,\n                columnNumber: 21\n              }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1781,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1779,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"department\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1794,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"department\",\n              name: \"department\",\n              value: newUserForm.department,\n              onChange: handleNewUserChange,\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", departments.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1803,\n                columnNumber: 21\n              }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1795,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1793,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"mobileNumber\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1808,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"mobileNumber\",\n              name: \"mobileNumber\",\n              type: \"tel\",\n              value: newUserForm.mobileNumber,\n              onChange: handleNewUserChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1809,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1807,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.inputGroup,\n              ...styles.checkboxGroup\n            },\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.checkboxLabel,\n              htmlFor: \"passwordResetNeeded\",\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"passwordResetNeeded\",\n                name: \"passwordResetNeeded\",\n                type: \"checkbox\",\n                checked: newUserForm.passwordResetNeeded,\n                onChange: handleNewUserChange,\n                style: styles.checkbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1820,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Password Reset Needed \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1819,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1818,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: create,\n            style: styles.createBtn,\n            children: \"Create User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1831,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1756,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: formGridStyle,\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"firstName-edit\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1836,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"firstName-edit\",\n              name: \"firstName\",\n              type: \"text\",\n              value: editForm.firstName,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1837,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1835,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"email-edit\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1847,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"email-edit\",\n              name: \"email\",\n              type: \"email\",\n              value: editForm.email,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1848,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1846,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"role-edit\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1858,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"role-edit\",\n              name: \"role\",\n              value: editForm.role,\n              onChange: handleEditChange,\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", roles.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: r,\n                children: r\n              }, r, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1867,\n                columnNumber: 21\n              }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1859,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1857,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"department-edit\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1872,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"select\", {\n              style: styles.modernSelect,\n              id: \"department-edit\",\n              name: \"department\",\n              value: editForm.department,\n              onChange: handleEditChange,\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", departments.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: d,\n                children: d\n              }, d, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1881,\n                columnNumber: 21\n              }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1873,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1871,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.inputGroup,\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.inputLabel,\n              htmlFor: \"mobileNumber-edit\",\n              children: \"Mobile Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1886,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.modernInput,\n              id: \"mobileNumber-edit\",\n              name: \"mobileNumber\",\n              type: \"tel\",\n              value: editForm.mobileNumber,\n              onChange: handleEditChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1887,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1885,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.inputGroup,\n              ...styles.checkboxGroup\n            },\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"label\", {\n              style: styles.checkboxLabel,\n              htmlFor: \"passwordResetNeeded-edit\",\n              children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"passwordResetNeeded-edit\",\n                name: \"passwordResetNeeded\",\n                type: \"checkbox\",\n                checked: editForm.passwordResetNeeded,\n                onChange: handleEditChange,\n                style: styles.checkbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1898,\n                columnNumber: 19\n              }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Password Reset Needed \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1897,\n              columnNumber: 17\n            }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1896,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveEdit,\n            style: styles.createBtn,\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1909,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: cancelEdit,\n            style: {\n              ...styles.editBtn,\n              background: \"#e53e3e\",\n              marginLeft: 10\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1910,\n            columnNumber: 15\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1834,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: styles.errorMessage,\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1914,\n          columnNumber: 13\n        }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1748,\n        columnNumber: 9\n      }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \", \"\\xA0 \\xA0 \\xA0 \\xA0 \", users.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxWidth: 900,\n          margin: \"20px auto\"\n        },\n        children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.glassmorphism,\n            padding: 20,\n            marginBottom: 15,\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: user.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1934,\n              columnNumber: 19\n            }, this), \" - \", user.email, \" - \", user.role, \" - \", user.department, \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1933,\n            columnNumber: 17\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n            style: styles.editBtn,\n            onClick: () => startEditing(user),\n            children: \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 Edit \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1936,\n            columnNumber: 17\n          }, this), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1922,\n          columnNumber: 15\n        }, this)), \"\\xA0 \\xA0 \\xA0 \\xA0 \\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1920,\n        columnNumber: 11\n      }, this), \"\\xA0 \\xA0 \\xA0 \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1747,\n      columnNumber: 7\n    }, this), \"\\xA0 \\xA0 \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1742,\n    columnNumber: 5\n  }, this);\n}\n_s(Users, \"4fiC3jA9o6L0WXFXqrMbnypTJtw=\");\n_c = Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","listUsers","addUser","updateUser","deleteUser","v4","uuidv4","FiUserPlus","jsxDEV","_jsxDEV","ROLES_KEY","DEPARTMENTS_KEY","defaultRoles","defaultDepartments","getStored","key","fallback","saved","localStorage","getItem","JSON","parse","setStored","value","setItem","stringify","styles","usersContainer","minHeight","background","padding","fontFamily","usersHeader","textAlign","marginBottom","color","usersTitle","fontSize","fontWeight","usersSubtitle","opacity","errorMessage","borderRadius","marginTop","display","usersGrid","gridTemplateColumns","gap","maxWidth","margin","glassmorphism","backdropFilter","border","boxShadow","formCard","cardHeader","justifyContent","alignItems","flexWrap","cardTitle","iconSpacing","marginRight","formGrid","inputGroup","flexDirection","inputLabel","checkboxGroup","checkboxLabel","cursor","checkbox","width","height","accentColor","modernInput","boxSizing","transition","modernSelect","createBtn","gridColumn","editBtn","Users","_s","defaultNewUser","firstName","email","role","department","active","mobileNumber","passwordResetNeeded","profileFile","users","setUsers","newUserForm","setNewUserForm","editingId","setEditingId","editForm","setEditForm","error","setError","roles","setRoles","departments","setDepartments","fetchUsers","data","err","handleNewUserChange","e","name","type","checked","files","target","prev","handleEditChange","create","trim","newUser","id","size","updatedUsers","startEditing","user","saveEdit","cancelEdit","formGridStyle","window","innerWidth","style","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","map","r","d","onClick","marginLeft","length","_c","$RefreshReg$"],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/components/users/Users.js"],"sourcesContent":["\r\n// full code before changes\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { listUsers, addUser, updateUser, deleteUser } from '../../services/mockApi';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import {\r\n//   FiUserPlus, FiEdit2, FiTrash2, FiCheck, FiX, FiSearch, FiUpload,\r\n//   FiPlus, FiMinus\r\n// } from 'react-icons/fi';\r\n\r\n// const ROLES_KEY = 'user-management-roles';\r\n// const DEPARTMENTS_KEY = 'user-management-departments';\r\n\r\n// const defaultRoles = ['Assosiate Developer', 'Senior Assosiate Developer', 'HR', 'Administration'];\r\n// const defaultDepartments = ['Frontend', 'Backend', 'Middleware', 'AI/ML','DevOps','Testing','FlowTrack','NetWork','Hr'];\r\n\r\n// function getStored(key, fallback) {\r\n//   const saved = localStorage.getItem(key);\r\n//   try {\r\n//     return saved ? JSON.parse(saved) : fallback;\r\n//   } catch {\r\n//     return fallback;\r\n//   }\r\n// }\r\n// function setStored(key, value) {\r\n//   localStorage.setItem(key, JSON.stringify(value));\r\n// }\r\n\r\n// export default function Users() {\r\n//   const defaultNewUser = {\r\n//     firstName: '',\r\n//     lastName: '',\r\n//     email: '',\r\n//     role: 'Developer',\r\n//     department: 'Engineering',\r\n//     active: true,\r\n//     mobileNumber: '',\r\n//     passwordResetNeeded: false,\r\n//     profileFile: null,\r\n//   };\r\n\r\n//   const [users, setUsers] = useState([]);\r\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({});\r\n//   const [searchTerm, setSearchTerm] = useState('');\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Roles & Departments state\r\n//   const [roles, setRoles] = useState(() => getStored(ROLES_KEY, defaultRoles));\r\n//   const [departments, setDepartments] = useState(() => getStored(DEPARTMENTS_KEY, defaultDepartments));\r\n\r\n//   // Modal state\r\n//   const [showRoleModal, setShowRoleModal] = useState(false);\r\n//   const [showDepartmentModal, setShowDepartmentModal] = useState(false);\r\n//   const [roleInput, setRoleInput] = useState('');\r\n//   const [departmentInput, setDepartmentInput] = useState('');\r\n//   const [roleToDelete, setRoleToDelete] = useState('');\r\n//   const [departmentToDelete, setDepartmentToDelete] = useState('');\r\n\r\n//   // Load users on mount\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const data = await listUsers();\r\n//         setUsers(data);\r\n//       } catch (err) {\r\n//         console.error('Failed to load users:', err);\r\n//         setError('Failed to load users');\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   // Save roles and departments to localStorage if changed\r\n//   useEffect(() => { setStored(ROLES_KEY, roles); }, [roles]);\r\n//   useEffect(() => { setStored(DEPARTMENTS_KEY, departments); }, [departments]);\r\n\r\n//   // Handlers\r\n//   const handleNewUserChange = (e) => {\r\n//     const { name, value, type, checked, files } = e.target;\r\n//     setNewUserForm(prev => ({\r\n//       ...prev,\r\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\r\n//     }));\r\n//   };\r\n\r\n//   const handleEditChange = (e) => {\r\n//     const { name, value, type, checked, files } = e.target;\r\n//     setEditForm(prev => ({\r\n//       ...prev,\r\n//       [name]: type === 'checkbox' ? checked : (type === 'file' ? files[0] : value),\r\n//     }));\r\n//   };\r\n\r\n//   const create = async () => {\r\n//     if (!newUserForm.firstName.trim() || !newUserForm.lastName.trim() || !newUserForm.email.trim()) {\r\n//       setError('First Name, Email are required.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const newUser = {\r\n//         id: uuidv4(),\r\n//         ...newUserForm,\r\n//         name: `${newUserForm.firstName.trim()} ${newUserForm.lastName.trim()}`,\r\n//         profileFile: newUserForm.profileFile\r\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\r\n//           : null\r\n//       };\r\n//       await addUser(newUser);\r\n//       const updatedUsers = await listUsers();\r\n//       setUsers(updatedUsers);\r\n//       setNewUserForm(defaultNewUser);\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to add user:', err);\r\n//       setError('Failed to add user');\r\n//     }\r\n//   };\r\n\r\n//   const startEdit = (u) => {\r\n//     setEditingId(u.id);\r\n//     setEditForm({ ...u });\r\n//     setError(null);\r\n//   };\r\n\r\n//   const cancelEdit = () => {\r\n//     setEditingId(null);\r\n//     setEditForm({});\r\n//     setError(null);\r\n//   };\r\n\r\n//   const saveEdit = async (id) => {\r\n//     if (!editForm.firstName.trim() || !editForm.lastName.trim() || !editForm.email.trim()) {\r\n//       setError('Full Name, and Email cannot be empty.');\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const updatedUser = {\r\n//         ...editForm,\r\n//         name: `${editForm.firstName.trim()} ${editForm.lastName.trim()}`,\r\n//         profileFile: editForm.profileFile && editForm.profileFile.name\r\n//           ? { name: editForm.profileFile.name, size: editForm.profileFile.size }\r\n//           : editForm.profileFile\r\n//       };\r\n//       await updateUser(updatedUser);\r\n//       const updatedUsers = await listUsers();\r\n//       setUsers(updatedUsers);\r\n//       cancelEdit();\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to update user:', err);\r\n//       setError('User not found or failed to update');\r\n//     }\r\n//   };\r\n\r\n//   const remove = async (id) => {\r\n//     try {\r\n//       await deleteUser(id);\r\n//       const updatedUsers = await listUsers();\r\n//       setUsers(updatedUsers);\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       console.error('Failed to delete user:', err);\r\n//       setError('User not found or failed to delete');\r\n//     }\r\n//   };\r\n\r\n//   const filteredUsers = users.filter(user => {\r\n//     const searchLower = searchTerm.toLowerCase();\r\n//     return (\r\n//       (user.name && user.name.toLowerCase().includes(searchLower)) ||\r\n//       (user.firstName && user.firstName.toLowerCase().includes(searchLower)) ||\r\n//       (user.lastName && user.lastName.toLowerCase().includes(searchLower)) ||\r\n//       (user.email && user.email.toLowerCase().includes(searchLower)) ||\r\n//       (user.role && user.role.toLowerCase().includes(searchLower)) ||\r\n//       (user.department && user.department.toLowerCase().includes(searchLower))\r\n//     );\r\n//   });\r\n\r\n//   const getRoleColor = (roleOrDepartment) => {\r\n//     const colors = {\r\n//       'admin': 'role-admin',\r\n//       'manager': 'role-manager',\r\n//       'developer': 'role-developer',\r\n//       'reporter': 'role-reporter',\r\n//       'engineering': 'role-developer',\r\n//       'sales': 'role-sales',\r\n//       'hr': 'role-hr',\r\n//       'marketing': 'role-marketing',\r\n\r\n//     };\r\n//     return colors[roleOrDepartment.toLowerCase()] || '';\r\n//   };\r\n\r\n//   // ---- Modal handlers ----\r\n//   // Role modals\r\n//   const openRoleModal = () => { setShowRoleModal(true); setRoleInput(''); setRoleToDelete(''); };\r\n//   const closeRoleModal = () => { setShowRoleModal(false); setRoleInput(''); setRoleToDelete(''); };\r\n\r\n//   const addRole = () => {\r\n//     const v = roleInput.trim();\r\n//     if (v && !roles.includes(v)) {\r\n//       setRoles([...roles, v]);\r\n//       setRoleInput('');\r\n//     }\r\n//   };\r\n//   const deleteRole = (r) => {\r\n//     setRoles(roles.filter(role => role !== r));\r\n//     // Optionally, update forms if current value is deleted\r\n//     if (newUserForm.role === r) setNewUserForm(prev => ({ ...prev, role: roles[0] || '' }));\r\n//     if (editForm.role === r) setEditForm(prev => ({ ...prev, role: roles[0] || '' }));\r\n//     setRoleToDelete('');\r\n//   };\r\n\r\n//   // Department modals\r\n//   const openDepartmentModal = () => { setShowDepartmentModal(true); setDepartmentInput(''); setDepartmentToDelete(''); };\r\n//   const closeDepartmentModal = () => { setShowDepartmentModal(false); setDepartmentInput(''); setDepartmentToDelete(''); };\r\n\r\n//   const addDepartment = () => {\r\n//     const v = departmentInput.trim();\r\n//     if (v && !departments.includes(v)) {\r\n//       setDepartments([...departments, v]);\r\n//       setDepartmentInput('');\r\n//     }\r\n//   };\r\n//   const deleteDepartment = (d) => {\r\n//     setDepartments(departments.filter(dep => dep !== d));\r\n//     if (newUserForm.department === d)\r\n//       setNewUserForm(prev => ({ ...prev, department: departments[0] || '' }));\r\n//     if (editForm.department === d)\r\n//       setEditForm(prev => ({ ...prev, department: departments[0] || '' }));\r\n//     setDepartmentToDelete('');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"users-container\">\r\n//       <style jsx global>{`\r\n//         body { background: #D8F7FA; min-height: 100vh; }\r\n//       `}</style>\r\n//       {/* Header */}\r\n//       <div className=\"users-header\">\r\n//         <h1 className=\"users-title\">User Management System 🧑‍💼</h1>\r\n//         <p className=\"users-subtitle\">Manage your team members, roles, and administrative settings.</p>\r\n//         {error && <p className=\"error-message\">{error}</p>}\r\n//       </div>\r\n//       <div className=\"users-grid\">\r\n//         {/* ---- FORM SECTION ---- */}\r\n//         <div className=\"users-form-card glassmorphism\" aria-labelledby=\"users-form-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-form-title\" className=\"card-title\">\r\n//               <FiUserPlus className=\"icon-spacing\" /> Add New User\r\n//             </h2>\r\n//           </div>\r\n//           <div className=\"form-grid-expanded\">\r\n//             {/* Standard fields */}\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Full Name *</label>\r\n//               <input className=\"modern-input\" name=\"firstName\"\r\n//                 value={newUserForm.firstName}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"First Name\"\r\n//               />\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Email Address *</label>\r\n//               <input className=\"modern-input\" name=\"email\"\r\n//                 value={newUserForm.email}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"Email Address\"\r\n//                 type=\"email\"\r\n//               />\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Mobile Number</label>\r\n//               <input className=\"modern-input\" name=\"mobileNumber\"\r\n//                 value={newUserForm.mobileNumber}\r\n//                 onChange={handleNewUserChange}\r\n//                 placeholder=\"Mobile Number\"\r\n//                 type=\"tel\"\r\n//               />\r\n//             </div>\r\n//             {/* Role dropdown with add/delete buttons */}\r\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\r\n//               <label className=\"input-label\">Role\r\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\r\n//                   onClick={openRoleModal} title=\"Edit roles\" />\r\n//               </label>\r\n//               <select className=\"modern-select\" name=\"role\"\r\n//                 value={newUserForm.role}\r\n//                 onChange={handleNewUserChange}>\r\n//                 {roles.map(r => (\r\n//                   <option key={r}>{r}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             {/* Department dropdown with add/delete buttons */}\r\n//             <div className=\"input-group\" style={{ position: 'relative' }}>\r\n//               <label className=\"input-label\">Department\r\n//                 <FiPlus style={{ cursor: 'pointer', marginLeft: 8, color: '#667eea' }}\r\n//                   onClick={openDepartmentModal} title=\"Edit departments\" />\r\n//               </label>\r\n//               <select className=\"modern-select\" name=\"department\"\r\n//                 value={newUserForm.department}\r\n//                 onChange={handleNewUserChange}>\r\n//                 {departments.map(d => (\r\n//                   <option key={d}>{d}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n\r\n//             <div className=\"input-group\">\r\n//               <label className=\"input-label\">Date of Birth</label>\r\n//               <input\r\n//                 className=\"modern-input\"\r\n//                 name=\"dob\"\r\n//                 type=\"date\"\r\n//                 value={newUserForm.dob}\r\n//                 onChange={handleNewUserChange}\r\n//               />\r\n//             </div>\r\n\r\n//             {/* <div className=\"input-group checkbox-group\">\r\n//               <label className=\"input-label\">User Status</label>\r\n//               <label className=\"checkbox-label\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   name=\"active\"\r\n//                   checked={newUserForm.active}\r\n//                   onChange={handleNewUserChange}\r\n//                 />\r\n//                 <span className=\"checkbox-text\">{newUserForm.active ? 'Active' : 'Inactive'}</span>\r\n//               </label>\r\n//             </div> */}\r\n//             <div className=\"input-group checkbox-group\">\r\n//               <label className=\"input-label\">Password Reset</label>\r\n//               <label className=\"checkbox-label\">\r\n//                 <input\r\n//                   type=\"checkbox\"\r\n//                   name=\"passwordResetNeeded\"\r\n//                   checked={newUserForm.passwordResetNeeded}\r\n//                   onChange={handleNewUserChange}\r\n//                 />\r\n//                 <span className=\"checkbox-text\">Reset on next login</span>\r\n//               </label>\r\n//             </div>\r\n//           </div>\r\n//           {/* <button className=\"create-btn\" onClick={create}>\r\n//             <FiUserPlus className=\"btn-icon\" />\r\n//             Create User\r\n//           </button> */}\r\n//         </div>\r\n//         {/* ---- LIST SECTION ---- */}\r\n//         {/* <div className=\"users-list-card glassmorphism\" aria-labelledby=\"users-list-title\">\r\n//           <div className=\"card-header\">\r\n//             <h2 id=\"users-list-title\" className=\"card-title\">\r\n//               Team Members ({filteredUsers.length})\r\n//             </h2>\r\n//             <div className=\"search-container\">\r\n//               <FiSearch className=\"search-icon\" />\r\n//               <input\r\n//                 type=\"text\"\r\n//                 className=\"search-input\"\r\n//                 placeholder=\"Search users...\"\r\n//                 value={searchTerm}\r\n//                 onChange={(e) => setSearchTerm(e.target.value)}\r\n//               />\r\n//             </div>\r\n//           </div>\r\n//           <div className=\"table-container\">\r\n//             <table className=\"modern-table\" role=\"table\" aria-label=\"Users table\">\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Name</th>\r\n//                   <th>Email</th>\r\n//                   <th>Department</th>\r\n//                   <th>Role</th>\r\n//                   <th>Active</th>\r\n//                   <th>Actions</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {filteredUsers.map(u => (\r\n//                   <tr key={u.id} className={editingId === u.id ? 'editing-row' : ''}>\r\n//                     {editingId === u.id ? (\r\n//                       <>\r\n//                         <td>\r\n//                           <input className=\"edit-input\" name=\"firstName\"\r\n//                             value={editForm.firstName || ''}\r\n//                             onChange={handleEditChange}\r\n//                             placeholder=\"First Name\"\r\n//                           />\r\n//                           <input className=\"edit-input\"\r\n//                             name=\"lastName\"\r\n//                             value={editForm.lastName || ''}\r\n//                             onChange={handleEditChange}\r\n//                             placeholder=\"Last Name\"\r\n//                             style={{ marginTop: '5px' }}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <input className=\"edit-input\" name=\"email\"\r\n//                             value={editForm.email || ''}\r\n//                             onChange={handleEditChange}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n//                             <select className=\"edit-select\"\r\n//                               name=\"department\"\r\n//                               value={editForm.department || defaultNewUser.department}\r\n//                               onChange={handleEditChange}>\r\n//                               {departments.map(d => (\r\n//                                 <option key={d}>{d}</option>\r\n//                               ))}\r\n//                             </select>\r\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\r\n//                               onClick={openDepartmentModal} title=\"Edit departments\" />\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div style={{ display: 'flex', alignItems: 'center', gap: 4 }}>\r\n//                             <select className=\"edit-select\"\r\n//                               name=\"role\"\r\n//                               value={editForm.role || defaultNewUser.role}\r\n//                               onChange={handleEditChange}>\r\n//                               {roles.map(r => (\r\n//                                 <option key={r}>{r}</option>\r\n//                               ))}\r\n//                             </select>\r\n//                             <FiPlus style={{ cursor: 'pointer', color: '#667eea' }}\r\n//                               onClick={openRoleModal} title=\"Edit roles\" />\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>\r\n//                           <input type=\"checkbox\"\r\n//                             name=\"active\"\r\n//                             checked={editForm.active || false}\r\n//                             onChange={handleEditChange}\r\n//                           />\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => saveEdit(u.id)} className=\"btn-success\" title=\"Save\">\r\n//                               <FiCheck />\r\n//                             </button>\r\n//                             <button onClick={cancelEdit} className=\"btn-cancel\" title=\"Cancel\">\r\n//                               <FiX />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     ) : (\r\n//                       <>\r\n//                         <td>\r\n//                           <div className=\"user-info\">\r\n//                             <div className=\"avatar\">{u.firstName ? u.firstName.charAt(0) : (u.name ? u.name.charAt(0) : 'U')}</div>\r\n//                             <span>{u.firstName || u.name} {u.lastName}</span>\r\n//                             <div className=\"file-indicator\" title={u.profileFile ? `File: ${u.profileFile.name}` : 'No file'}>\r\n//                               {u.profileFile && '📁'}\r\n//                             </div>\r\n//                           </div>\r\n//                         </td>\r\n//                         <td>{u.email}</td>\r\n//                         <td>\r\n//                           <span className={`role-badge ${getRoleColor(u.department || 'engineering')}`}>\r\n//                             {u.department}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <span className={`role-badge ${getRoleColor(u.role || 'developer')}`}>\r\n//                             {u.role}\r\n//                           </span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <span className={`status-dot ${u.active ? 'status-active' : 'status-inactive'}`}></span>\r\n//                         </td>\r\n//                         <td>\r\n//                           <div className=\"action-buttons\">\r\n//                             <button onClick={() => startEdit(u)} className=\"btn-edit\" title=\"Edit\">\r\n//                               <FiEdit2 />\r\n//                             </button>\r\n//                             <button onClick={() => remove(u.id)} className=\"btn-delete\" title=\"Delete\">\r\n//                               <FiTrash2 />\r\n//                             </button>\r\n//                           </div>\r\n//                         </td>\r\n//                       </>\r\n//                     )}\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//             {filteredUsers.length === 0 && (\r\n//               <div className=\"empty-state\">\r\n//                 <p>No users found{searchTerm && ` matching \"${searchTerm}\"`}</p>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         </div> */}\r\n//       </div>\r\n//       {/* ------ MODALS ------ */}\r\n//       {showRoleModal && (\r\n//         <div className=\"modal-overlay\">\r\n//           <div className=\"modal-content\">\r\n//             <h3>Edit Roles</h3>\r\n//             <div style={{ marginBottom: 12 }}>\r\n//               <input type=\"text\"\r\n//                 placeholder=\"Add new role\"\r\n//                 className=\"modern-input\"\r\n//                 value={roleInput}\r\n//                 onChange={e => setRoleInput(e.target.value)}\r\n//                 onKeyDown={e => e.key === 'Enter' && addRole()}\r\n//               />\r\n//               <button onClick={addRole} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\r\n//             </div>\r\n//             <div>\r\n//               {roles.map(r => (\r\n//                 <div key={r} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\r\n//                   <span>{r}</span>\r\n//                   <FiMinus style={{ cursor: 'pointer', color: '#e53e3e' }}\r\n//                     title=\"Delete role\"\r\n//                     onClick={() => setRoleToDelete(r)}\r\n//                   />\r\n//                   {roleToDelete === r && (\r\n//                     <span style={{ marginLeft: 6 }}>\r\n//                       Delete?\r\n//                       <button className=\"btn-delete\" onClick={() => deleteRole(r)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\r\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setRoleToDelete('')}>No</button>\r\n//                     </span>\r\n//                   )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeRoleModal}>Close</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       {showDepartmentModal && (\r\n//         <div className=\"modal-overlay\">\r\n//           <div className=\"modal-content\">\r\n//             <h3>Edit Departments</h3>\r\n//             <div style={{ marginBottom: 12 }}>\r\n//               <input type=\"text\"\r\n//                 placeholder=\"Add new department\"\r\n//                 className=\"modern-input\"\r\n//                 value={departmentInput}\r\n//                 onChange={e => setDepartmentInput(e.target.value)}\r\n//                 onKeyDown={e => e.key === 'Enter' && addDepartment()}\r\n//               />\r\n//               <button onClick={addDepartment} className=\"create-btn\" style={{ marginTop: 8, fontSize: '1rem' }}>Add</button>\r\n//             </div>\r\n//             <div>\r\n//               {departments.map(d => (\r\n//                 <div key={d} style={{ display: 'flex', alignItems: 'center', gap: 10, marginBottom: 4 }}>\r\n//                   <span>{d}</span>\r\n//                   <FiMinus\r\n//                     style={{ cursor: 'pointer', color: '#e53e3e' }}\r\n//                     title=\"Delete department\"\r\n//                     onClick={() => setDepartmentToDelete(d)}\r\n//                   />\r\n//                   {departmentToDelete === d && (\r\n//                     <span style={{ marginLeft: 6 }}>\r\n//                       Delete?\r\n//                       <button className=\"btn-delete\" onClick={() => deleteDepartment(d)} style={{ marginLeft: 3, fontSize: '0.9rem' }}>Yes</button>\r\n//                       <button className=\"btn-cancel\" style={{ marginLeft: 3, fontSize: '0.9rem' }} onClick={() => setDepartmentToDelete('')}>No</button>\r\n//                     </span>\r\n//                   )}\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//             <button className=\"btn-cancel\" style={{ marginTop: 16 }} onClick={closeDepartmentModal}>Close</button>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n//       {/* --- Modal Styles --- */}\r\n//   <style jsx>{`\r\n//     .modal-overlay {\r\n//       position: fixed; top: 0; left: 0; right: 0; bottom: 0;\r\n//       background: rgba(0,0,0,.15);\r\n//       z-index: 1100;\r\n//       display: flex;\r\n//       justify-content: center;\r\n//       align-items: center;\r\n//     }\r\n//     .modal-content {\r\n//       background: #fff;\r\n//       border-radius: 12px;\r\n//       padding: 30px 35px;\r\n//       box-shadow: 0 8px 32px rgba(0,0,0,.15);\r\n//       min-width: 350px;\r\n//       max-width: 95vw;\r\n//       font-size: 1.03rem;\r\n//       color: #2d3748;\r\n//     }\r\n//     .modal-content h3 { margin-top:0; font-size:1.18em; margin-bottom:0.9em; }\r\n//     .modal-content input { margin-bottom:6px; }\r\n\r\n\r\n//     .users-container {\r\n//       min-height: 100vh;\r\n//       background: #D8F7FA;\r\n//       padding: 20px;\r\n//     }\r\n//     /* ... (rest of your unchanged styles remain here) ... */\r\n//     .users-header {\r\n//       text-align: center;\r\n//       margin-bottom: 40px;\r\n//       color: #2d3748;\r\n//     }\r\n//     .users-title {\r\n//       font-size: 2.5rem;\r\n//       font-weight: 700;\r\n//       margin-bottom: 8px;\r\n//     }\r\n//     .users-subtitle {\r\n//       font-size: 1.1rem;\r\n//       opacity: 0.8;\r\n//       color: #4a5568;\r\n//     }\r\n//     .error-message {\r\n//         color: #e53e3e;\r\n//         background: #fed7d7;\r\n//         padding: 8px 15px;\r\n//         border-radius: 8px;\r\n//         margin-top: 15px;\r\n//         display: inline-block;\r\n//         font-weight: 500;\r\n//     }\r\n//     .users-grid {\r\n//       display: grid;\r\n//       grid-template-columns: 1fr;\r\n//       gap: 30px;\r\n//       max-width: 1400px;\r\n//       margin: 0 auto;\r\n//     }\r\n//     @media (min-width: 1024px) {\r\n//       .users-grid {\r\n//         grid-template-columns: 450px 1fr;\r\n//       }\r\n//     }\r\n//     .glassmorphism {\r\n//       background: rgba(255, 255, 255, 0.95);\r\n\r\n//       backdrop-filter: blur(10px);\r\n//       border-radius: 20px;\r\n//       border: 1px solid rgba(255, 255, 255, 0.2);\r\n//       box-shadow: 0 8px 32px rgba(0, 0, 0, 0.05);\r\n//     }\r\n//     .users-form-card,\r\n//     .users-list-card {\r\n//       padding: 30px;\r\n//     }\r\n//     .card-header {\r\n//       display: flex;\r\n//       justify-content: space-between;\r\n//       align-items: center;\r\n//       margin-bottom: 30px;\r\n//       flex-wrap: wrap;\r\n//       gap: 15px;\r\n//     }\r\n//     .card-title {\r\n//       font-size: 1.5rem;\r\n//       font-weight: 600;\r\n//       color: #2d3748;\r\n//       display: flex;\r\n//       align-items: center;\r\n//     }\r\n//     .icon-spacing {\r\n//       margin-right: 10px;\r\n//     }\r\n//     .form-grid-expanded {\r\n//       display: grid;\r\n//       grid-template-columns: 1fr 1fr;\r\n//       gap: 20px;\r\n//       margin-bottom: 30px;\r\n//     }\r\n//     .input-group {\r\n//       display: flex;\r\n//       flex-direction: column;\r\n//     }\r\n//     .input-label {\r\n//       font-weight: 500;\r\n//       margin-bottom: 8px;\r\n//       color: #4a5568;\r\n//     }\r\n//     .checkbox-group {\r\n//         grid-column: span 1;\r\n//     }\r\n//     .checkbox-label {\r\n//         display: flex;\r\n//         align-items: center;\r\n//         font-weight: 400;\r\n//         color: #4a5568;\r\n//         cursor: pointer;\r\n//         padding: 10px;\r\n//         border-radius: 8px;\r\n//     }\r\n//     .checkbox-label input[type=\"checkbox\"] {\r\n//         margin-right: 10px;\r\n//         width: 18px;\r\n//         height: 18px;\r\n//         accent-color: #667eea;\r\n//     }\r\n//     .file-group input[type=\"file\"] {\r\n//       display: none;\r\n//     }\r\n//     .file-upload-btn {\r\n//       padding: 12px 16px;\r\n//       border: 2px solid #667eea;\r\n//       border-radius: 10px;\r\n//       font-size: 1rem;\r\n//       font-weight: 500;\r\n//       color: #667eea;\r\n//       background: #ebf4ff;\r\n//       cursor: pointer;\r\n//       transition: background-color 0.2s;\r\n//       display: flex;\r\n//       align-items: center;\r\n//       justify-content: flex-start;\r\n//     }\r\n//     .file-upload-btn:hover {\r\n//       background: #d4e3ff;\r\n//     }\r\n//     .file-upload-btn .btn-icon {\r\n//       margin-right: 8px;\r\n//       font-size: 1.2rem;\r\n//     }\r\n//     .modern-input,\r\n//     .modern-select {\r\n//       padding: 12px 16px;\r\n//       border: 2px solid #e2e8f0;\r\n//       border-radius: 10px;\r\n//       font-size: 1rem;\r\n//       transition: all 0.3s ease;\r\n//       // background: #D8F7FA;\r\n//       width: 100%;\r\n//       box-sizing: border-box;\r\n//     }\r\n//     .modern-input:focus,\r\n//     .modern-select:focus {\r\n//       outline: none;\r\n//       border-color: #667eea;\r\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//     }\r\n//     .create-btn {\r\n//       grid-column: 1 / -1;\r\n//       width: 100%;\r\n//       padding: 14px;\r\n//       background: #4e54c8;\r\n//       color: white;\r\n//       border: none;\r\n//       border-radius: 10px;\r\n//       font-size: 1rem;\r\n//       font-weight: 600;\r\n//       cursor: pointer;\r\n//       transition: transform 0.2s ease;\r\n//       display: flex;\r\n//       align-items: center;\r\n//       justify-content: center;\r\n//     }\r\n//     .create-btn:hover {\r\n//       transform: translateY(-2px);\r\n//       box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);\r\n//     }\r\n//     .btn-icon {\r\n//       margin-right: 8px;\r\n//     }\r\n//     .search-container {\r\n//       position: relative;\r\n//       min-width: 250px;\r\n//     }\r\n//     .search-input {\r\n//       padding: 12px 16px 12px 40px;\r\n//       border: 2px solid #e2e8f0;\r\n//       border-radius: 10px;\r\n//       font-size: 1rem;\r\n//       width: 100%;\r\n//       transition: all 0.3s ease;\r\n//     }\r\n//     .search-input:focus {\r\n//       outline: none;\r\n//       border-color: #667eea;\r\n//       box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\r\n//     }\r\n//     .search-icon {\r\n//       position: absolute;\r\n//       left: 12px;\r\n//       top: 50%;\r\n//       transform: translateY(-50%);\r\n//       color: #a0aec0;\r\n//     }\r\n//     .table-container {\r\n//       border-radius: 10px;\r\n//       /* Removed overflow-x to prevent horizontal scroll */\r\n//     }\r\n//     .modern-table {\r\n//       width: 100%;\r\n//       border-collapse: collapse;\r\n//       table-layout: auto; /* Changed from fixed or default to auto */\r\n//       /* Removed min-width */\r\n//     }\r\n//     .modern-table th {\r\n//       background: #f7fafc;\r\n//       padding: 12px 8px; /* Slightly reduce padding for smaller widths */\r\n//       text-align: left;\r\n//       font-weight: 600;\r\n//       color: #4a5568;\r\n//       border-bottom: 2px solid #e2e8f0;\r\n//       word-wrap: break-word;\r\n//     }\r\n//     .modern-table td {\r\n//       padding: 12px 8px; /* Adjust padding */\r\n//       border-bottom: 1px solid #e2e8f0;\r\n//       vertical-align: middle;\r\n//       word-wrap: break-word;\r\n//       white-space: normal;\r\n//     }\r\n//     .modern-table tr:hover {\r\n//       background: #D8F7FA;\r\n//     }\r\n//     .editing-row {\r\n//       background: #fff9e6 !important;\r\n//     }\r\n//     .user-info {\r\n//       display: flex;\r\n//       align-items: center;\r\n//       gap: 12px;\r\n//       flex-wrap: wrap;\r\n//       white-space: normal;\r\n//     }\r\n//     .file-indicator {\r\n//         font-size: 1.1em;\r\n//         cursor: help;\r\n//       white-space: nowrap;\r\n//     }\r\n//     .avatar {\r\n//       width: 40px;\r\n//       height: 40px;\r\n//       border-radius: 50%;\r\n//       background:#4e54c8;\r\n//       display: flex;\r\n//       align-items: center;\r\n//       justify-content: center;\r\n//       color: white;\r\n//       font-weight: 600;\r\n//       font-size: 1.1rem;\r\n//       flex-shrink: 0;\r\n//     }\r\n//     .status-dot {\r\n//         height: 10px;\r\n//         width: 10px;\r\n//         border-radius: 50%;\r\n//         display: inline-block;\r\n//         margin-right: 5px;\r\n//     }\r\n//     .status-active {\r\n//         background-color: #48bb78;\r\n//     }\r\n//     .status-inactive {\r\n//         background-color: #e53e3e;\r\n//     }\r\n//     .role-badge {\r\n//       padding: 6px 12px;\r\n//       border-radius: 20px;\r\n//       font-size: 0.85rem;\r\n//       font-weight: 500;\r\n//       white-space: nowrap;\r\n//     }\r\n//     .role-admin {\r\n//       background: #fed7d7;\r\n//       color: #c53030;\r\n//     }\r\n//     .role-manager {\r\n//       background: #feebc8;\r\n//       color: #d69e2e;\r\n//     }\r\n//     .role-developer, .role-engineering {\r\n//       background: #c6f6d5;\r\n//       color: #276749;\r\n//     }\r\n//     .role-reporter {\r\n//       background: #e9d8fd;\r\n//       color: #6b46c1;\r\n//     }\r\n//     .role-sales {\r\n//         background: #bee3f8;\r\n//         color: #2c5282;\r\n//     }\r\n//     .role-hr {\r\n//         background: #fff0f5;\r\n//         color: #d53f8c;\r\n//     }\r\n//     .role-marketing {\r\n//         background: #faf089;\r\n//         color: #744210;\r\n//     }\r\n//     .action-buttons {\r\n//       display: flex;\r\n//       gap: 8px;\r\n//       flex-wrap: wrap;\r\n//     }\r\n//     .btn-edit,\r\n//     .btn-delete,\r\n//     .btn-success,\r\n//     .btn-cancel {\r\n//       padding: 8px;\r\n//       border: none;\r\n//       border-radius: 8px;\r\n//       cursor: pointer;\r\n//       transition: all 0.2s ease;\r\n//       display: flex;\r\n//       align-items: center;\r\n//       justify-content: center;\r\n//     }\r\n//     .btn-edit {\r\n//       background: #e6fffa;\r\n//       color: #234e52;\r\n//     }\r\n//     .btn-edit:hover {\r\n//       background: #b2f5ea;\r\n//     }\r\n//     .btn-delete {\r\n//       background: #fed7d7;\r\n//       color: #c53030;\r\n//     }\r\n//     .btn-delete:hover {\r\n//       background: #feb2b2;\r\n//     }\r\n//     .btn-success {\r\n//       background: #c6f6d5;\r\n//       color: #276749;\r\n//     }\r\n//     .btn-success:hover {\r\n//       background: #9ae6b4;\r\n//     }\r\n//     .btn-cancel {\r\n//       background: #fed7d7;\r\n//       color: #c53030;\r\n//     }\r\n//     .btn-cancel:hover {\r\n//       background: #feb2b2;\r\n//     }\r\n//     .edit-input,\r\n//     .edit-select {\r\n//       padding: 8px 12px;\r\n//       border: 2px solid #e2e8f0;\r\n//       border-radius: 6px;\r\n//       width: 100%;\r\n//       font-size: 0.9rem;\r\n//       box-sizing: border-box;\r\n//     }\r\n//     .edit-input:focus,\r\n//     .edit-select:focus {\r\n//       outline: none;\r\n//       border-color: #667eea;\r\n//     }\r\n//     .empty-state {\r\n//       text-align: center;\r\n//       padding: 40px;\r\n//       color: #a0aec0;\r\n//       font-style: italic;\r\n//     }\r\n//     @media (max-width: 1024px) {\r\n//       .form-grid-expanded {\r\n//         grid-template-columns: 1fr;\r\n//       }\r\n//       .users-grid {\r\n//         grid-template-columns: 1fr;\r\n//       }\r\n//     }\r\n//     @media (max-width: 768px) {\r\n//       .users-container {\r\n//         padding: 10px;\r\n//       }\r\n//       .users-title {\r\n//         font-size: 2rem;\r\n//       }\r\n//       .users-form-card,\r\n//       .users-list-card {\r\n//         padding: 20px;\r\n//       }\r\n//       .card-header {\r\n//         flex-direction: column;\r\n//         align-items: stretch;\r\n//       }\r\n//       .search-container {\r\n//         min-width: auto;\r\n//       }\r\n//       .modern-table {\r\n//         font-size: 0.85rem;\r\n//       }\r\n//       .modern-table th,\r\n//       .modern-table td {\r\n//         padding: 8px 6px;\r\n//       }\r\n//       .action-buttons {\r\n//         flex-direction: row;\r\n//       }\r\n//       .user-info {\r\n//         gap: 6px;\r\n//       }\r\n//     }\r\n//     @media (max-width: 480px) {\r\n//       .users-title {\r\n//         font-size: 1.75rem;\r\n//       }\r\n//       .card-title {\r\n//         font-size: 1.25rem;\r\n//       }\r\n//       .user-info {\r\n//         flex-direction: column;\r\n//         text-align: center;\r\n//         align-items: flex-start;\r\n//       }\r\n//       .avatar {\r\n//         width: 32px;\r\n//         height: 32px;\r\n//         font-size: 1rem;\r\n//       }\r\n//     }\r\n\r\n//   `}</style>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for update 21/10\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\r\n// import { v4 as uuidv4 } from \"uuid\";\r\n// import { FiUserPlus } from \"react-icons/fi\";\r\n\r\n// const ROLES_KEY = \"user-management-roles\";\r\n// const DEPARTMENTS_KEY = \"user-management-departments\";\r\n\r\n// const defaultRoles = [\r\n//   \"Associate Developer\",\r\n//   \"Senior Associate Developer\",\r\n//   \"HR\",\r\n//   \"Administration\"\r\n// ];\r\n// const defaultDepartments = [\r\n//   \"Frontend\",\r\n//   \"Backend\",\r\n//   \"Middleware\",\r\n//   \"AIML\",\r\n//   \"DevOps\",\r\n//   \"Testing\",\r\n//   \"FlowTrack\",\r\n//   \"NetWork\",\r\n//   \"Hr\"\r\n// ];\r\n\r\n// function getStored(key, fallback) {\r\n//   const saved = localStorage.getItem(key);\r\n//   try {\r\n//     return saved ? JSON.parse(saved) : fallback;\r\n//   } catch {\r\n//     return fallback;\r\n//   }\r\n// }\r\n\r\n// function setStored(key, value) {\r\n//   localStorage.setItem(key, JSON.stringify(value));\r\n// }\r\n\r\n// // Inline style objects\r\n// const styles = {\r\n//   usersContainer: {\r\n//     minHeight: \"100vh\",\r\n//     background: \"#D8F7FA\",\r\n//     padding: 20,\r\n//     fontFamily: \"'Inter', Arial, sans-serif\"\r\n//   },\r\n//   usersHeader: {\r\n//     textAlign: \"center\",\r\n//     marginBottom: 40,\r\n//     color: \"#2d3748\"\r\n//   },\r\n//   usersTitle: {\r\n//     fontSize: \"2.5rem\",\r\n//     fontWeight: 700,\r\n//     marginBottom: 8\r\n//   },\r\n//   usersSubtitle: {\r\n//     fontSize: \"1.1rem\",\r\n//     opacity: 0.8,\r\n//     color: \"#4a5568\"\r\n//   },\r\n//   errorMessage: {\r\n//     color: \"#e53e3e\",\r\n//     background: \"#fed7d7\",\r\n//     padding: \"8px 15px\",\r\n//     borderRadius: 8,\r\n//     marginTop: 15,\r\n//     display: \"inline-block\",\r\n//     fontWeight: 500\r\n//   },\r\n//   usersGrid: {\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"1fr\",\r\n//     gap: 30,\r\n//     maxWidth: 900,\r\n//     margin: \"0 auto\"\r\n//   },\r\n//   glassmorphism: {\r\n//     background: \"rgba(255,255,255,0.95)\",\r\n//     backdropFilter: \"blur(10px)\",\r\n//     borderRadius: 20,\r\n//     border: \"1px solid rgba(255,255,255,0.2)\",\r\n//     boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\r\n//   },\r\n//   formCard: {\r\n//     padding: 30\r\n//   },\r\n//   cardHeader: {\r\n//     display: \"flex\",\r\n//     justifyContent: \"space-between\",\r\n//     alignItems: \"center\",\r\n//     marginBottom: 30,\r\n//     flexWrap: \"wrap\",\r\n//     gap: 15\r\n//   },\r\n//   cardTitle: {\r\n//     fontSize: \"1.5rem\",\r\n//     fontWeight: 600,\r\n//     color: \"#2d3748\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\"\r\n//   },\r\n//   iconSpacing: {\r\n//     marginRight: 10\r\n//   },\r\n//   formGrid: {\r\n//     display: \"grid\",\r\n//     gridTemplateColumns: \"1fr 1fr\",\r\n//     gap: 20,\r\n//     marginBottom: 30\r\n//   },\r\n//   inputGroup: {\r\n//     display: \"flex\",\r\n//     flexDirection: \"column\"\r\n//   },\r\n//   inputLabel: {\r\n//     fontWeight: 500,\r\n//     marginBottom: 8,\r\n//     color: \"#4a5568\"\r\n//   },\r\n//   checkboxGroup: {},\r\n//   checkboxLabel: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     fontWeight: 400,\r\n//     color: \"#4a5568\",\r\n//     cursor: \"pointer\",\r\n//     padding: 10,\r\n//     borderRadius: 8\r\n//   },\r\n//   checkbox: {\r\n//     marginRight: 10,\r\n//     width: 18,\r\n//     height: 18,\r\n//     accentColor: \"#667eea\"\r\n//   },\r\n//   modernInput: {\r\n//     padding: \"12px 16px\",\r\n//     border: \"2px solid #e2e8f0\",\r\n//     borderRadius: 10,\r\n//     fontSize: \"1rem\",\r\n//     background: \"#D8F7FA\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//     transition: \"all 0.3s\"\r\n//   },\r\n//   modernSelect: {\r\n//     padding: \"12px 16px\",\r\n//     border: \"2px solid #e2e8f0\",\r\n//     borderRadius: 10,\r\n//     fontSize: \"1rem\",\r\n//     background: \"#D8F7FA\",\r\n//     width: \"100%\",\r\n//     boxSizing: \"border-box\",\r\n//     transition: \"all 0.3s\"\r\n//   },\r\n//   createBtn: {\r\n//     gridColumn: \"1 / -1\",\r\n//     width: \"100%\",\r\n//     padding: 14,\r\n//     background: \"#4e54c8\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: 10,\r\n//     fontSize: \"1rem\",\r\n//     fontWeight: 600,\r\n//     cursor: \"pointer\",\r\n//     transition: \"transform 0.2s\",\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\"\r\n//   }\r\n// };\r\n\r\n// export default function Users() {\r\n//   const defaultNewUser = {\r\n//     firstName: \"\",\r\n//     email: \"\",\r\n//     role: defaultRoles[0],\r\n//     department: defaultDepartments[0],\r\n//     active: true,\r\n//     mobileNumber: \"\",\r\n//     passwordResetNeeded: false,\r\n//     profileFile: null,\r\n//   };\r\n\r\n//   const [users, setUsers] = useState([]);\r\n//   const [newUserForm, setNewUserForm] = useState(defaultNewUser);\r\n//   const [editingId, setEditingId] = useState(null);\r\n//   const [editForm, setEditForm] = useState({});\r\n//   const [error, setError] = useState(null);\r\n//   const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\r\n//   const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const data = await listUsers();\r\n//         setUsers(data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to load users\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     setStored(ROLES_KEY, roles);\r\n//   }, [roles]);\r\n//   useEffect(() => {\r\n//     setStored(DEPARTMENTS_KEY, departments);\r\n//   }, [departments]);\r\n\r\n//   const handleNewUserChange = (e) => {\r\n//     const { name, value, type, checked, files } = e.target;\r\n//     setNewUserForm((prev) => ({\r\n//       ...prev,\r\n//       [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\r\n//     }));\r\n//   };\r\n\r\n//   const create = async () => {\r\n//     if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\r\n//       setError(\"First Name and Email are required.\");\r\n//       return;\r\n//     }\r\n//     try {\r\n//       const newUser = {\r\n//         id: uuidv4(),\r\n//         ...newUserForm,\r\n//         name: newUserForm.firstName.trim(),\r\n//         profileFile: newUserForm.profileFile\r\n//           ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\r\n//           : null,\r\n//       };\r\n//       await addUser(newUser);\r\n//       const updatedUsers = await listUsers();\r\n//       setUsers(updatedUsers);\r\n//       setNewUserForm(defaultNewUser);\r\n//       setError(null);\r\n//     } catch (err) {\r\n//       setError(\"Failed to add user\");\r\n//     }\r\n//   };\r\n\r\n//   // Responsive fix for single-column on mobile\r\n//   const formGridStyle = window.innerWidth <= 1024\r\n//     ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\r\n//     : styles.formGrid;\r\n\r\n//   return (\r\n//     <div style={styles.usersContainer}>\r\n//       <div style={styles.usersHeader}>\r\n//         <h1 style={styles.usersTitle}>User Management</h1>\r\n//         <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\r\n//       </div>\r\n//       <div style={styles.usersGrid}>\r\n//         <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\r\n//           <div style={styles.cardHeader}>\r\n//             <h2 style={styles.cardTitle}>\r\n//               <span style={styles.iconSpacing}><FiUserPlus /></span>\r\n//              Profile\r\n//             </h2>\r\n//           </div>\r\n//           <div style={formGridStyle}>\r\n//             <div style={styles.inputGroup}>\r\n//               <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\r\n//               <input\r\n//                 style={styles.modernInput}\r\n//                 id=\"firstName\"\r\n//                 name=\"firstName\"\r\n//                 type=\"text\"\r\n//                 value={newUserForm.firstName}\r\n//                 onChange={handleNewUserChange}\r\n//               />\r\n//             </div>\r\n//             <div style={styles.inputGroup}>\r\n//               <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\r\n//               <input\r\n//                 style={styles.modernInput}\r\n//                 id=\"email\"\r\n//                 name=\"email\"\r\n//                 type=\"email\"\r\n//                 value={newUserForm.email}\r\n//                 onChange={handleNewUserChange}\r\n//               />\r\n//             </div>\r\n//             <div style={styles.inputGroup}>\r\n//               <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\r\n//               <select\r\n//                 style={styles.modernSelect}\r\n//                 id=\"role\"\r\n//                 name=\"role\"\r\n//                 value={newUserForm.role}\r\n//                 onChange={handleNewUserChange}\r\n//               >\r\n//                 {roles.map((r) => (\r\n//                   <option key={r} value={r}>{r}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div style={styles.inputGroup}>\r\n//               <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\r\n//               <select\r\n//                 style={styles.modernSelect}\r\n//                 id=\"department\"\r\n//                 name=\"department\"\r\n//                 value={newUserForm.department}\r\n//                 onChange={handleNewUserChange}\r\n//               >\r\n//                 {departments.map((d) => (\r\n//                   <option key={d} value={d}>{d}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div style={styles.inputGroup}>\r\n//               <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\r\n//               <input\r\n//                 style={styles.modernInput}\r\n//                 id=\"mobileNumber\"\r\n//                 name=\"mobileNumber\"\r\n//                 type=\"tel\"\r\n//                 value={newUserForm.mobileNumber}\r\n//                 onChange={handleNewUserChange}\r\n//               />\r\n//             </div>\r\n//             <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\r\n//               <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\r\n//                 <input\r\n//                   id=\"passwordResetNeeded\"\r\n//                   name=\"passwordResetNeeded\"\r\n//                   type=\"checkbox\"\r\n//                   checked={newUserForm.passwordResetNeeded}\r\n//                   onChange={handleNewUserChange}\r\n//                   style={styles.checkbox}\r\n//                 />\r\n//                 Password Reset Needed\r\n//               </label>\r\n//             </div>\r\n//           </div>\r\n//           {error && (\r\n//             <p style={styles.errorMessage}>{error}</p>\r\n//           )}\r\n\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// \r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { listUsers, addUser, updateUser, deleteUser } from \"../../services/mockApi\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FiUserPlus } from \"react-icons/fi\";\r\n\r\n\r\nconst ROLES_KEY = \"user-management-roles\";\r\nconst DEPARTMENTS_KEY = \"user-management-departments\";\r\n\r\n\r\nconst defaultRoles = [\r\n  \"Associate Developer\",\r\n  \"Senior Associate Developer\",\r\n  \"HR\",\r\n  \"Administration\"\r\n];\r\nconst defaultDepartments = [\r\n  \"Frontend\",\r\n  \"Backend\",\r\n  \"Middleware\",\r\n  \"AIML\",\r\n  \"DevOps\",\r\n  \"Testing\",\r\n  \"FlowTrack\",\r\n  \"NetWork\",\r\n  \"Hr\"\r\n];\r\n\r\n\r\nfunction getStored(key, fallback) {\r\n  const saved = localStorage.getItem(key);\r\n  try {\r\n    return saved ? JSON.parse(saved) : fallback;\r\n  } catch {\r\n    return fallback;\r\n  }\r\n}\r\n\r\n\r\nfunction setStored(key, value) {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n}\r\n\r\n\r\n// Inline style objects\r\nconst styles = {\r\n  usersContainer: {\r\n    minHeight: \"100vh\",\r\n    background: \"#D8F7FA\",\r\n    padding: 20,\r\n    fontFamily: \"'Inter', Arial, sans-serif\"\r\n  },\r\n  usersHeader: {\r\n    textAlign: \"center\",\r\n    marginBottom: 40,\r\n    color: \"#2d3748\"\r\n  },\r\n  usersTitle: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: 700,\r\n    marginBottom: 8\r\n  },\r\n  usersSubtitle: {\r\n    fontSize: \"1.1rem\",\r\n    opacity: 0.8,\r\n    color: \"#4a5568\"\r\n  },\r\n  errorMessage: {\r\n    color: \"#e53e3e\",\r\n    background: \"#fed7d7\",\r\n    padding: \"8px 15px\",\r\n    borderRadius: 8,\r\n    marginTop: 15,\r\n    display: \"inline-block\",\r\n    fontWeight: 500\r\n  },\r\n  usersGrid: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr\",\r\n    gap: 30,\r\n    maxWidth: 900,\r\n    margin: \"0 auto\"\r\n  },\r\n  glassmorphism: {\r\n    background: \"rgba(255,255,255,0.95)\",\r\n    backdropFilter: \"blur(10px)\",\r\n    borderRadius: 20,\r\n    border: \"1px solid rgba(255,255,255,0.2)\",\r\n    boxShadow: \"0 8px 32px rgba(0,0,0,0.05)\"\r\n  },\r\n  formCard: {\r\n    padding: 30\r\n  },\r\n  cardHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 30,\r\n    flexWrap: \"wrap\",\r\n    gap: 15\r\n  },\r\n  cardTitle: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 600,\r\n    color: \"#2d3748\",\r\n    display: \"flex\",\r\n    alignItems: \"center\"\r\n  },\r\n  iconSpacing: {\r\n    marginRight: 10\r\n  },\r\n  formGrid: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"1fr 1fr\",\r\n    gap: 20,\r\n    marginBottom: 30\r\n  },\r\n  inputGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  inputLabel: {\r\n    fontWeight: 500,\r\n    marginBottom: 8,\r\n    color: \"#4a5568\"\r\n  },\r\n  checkboxGroup: {},\r\n  checkboxLabel: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    fontWeight: 400,\r\n    color: \"#4a5568\",\r\n    cursor: \"pointer\",\r\n    padding: 10,\r\n    borderRadius: 8\r\n  },\r\n  checkbox: {\r\n    marginRight: 10,\r\n    width: 18,\r\n    height: 18,\r\n    accentColor: \"#667eea\"\r\n  },\r\n  modernInput: {\r\n    padding: \"12px 16px\",\r\n    border: \"2px solid #e2e8f0\",\r\n    borderRadius: 10,\r\n    fontSize: \"1rem\",\r\n    background: \"#D8F7FA\",\r\n    width: \"100%\",\r\n    boxSizing: \"border-box\",\r\n    transition: \"all 0.3s\"\r\n  },\r\n  modernSelect: {\r\n    padding: \"12px 16px\",\r\n    border: \"2px solid #e2e8f0\",\r\n    borderRadius: 10,\r\n    fontSize: \"1rem\",\r\n    background: \"#D8F7FA\",\r\n    width: \"100%\",\r\n    boxSizing: \"border-box\",\r\n    transition: \"all 0.3s\"\r\n  },\r\n  createBtn: {\r\n    gridColumn: \"1 / -1\",\r\n    width: \"100%\",\r\n    padding: 14,\r\n    background: \"#4e54c8\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: 10,\r\n    fontSize: \"1rem\",\r\n    fontWeight: 600,\r\n    cursor: \"pointer\",\r\n    transition: \"transform 0.2s\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  editBtn: {\r\n    background: \"#38a169\",\r\n    color: \"white\",\r\n    border: \"none\",\r\n    borderRadius: 10,\r\n    padding: \"8px 16px\",\r\n    cursor: \"pointer\",\r\n    fontWeight: 600,\r\n    transition: \"background 0.3s\",\r\n    marginTop: 10,\r\n    width: \"fit-content\"\r\n  }\r\n};\r\n\r\n\r\nexport default function Users() {\r\n  const defaultNewUser = {\r\n    firstName: \"\",\r\n    email: \"\",\r\n    role: defaultRoles[0],\r\n    department: defaultDepartments[0],\r\n    active: true,\r\n    mobileNumber: \"\",\r\n    passwordResetNeeded: false,\r\n    profileFile: null,\r\n  };\r\n\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [newUserForm, setNewUserForm] = useState(defaultNewUser);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editForm, setEditForm] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [roles, setRoles] = useState(getStored(ROLES_KEY, defaultRoles));\r\n  const [departments, setDepartments] = useState(getStored(DEPARTMENTS_KEY, defaultDepartments));\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const data = await listUsers();\r\n        setUsers(data);\r\n      } catch (err) {\r\n        setError(\"Failed to load users\");\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    setStored(ROLES_KEY, roles);\r\n  }, [roles]);\r\n  useEffect(() => {\r\n    setStored(DEPARTMENTS_KEY, departments);\r\n  }, [departments]);\r\n\r\n\r\n  const handleNewUserChange = (e) => {\r\n    const { name, value, type, checked, files } = e.target;\r\n    setNewUserForm((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\r\n    }));\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    const { name, value, type, checked, files } = e.target;\r\n    setEditForm((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : type === \"file\" ? files[0] : value,\r\n    }));\r\n  };\r\n\r\n  const create = async () => {\r\n    if (!newUserForm.firstName.trim() || !newUserForm.email.trim()) {\r\n      setError(\"First Name and Email are required.\");\r\n      return;\r\n    }\r\n    try {\r\n      const newUser = {\r\n        id: uuidv4(),\r\n        ...newUserForm,\r\n        name: newUserForm.firstName.trim(),\r\n        profileFile: newUserForm.profileFile\r\n          ? { name: newUserForm.profileFile.name, size: newUserForm.profileFile.size }\r\n          : null,\r\n      };\r\n      await addUser(newUser);\r\n      const updatedUsers = await listUsers();\r\n      setUsers(updatedUsers);\r\n      setNewUserForm(defaultNewUser);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(\"Failed to add user\");\r\n    }\r\n  };\r\n\r\n  const startEditing = (user) => {\r\n    setEditingId(user.id);\r\n    setEditForm({\r\n      firstName: user.firstName || \"\",\r\n      email: user.email || \"\",\r\n      role: user.role || roles[0],\r\n      department: user.department || departments[0],\r\n      mobileNumber: user.mobileNumber || \"\",\r\n      passwordResetNeeded: user.passwordResetNeeded || false,\r\n      profileFile: user.profileFile || null,\r\n    });\r\n    setError(null);\r\n  };\r\n\r\n  const saveEdit = async () => {\r\n    if (!editForm.firstName.trim() || !editForm.email.trim()) {\r\n      setError(\"First Name and Email are required.\");\r\n      return;\r\n    }\r\n    try {\r\n      await updateUser(editingId, {\r\n        ...editForm,\r\n        name: editForm.firstName.trim(),\r\n        profileFile: editForm.profileFile\r\n          ? { name: editForm.profileFile.name, size: editForm.profileFile.size }\r\n          : null,\r\n      });\r\n      const updatedUsers = await listUsers();\r\n      setUsers(updatedUsers);\r\n      setEditingId(null);\r\n      setEditForm({});\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(\"Failed to update user\");\r\n    }\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingId(null);\r\n    setEditForm({});\r\n    setError(null);\r\n  };\r\n\r\n  // Responsive fix for single-column on mobile\r\n  const formGridStyle = window.innerWidth <= 1024\r\n    ? { ...styles.formGrid, gridTemplateColumns: \"1fr\" }\r\n    : styles.formGrid;\r\n\r\n\r\n  return (\r\n    <div style={styles.usersContainer}>\r\n      <div style={styles.usersHeader}>\r\n        <h1 style={styles.usersTitle}>User Management</h1>\r\n        <p style={styles.usersSubtitle}>Manage your users, roles, and departments</p>\r\n      </div>\r\n      <div style={styles.usersGrid}>\r\n        <div style={{ ...styles.glassmorphism, ...styles.formCard }}>\r\n          <div style={styles.cardHeader}>\r\n            <h2 style={styles.cardTitle}>\r\n              <span style={styles.iconSpacing}><FiUserPlus /></span>\r\n             Profile\r\n            </h2>\r\n          </div>\r\n          {!editingId ? (\r\n            <div style={formGridStyle}>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"firstName\">Full Name</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"firstName\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={newUserForm.firstName}\r\n                  onChange={handleNewUserChange}\r\n                />\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"email\">Email</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={newUserForm.email}\r\n                  onChange={handleNewUserChange}\r\n                />\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"role\">Role</label>\r\n                <select\r\n                  style={styles.modernSelect}\r\n                  id=\"role\"\r\n                  name=\"role\"\r\n                  value={newUserForm.role}\r\n                  onChange={handleNewUserChange}\r\n                >\r\n                  {roles.map((r) => (\r\n                    <option key={r} value={r}>{r}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"department\">Department</label>\r\n                <select\r\n                  style={styles.modernSelect}\r\n                  id=\"department\"\r\n                  name=\"department\"\r\n                  value={newUserForm.department}\r\n                  onChange={handleNewUserChange}\r\n                >\r\n                  {departments.map((d) => (\r\n                    <option key={d} value={d}>{d}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"mobileNumber\">Mobile Number</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"mobileNumber\"\r\n                  name=\"mobileNumber\"\r\n                  type=\"tel\"\r\n                  value={newUserForm.mobileNumber}\r\n                  onChange={handleNewUserChange}\r\n                />\r\n              </div>\r\n              <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\r\n                <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded\">\r\n                  <input\r\n                    id=\"passwordResetNeeded\"\r\n                    name=\"passwordResetNeeded\"\r\n                    type=\"checkbox\"\r\n                    checked={newUserForm.passwordResetNeeded}\r\n                    onChange={handleNewUserChange}\r\n                    style={styles.checkbox}\r\n                  />\r\n                  Password Reset Needed\r\n                </label>\r\n              </div>\r\n              <button onClick={create} style={styles.createBtn}>Create User</button>\r\n            </div>\r\n          ) : (\r\n            <div style={formGridStyle}>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"firstName-edit\">Full Name</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"firstName-edit\"\r\n                  name=\"firstName\"\r\n                  type=\"text\"\r\n                  value={editForm.firstName}\r\n                  onChange={handleEditChange}\r\n                />\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"email-edit\">Email</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"email-edit\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={editForm.email}\r\n                  onChange={handleEditChange}\r\n                />\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"role-edit\">Role</label>\r\n                <select\r\n                  style={styles.modernSelect}\r\n                  id=\"role-edit\"\r\n                  name=\"role\"\r\n                  value={editForm.role}\r\n                  onChange={handleEditChange}\r\n                >\r\n                  {roles.map((r) => (\r\n                    <option key={r} value={r}>{r}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"department-edit\">Department</label>\r\n                <select\r\n                  style={styles.modernSelect}\r\n                  id=\"department-edit\"\r\n                  name=\"department\"\r\n                  value={editForm.department}\r\n                  onChange={handleEditChange}\r\n                >\r\n                  {departments.map((d) => (\r\n                    <option key={d} value={d}>{d}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              <div style={styles.inputGroup}>\r\n                <label style={styles.inputLabel} htmlFor=\"mobileNumber-edit\">Mobile Number</label>\r\n                <input\r\n                  style={styles.modernInput}\r\n                  id=\"mobileNumber-edit\"\r\n                  name=\"mobileNumber\"\r\n                  type=\"tel\"\r\n                  value={editForm.mobileNumber}\r\n                  onChange={handleEditChange}\r\n                />\r\n              </div>\r\n              <div style={{ ...styles.inputGroup, ...styles.checkboxGroup }}>\r\n                <label style={styles.checkboxLabel} htmlFor=\"passwordResetNeeded-edit\">\r\n                  <input\r\n                    id=\"passwordResetNeeded-edit\"\r\n                    name=\"passwordResetNeeded\"\r\n                    type=\"checkbox\"\r\n                    checked={editForm.passwordResetNeeded}\r\n                    onChange={handleEditChange}\r\n                    style={styles.checkbox}\r\n                  />\r\n                  Password Reset Needed\r\n                </label>\r\n              </div>\r\n              <button onClick={saveEdit} style={styles.createBtn}>Save Changes</button>\r\n              <button onClick={cancelEdit} style={{ ...styles.editBtn, background: \"#e53e3e\", marginLeft: 10 }}>Cancel</button>\r\n            </div>\r\n          )}\r\n          {error && (\r\n            <p style={styles.errorMessage}>{error}</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Show list of users with edit buttons */}\r\n        {users.length > 0 && (\r\n          <div style={{ maxWidth: 900, margin: \"20px auto\" }}>\r\n            {users.map((user) => (\r\n              <div\r\n                key={user.id}\r\n                style={{ \r\n                  ...styles.glassmorphism, \r\n                  padding: 20, \r\n                  marginBottom: 15, \r\n                  display: \"flex\", \r\n                  justifyContent: \"space-between\", \r\n                  alignItems: \"center\" \r\n                }}\r\n              >\r\n                <div>\r\n                  <strong>{user.firstName}</strong> - {user.email} - {user.role} - {user.department}\r\n                </div>\r\n                <button\r\n                  style={styles.editBtn}\r\n                  onClick={() => startEditing(user)}\r\n                >\r\n                  Edit\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}