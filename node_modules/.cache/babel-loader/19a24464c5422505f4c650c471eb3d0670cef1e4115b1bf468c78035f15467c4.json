{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\battina srinuvasurao\\\\OneDrive\\\\Desktop\\\\userstool\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// for ok \n\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// const AuthContext = createContext();\n\n// export function AuthProvider({ children }) {\n//   const [user, setUser] = useState(null);\n\n//   // Load user from localStorage on mount\n//   useEffect(() => {\n//     const storedUser = localStorage.getItem(\"user\");\n//     if (storedUser) {\n//       setUser(JSON.parse(storedUser));\n//     }\n//   }, []);\n\n//   // Login → set user + persist\n//   const login = (userData) => {\n//     setUser(userData);\n//     localStorage.setItem(\"user\", JSON.stringify(userData));\n//   };\n\n//   // Logout → clear user + remove from storage\n//   const logout = () => {\n//     setUser(null);\n//     localStorage.removeItem(\"user\");\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ user, login, logout }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// }\n\n// export const useAuth = () => useContext(AuthContext);\n\n// for UI/UX \n\nimport React, { createContext, useContext, useState, useEffect } from \"react\"; // <-- CORRECTED LINE\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const loadUser = () => {\n      console.log(\"AuthContext: Starting initial user load from localStorage...\");\n      try {\n        const storedUser = localStorage.getItem(\"user\");\n        if (storedUser) {\n          const parsedUser = JSON.parse(storedUser);\n          if (parsedUser && parsedUser.email && parsedUser.id) {\n            setUser(parsedUser);\n            // FIX: Changed 'parsed.email' to 'parsedUser.email' as 'parsed' was undefined\n            console.log(\"AuthContext: User found in localStorage:\", parsedUser.email);\n          } else {\n            console.warn(\"AuthContext: Malformed user data in localStorage, clearing it.\");\n            localStorage.removeItem(\"user\");\n          }\n        } else {\n          console.log(\"AuthContext: No user found in localStorage.\");\n        }\n      } catch (error) {\n        console.error(\"AuthContext: Error parsing user from localStorage:\", error);\n        localStorage.removeItem(\"user\");\n      } finally {\n        setLoading(false);\n        console.log(\"AuthContext: Initial user load finished. Loading state set to false.\");\n      }\n    };\n    loadUser();\n  }, []);\n\n  // --- MODIFIED LOGIN FUNCTION ---\n  const login = async (email, password) => {\n    setLoading(true); // Set loading to true during login process\n    console.log(`AuthContext: Login attempt for email: ${email}, password: ${password}`);\n    try {\n      // Simulate an API call delay (still good for UX testing)\n      await new Promise(resolve => setTimeout(resolve, 1000)); // 1 second delay\n\n      // *** THIS IS THE KEY CHANGE ***\n      // We are now accepting ANY email and password as valid for demo purposes.\n      // In a real application, you would replace this entire block\n      // with a call to your backend authentication API.\n      const userData = {\n        id: \"demo-user-123\",\n        // A generic ID\n        name: email.split('@')[0] || \"Demo User\",\n        // Use part of email as name\n        email: email,\n        // Use the provided email\n        token: \"fake-jwt-token-for-any-login\" // A generic token\n      };\n      setUser(userData);\n      localStorage.setItem(\"user\", JSON.stringify(userData));\n      console.log(\"AuthContext: Login successful with ANY credentials! User set and stored.\", userData);\n      return userData;\n    } catch (error) {\n      // This catch block might not be hit with the simplified logic above,\n      // but it's good to keep for future real API integration.\n      console.error(\"AuthContext: Login failed (unexpected error during demo logic):\", error.message);\n      setUser(null);\n      localStorage.removeItem(\"user\");\n      throw new Error(\"An unexpected error occurred during login simulation.\");\n    } finally {\n      setLoading(false); // Always set loading to false after login attempt\n      console.log(\"AuthContext: Login process finished. Loading state set to false.\");\n    }\n  };\n  // --- END OF MODIFIED LOGIN FUNCTION ---\n\n  const logout = () => {\n    console.log(\"AuthContext: User logging out.\");\n    setLoading(true);\n    setUser(null);\n    localStorage.removeItem(\"user\");\n    setLoading(false);\n    console.log(\"AuthContext: Logout complete.\");\n  };\n  const authContextValue = {\n    user,\n    loading,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === null) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","loadUser","console","log","storedUser","localStorage","getItem","parsedUser","JSON","parse","email","id","warn","removeItem","error","login","password","Promise","resolve","setTimeout","userData","name","split","token","setItem","stringify","message","Error","logout","authContextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/battina srinuvasurao/OneDrive/Desktop/userstool/src/context/AuthContext.js"],"sourcesContent":["\r\n\r\n// for ok \r\n\r\n// import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// const AuthContext = createContext();\r\n\r\n// export function AuthProvider({ children }) {\r\n//   const [user, setUser] = useState(null);\r\n\r\n//   // Load user from localStorage on mount\r\n//   useEffect(() => {\r\n//     const storedUser = localStorage.getItem(\"user\");\r\n//     if (storedUser) {\r\n//       setUser(JSON.parse(storedUser));\r\n//     }\r\n//   }, []);\r\n\r\n//   // Login → set user + persist\r\n//   const login = (userData) => {\r\n//     setUser(userData);\r\n//     localStorage.setItem(\"user\", JSON.stringify(userData));\r\n//   };\r\n\r\n//   // Logout → clear user + remove from storage\r\n//   const logout = () => {\r\n//     setUser(null);\r\n//     localStorage.removeItem(\"user\");\r\n//   };\r\n\r\n//   return (\r\n//     <AuthContext.Provider value={{ user, login, logout }}>\r\n//       {children}\r\n//     </AuthContext.Provider>\r\n//   );\r\n// }\r\n\r\n// export const useAuth = () => useContext(AuthContext);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// for UI/UX \r\n\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\"; // <-- CORRECTED LINE\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const loadUser = () => {\r\n      console.log(\"AuthContext: Starting initial user load from localStorage...\");\r\n      try {\r\n        const storedUser = localStorage.getItem(\"user\");\r\n        if (storedUser) {\r\n          const parsedUser = JSON.parse(storedUser);\r\n          if (parsedUser && parsedUser.email && parsedUser.id) {\r\n            setUser(parsedUser);\r\n            // FIX: Changed 'parsed.email' to 'parsedUser.email' as 'parsed' was undefined\r\n            console.log(\"AuthContext: User found in localStorage:\", parsedUser.email);\r\n          } else {\r\n            console.warn(\"AuthContext: Malformed user data in localStorage, clearing it.\");\r\n            localStorage.removeItem(\"user\");\r\n          }\r\n        } else {\r\n          console.log(\"AuthContext: No user found in localStorage.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"AuthContext: Error parsing user from localStorage:\", error);\r\n        localStorage.removeItem(\"user\");\r\n      } finally {\r\n        setLoading(false);\r\n        console.log(\"AuthContext: Initial user load finished. Loading state set to false.\");\r\n      }\r\n    };\r\n\r\n    loadUser();\r\n  }, []);\r\n\r\n  // --- MODIFIED LOGIN FUNCTION ---\r\n  const login = async (email, password) => {\r\n    setLoading(true); // Set loading to true during login process\r\n    console.log(`AuthContext: Login attempt for email: ${email}, password: ${password}`);\r\n    try {\r\n      // Simulate an API call delay (still good for UX testing)\r\n      await new Promise((resolve) => setTimeout(resolve, 1000)); // 1 second delay\r\n\r\n      // *** THIS IS THE KEY CHANGE ***\r\n      // We are now accepting ANY email and password as valid for demo purposes.\r\n      // In a real application, you would replace this entire block\r\n      // with a call to your backend authentication API.\r\n      const userData = {\r\n        id: \"demo-user-123\", // A generic ID\r\n        name: email.split('@')[0] || \"Demo User\", // Use part of email as name\r\n        email: email, // Use the provided email\r\n        token: \"fake-jwt-token-for-any-login\", // A generic token\r\n      };\r\n\r\n      setUser(userData);\r\n      localStorage.setItem(\"user\", JSON.stringify(userData));\r\n      console.log(\"AuthContext: Login successful with ANY credentials! User set and stored.\", userData);\r\n      return userData;\r\n\r\n    } catch (error) {\r\n      // This catch block might not be hit with the simplified logic above,\r\n      // but it's good to keep for future real API integration.\r\n      console.error(\"AuthContext: Login failed (unexpected error during demo logic):\", error.message);\r\n      setUser(null);\r\n      localStorage.removeItem(\"user\");\r\n      throw new Error(\"An unexpected error occurred during login simulation.\");\r\n    } finally {\r\n      setLoading(false); // Always set loading to false after login attempt\r\n      console.log(\"AuthContext: Login process finished. Loading state set to false.\");\r\n    }\r\n  };\r\n  // --- END OF MODIFIED LOGIN FUNCTION ---\r\n\r\n  const logout = () => {\r\n    console.log(\"AuthContext: User logging out.\");\r\n    setLoading(true);\r\n    setUser(null);\r\n    localStorage.removeItem(\"user\");\r\n    setLoading(false);\r\n    console.log(\"AuthContext: Logout complete.\");\r\n  };\r\n\r\n  const authContextValue = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === null) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}