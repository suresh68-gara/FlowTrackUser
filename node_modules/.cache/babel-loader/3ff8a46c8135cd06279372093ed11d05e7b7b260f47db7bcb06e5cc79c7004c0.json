{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\projects\\\\ProjectView.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useParams, Link } from 'react-router-dom';\n// import { getProject, listIssues } from '../../services/mockApi';\n\n// export default function ProjectView() {\n//   const { id } = useParams();\n//   const [project, setProject] = useState(null);\n//   const [issues, setIssues] = useState([]);\n\n//   useEffect(()=>{ if(id){ getProject(id).then(setProject); listIssues(id).then(setIssues);} },[id]);\n\n//   if(!project) return <div className=\"card\"><p>Project not found</p></div>;\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"proj-title\">\n//       <h2 id=\"proj-title\">{project.name} <span className=\"small\">({project.key})</span></h2>\n//       <p>{project.description}</p>\n//       <div style={{display:'flex',gap:8}}>\n//         <Link to={`/kanban/${project.id}`} className=\"btn\">Open Board</Link>\n//         <Link to={`/backlog/${project.id}`} className=\"btn\">Open Backlog</Link>\n//       </div>\n//       <hr/>\n//       <h3>Issues</h3>\n//       <ul>{issues.map(i=>(<li key={i.id}><Link to={'/issues/'+i.id}>{i.title}</Link> — <em>{i.status}</em></li>))}</ul>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getProject, listIssues } from '../../services/mockApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectView() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [project, setProject] = useState(null);\n  const [issues, setIssues] = useState([]);\n  useEffect(() => {\n    if (id) {\n      getProject(id).then(setProject);\n      listIssues(id).then(setIssues);\n    }\n  }, [id]);\n  if (!project) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Project not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    role: \"region\",\n    \"aria-labelledby\": \"proj-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"proj-title\",\n      children: [project.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"small\",\n        children: [\"(\", project.key, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: project.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/kanban/${project.id}`,\n        className: \"btn\",\n        children: \"Open Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/backlog/${project.id}`,\n        className: \"btn\",\n        children: \"Open Backlog\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Issues\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: issues.map(i => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: '/issues/' + i.id,\n          children: i.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \\u2014 \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: i.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 61\n        }, this)]\n      }, i.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectView, \"e1mWaFzOoUop7y2youHv0x6GuVs=\", false, function () {\n  return [useParams];\n});\n_c = ProjectView;\nvar _c;\n$RefreshReg$(_c, \"ProjectView\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","getProject","listIssues","jsxDEV","_jsxDEV","ProjectView","_s","id","project","setProject","issues","setIssues","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","role","name","key","description","style","display","gap","to","map","i","title","status","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/projects/ProjectView.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { useParams, Link } from 'react-router-dom';\n// import { getProject, listIssues } from '../../services/mockApi';\n\n// export default function ProjectView() {\n//   const { id } = useParams();\n//   const [project, setProject] = useState(null);\n//   const [issues, setIssues] = useState([]);\n\n//   useEffect(()=>{ if(id){ getProject(id).then(setProject); listIssues(id).then(setIssues);} },[id]);\n\n//   if(!project) return <div className=\"card\"><p>Project not found</p></div>;\n\n//   return (\n//     <div className=\"card\" role=\"region\" aria-labelledby=\"proj-title\">\n//       <h2 id=\"proj-title\">{project.name} <span className=\"small\">({project.key})</span></h2>\n//       <p>{project.description}</p>\n//       <div style={{display:'flex',gap:8}}>\n//         <Link to={`/kanban/${project.id}`} className=\"btn\">Open Board</Link>\n//         <Link to={`/backlog/${project.id}`} className=\"btn\">Open Backlog</Link>\n//       </div>\n//       <hr/>\n//       <h3>Issues</h3>\n//       <ul>{issues.map(i=>(<li key={i.id}><Link to={'/issues/'+i.id}>{i.title}</Link> — <em>{i.status}</em></li>))}</ul>\n//     </div>\n//   );\n// }\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { getProject, listIssues } from '../../services/mockApi';\n \nexport default function ProjectView() {\n  const { id } = useParams();\n  const [project, setProject] = useState(null);\n  const [issues, setIssues] = useState([]);\n \n  useEffect(() => {\n    if (id) {\n      getProject(id).then(setProject);\n      listIssues(id).then(setIssues);\n    }\n  }, [id]);\n \n  if (!project)\n    return (\n      <div className=\"card\">\n        <p>Project not found</p>\n      </div>\n    );\n \n  return (\n    <div className=\"card\" role=\"region\" aria-labelledby=\"proj-title\">\n      <h2 id=\"proj-title\">\n        {project.name} <span className=\"small\">({project.key})</span>\n      </h2>\n      <p>{project.description}</p>\n      <div style={{ display: 'flex', gap: 8 }}>\n        <Link to={`/kanban/${project.id}`} className=\"btn\">\n          Open Board\n        </Link>\n        <Link to={`/backlog/${project.id}`} className=\"btn\">\n          Open Backlog\n        </Link>\n      </div>\n      <hr />\n      <h3>Issues</h3>\n      <ul>\n        {issues.map(i => (\n          <li key={i.id}>\n            <Link to={'/issues/' + i.id}>{i.title}</Link> — <em>{i.status}</em>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}