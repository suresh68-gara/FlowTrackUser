{"ast":null,"code":"\n\n// //for project boards\n// import React, { useState, useEffect } from 'react';\n// import { Routes, Route, NavLink, Navigate, useNavigate } from 'react-router-dom';\n// import { AuthProvider, useAuth } from './context/AuthContext';\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\n\n// import Login from './components/auth/Login';\n// import Users from './components/users/Users';\n// import ProjectList from './components/projects/ProjectList';\n// import ProjectView from './components/projects/ProjectView';\n// import KanbanBoard from './components/boards/KanbanBoard';\n// import Backlog from './components/backlog/Backlog';\n// import IssueDetails from './components/issues/IssueDetails';\n// import IssueCreate from './components/issues/IssueCreate';\n// import Assets from './components/assets/Assets';\n// import Timeline from './components/timeline/Timeline';\n// import ForYou from './components/dashboard/ForYou';\n// import Notifications from './components/notifications/Notifications';\n// import { FiMenu } from 'react-icons/fi';\n\n// // PrivateRoute: Only allows authenticated users\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n\n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           <Route path=\"/\" element={<AuthLanding />} />\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\n//           <Route path=\"/*\" element={\n//             <PrivateRoute>\n//               <Layout />\n//             </PrivateRoute>\n//           } />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n\n// function AuthLanding() {\n//   const { user } = useAuth();\n//   if (!user) {\n//     return <Navigate to=\"/login\" replace />;\n//   } else {\n//     return <Navigate to=\"/for-you\" replace />;\n//   }\n// }\n\n// function LoginRedirectAfterAuth() {\n//   const { user } = useAuth();\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (user) {\n//       navigate(\"/for-you\", { replace: true });\n//     }\n//   }, [user, navigate]);\n\n//   return <Login />;\n// }\n\n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const { projects } = useProjects();\n\n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\n\n//   useEffect(() => {\n//     if (projects.length > 0) {\n//       setCurrentProjectName(projects[0].name);\n//     } else {\n//       setCurrentProjectName(null);\n//     }\n//   }, [projects]);\n\n//   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n\n//   const sidebarStyle = {\n//     width: sidebarOpen ? '240px' : '70px',\n//     transition: 'width 0.3s ease',\n//     backgroundColor: '#111827',\n//     color: '#fff',\n//     height: '100vh',\n//     padding: '16px 12px',\n//     boxSizing: 'border-box',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     justifyContent: 'space-between',\n//     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n//   };\n\n//   const navLinkStyle = {\n//     display: 'block',\n//     padding: sidebarOpen ? '10px 16px' : '10px 0',\n//     color: '#e5e7eb',\n//     textDecoration: 'none',\n//     fontSize: '15px',\n//     margin: '6px 0',\n//     borderRadius: '6px',\n//     backgroundColor: '#1f2937',\n//     transition: 'all 0.2s ease',\n//     fontWeight: '500',\n//     textAlign: sidebarOpen ? 'left' : 'center'\n//   };\n\n//   const navLinkActiveStyle = {\n//     backgroundColor: '#ffffff',\n//     color: '#374151'\n//   };\n\n//   const contentStyle = {\n//     flex: 1,\n//     padding: '24px',\n//     backgroundColor: '#f9fafb',\n//     height: '100vh',\n//     overflowY: 'auto'\n//   };\n\n//   const topbarStyle = {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     backgroundColor: '#ffffff',\n//     padding: '16px 24px',\n//     borderBottom: '1px solid #e5e7eb',\n//     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n//   };\n\n//   const appShellStyle = {\n//     display: 'flex',\n//     fontFamily: 'Segoe UI, Roboto, sans-serif',\n//     fontSize: '14px',\n//     color: '#111827'\n//   };\n\n//   const menuButtonStyle = {\n//     background: 'none',\n//     border: 'none',\n//     color: '#e5e7eb',\n//     cursor: 'pointer',\n//     marginRight: '8px',\n//     padding: '4px'\n//   };\n\n//   const userInfoStyle = {\n//     fontSize: '17px',\n//     lineHeight: '1.5',\n//     padding: '12px',\n//     backgroundColor: '#1f2937',\n//     borderRadius: '6px',\n//     marginTop: '12px'\n//   };\n\n//   const btnLinkStyle = {\n//     background: 'none',\n//     border: 'none',\n//     color: '#3b82f6',\n//     cursor: 'pointer',\n//     padding: '0',\n//     marginTop: '8px',\n//     fontSize: '13px'\n//   };\n\n//   const navItems = [\n//     { path: '/for-you', label: 'For You' },\n//     // { path: '/projects', label: 'Projects' },\n//     { path: currentProjectName ? `/kanban/${currentProjectName}` : '/kanban/:name', label: 'Boards' },\n//     { path: '/assets', label: 'Assets' },\n//     { path: '/timeline', label: 'Timeline' },\n//     // { path: '/users', label: 'Users' },\n//   ];\n\n//   return (\n//     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n//       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n//         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n//         </div>\n//         <nav role=\"navigation\" aria-label=\"Main\">\n//           {navItems.map(({ path, label }) => (\n//             <NavLink\n//               key={path}\n//               to={path}\n//               style={({ isActive }) =>\n//                 isActive\n//                   ? { ...navLinkStyle, ...navLinkActiveStyle }\n//                   : navLinkStyle\n//               }\n//               end\n//             >\n//               {sidebarOpen ? label : label.charAt(0)}\n//             </NavLink>\n//           ))}\n//         </nav>\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle} aria-label=\"User Profile\">\n//               <div><strong>{user.name}</strong></div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n//             </div>\n//           ) : (\n//             <NavLink to=\"/login\" style={navLinkStyle}>Sign in</NavLink>\n//           )}\n//         </div>\n//       </aside>\n//       <div style={contentStyle}>\n//         <header style={topbarStyle} role=\"banner\">\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo â€¢ keyboard friendly</div>\n//         </header>\n//         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<ProjectList />} />\n//             <Route path=\"/projects/:id\" element={<ProjectView />} />\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\n//             <Route path=\"/assets\" element={<Assets />} />\n//             <Route path=\"/timeline\" element={<Timeline />} />\n//             <Route path=\"/users\" element={<Users />} />\n//             <Route path=\"/notifications\" element={<Notifications />} />\n//             <Route path=\"/for-you\" element={<ForYou />} />\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n///////////////////////////////////////////////////////////////////////////////////////","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/App.js"],"sourcesContent":["\n\n\n\n// //for project boards\n// import React, { useState, useEffect } from 'react';\n// import { Routes, Route, NavLink, Navigate, useNavigate } from 'react-router-dom';\n// import { AuthProvider, useAuth } from './context/AuthContext';\n// import { ProjectProvider, useProjects } from './context/ProjectContext';\n \n// import Login from './components/auth/Login';\n// import Users from './components/users/Users';\n// import ProjectList from './components/projects/ProjectList';\n// import ProjectView from './components/projects/ProjectView';\n// import KanbanBoard from './components/boards/KanbanBoard';\n// import Backlog from './components/backlog/Backlog';\n// import IssueDetails from './components/issues/IssueDetails';\n// import IssueCreate from './components/issues/IssueCreate';\n// import Assets from './components/assets/Assets';\n// import Timeline from './components/timeline/Timeline';\n// import ForYou from './components/dashboard/ForYou';\n// import Notifications from './components/notifications/Notifications';\n// import { FiMenu } from 'react-icons/fi';\n \n// // PrivateRoute: Only allows authenticated users\n// function PrivateRoute({ children }) {\n//   const { user } = useAuth();\n//   return user ? children : <Navigate to=\"/login\" replace />;\n// }\n \n// export default function App() {\n//   return (\n//     <AuthProvider>\n//       <ProjectProvider>\n//         <Routes>\n//           <Route path=\"/\" element={<AuthLanding />} />\n//           <Route path=\"/login\" element={<LoginRedirectAfterAuth />} />\n//           <Route path=\"/*\" element={\n//             <PrivateRoute>\n//               <Layout />\n//             </PrivateRoute>\n//           } />\n//         </Routes>\n//       </ProjectProvider>\n//     </AuthProvider>\n//   );\n// }\n \n// function AuthLanding() {\n//   const { user } = useAuth();\n//   if (!user) {\n//     return <Navigate to=\"/login\" replace />;\n//   } else {\n//     return <Navigate to=\"/for-you\" replace />;\n//   }\n// }\n \n// function LoginRedirectAfterAuth() {\n//   const { user } = useAuth();\n//   const navigate = useNavigate();\n \n//   useEffect(() => {\n//     if (user) {\n//       navigate(\"/for-you\", { replace: true });\n//     }\n//   }, [user, navigate]);\n \n//   return <Login />;\n// }\n \n// function Layout() {\n//   const { user, logout } = useAuth();\n//   const { projects } = useProjects();\n \n//   const [sidebarOpen, setSidebarOpen] = useState(true);\n//   const [currentProjectName, setCurrentProjectName] = useState(null);\n \n//   useEffect(() => {\n//     if (projects.length > 0) {\n//       setCurrentProjectName(projects[0].name);\n//     } else {\n//       setCurrentProjectName(null);\n//     }\n//   }, [projects]);\n \n//   const toggleSidebar = () => setSidebarOpen(prev => !prev);\n \n//   const sidebarStyle = {\n//     width: sidebarOpen ? '240px' : '70px',\n//     transition: 'width 0.3s ease',\n//     backgroundColor: '#111827',\n//     color: '#fff',\n//     height: '100vh',\n//     padding: '16px 12px',\n//     boxSizing: 'border-box',\n//     display: 'flex',\n//     flexDirection: 'column',\n//     justifyContent: 'space-between',\n//     boxShadow: '2px 0 8px rgba(0,0,0,0.1)'\n//   };\n \n//   const navLinkStyle = {\n//     display: 'block',\n//     padding: sidebarOpen ? '10px 16px' : '10px 0',\n//     color: '#e5e7eb',\n//     textDecoration: 'none',\n//     fontSize: '15px',\n//     margin: '6px 0',\n//     borderRadius: '6px',\n//     backgroundColor: '#1f2937',\n//     transition: 'all 0.2s ease',\n//     fontWeight: '500',\n//     textAlign: sidebarOpen ? 'left' : 'center'\n//   };\n \n//   const navLinkActiveStyle = {\n//     backgroundColor: '#ffffff',\n//     color: '#374151'\n//   };\n \n//   const contentStyle = {\n//     flex: 1,\n//     padding: '24px',\n//     backgroundColor: '#f9fafb',\n//     height: '100vh',\n//     overflowY: 'auto'\n//   };\n \n//   const topbarStyle = {\n//     display: 'flex',\n//     justifyContent: 'space-between',\n//     alignItems: 'center',\n//     backgroundColor: '#ffffff',\n//     padding: '16px 24px',\n//     borderBottom: '1px solid #e5e7eb',\n//     boxShadow: '0 1px 4px rgba(0,0,0,0.05)'\n//   };\n \n//   const appShellStyle = {\n//     display: 'flex',\n//     fontFamily: 'Segoe UI, Roboto, sans-serif',\n//     fontSize: '14px',\n//     color: '#111827'\n//   };\n \n//   const menuButtonStyle = {\n//     background: 'none',\n//     border: 'none',\n//     color: '#e5e7eb',\n//     cursor: 'pointer',\n//     marginRight: '8px',\n//     padding: '4px'\n//   };\n \n//   const userInfoStyle = {\n//     fontSize: '17px',\n//     lineHeight: '1.5',\n//     padding: '12px',\n//     backgroundColor: '#1f2937',\n//     borderRadius: '6px',\n//     marginTop: '12px'\n//   };\n \n//   const btnLinkStyle = {\n//     background: 'none',\n//     border: 'none',\n//     color: '#3b82f6',\n//     cursor: 'pointer',\n//     padding: '0',\n//     marginTop: '8px',\n//     fontSize: '13px'\n//   };\n \n//   const navItems = [\n//     { path: '/for-you', label: 'For You' },\n//     // { path: '/projects', label: 'Projects' },\n//     { path: currentProjectName ? `/kanban/${currentProjectName}` : '/kanban/:name', label: 'Boards' },\n//     { path: '/assets', label: 'Assets' },\n//     { path: '/timeline', label: 'Timeline' },\n//     // { path: '/users', label: 'Users' },\n//   ];\n \n//   return (\n//     <div style={appShellStyle} role=\"application\" aria-label=\"Ticketing application\">\n//       <aside style={sidebarStyle} aria-label=\"Sidebar navigation\">\n//         <div style={{ display: 'flex', alignItems: 'center', marginBottom: '20px' }}>\n//           <button style={menuButtonStyle} onClick={toggleSidebar} aria-label=\"Toggle sidebar\">\n//             <FiMenu size={20} />\n//           </button>\n//           {sidebarOpen && <span style={{ fontWeight: 'bold' }}>Flow Track</span>}\n//         </div>\n//         <nav role=\"navigation\" aria-label=\"Main\">\n//           {navItems.map(({ path, label }) => (\n//             <NavLink\n//               key={path}\n//               to={path}\n//               style={({ isActive }) =>\n//                 isActive\n//                   ? { ...navLinkStyle, ...navLinkActiveStyle }\n//                   : navLinkStyle\n//               }\n//               end\n//             >\n//               {sidebarOpen ? label : label.charAt(0)}\n//             </NavLink>\n//           ))}\n//         </nav>\n//         <div>\n//           {user ? (\n//             <div style={userInfoStyle} aria-label=\"User Profile\">\n//               <div><strong>{user.name}</strong></div>\n//               <div>{user.email}</div>\n//               <button style={btnLinkStyle} onClick={logout}>Sign out</button>\n//             </div>\n//           ) : (\n//             <NavLink to=\"/login\" style={navLinkStyle}>Sign in</NavLink>\n//           )}\n//         </div>\n//       </aside>\n//       <div style={contentStyle}>\n//         <header style={topbarStyle} role=\"banner\">\n//           <div>\n//             <h1 style={{ margin: 0, fontSize: '20px' }}>Flow Track</h1>\n//           </div>\n//           <div style={{ fontSize: '12px', color: '#666' }}>Accessible demo â€¢ keyboard friendly</div>\n//         </header>\n//         <main id=\"main\" tabIndex=\"-1\" role=\"main\">\n//           <Routes>\n//             <Route path=\"/projects\" element={<ProjectList />} />\n//             <Route path=\"/projects/:id\" element={<ProjectView />} />\n//             <Route path=\"/kanban/:name\" element={<KanbanBoard />} />\n//             <Route path=\"/backlog/:id\" element={<Backlog />} />\n//             <Route path=\"/issues/new\" element={<IssueCreate />} />\n//             <Route path=\"/issues/:id\" element={<IssueDetails />} />\n//             <Route path=\"/assets\" element={<Assets />} />\n//             <Route path=\"/timeline\" element={<Timeline />} />\n//             <Route path=\"/users\" element={<Users />} />\n//             <Route path=\"/notifications\" element={<Notifications />} />\n//             <Route path=\"/for-you\" element={<ForYou />} />\n//             <Route path=\"*\" element={<Navigate to=\"/for-you\" replace />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n///////////////////////////////////////////////////////////////////////////////////////\n"],"mappings":";;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}