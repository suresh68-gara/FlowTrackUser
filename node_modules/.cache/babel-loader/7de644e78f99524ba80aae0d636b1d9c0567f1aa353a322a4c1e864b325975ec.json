{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmoun\\\\OneDrive\\\\Desktop\\\\newtieckettool\\\\src\\\\components\\\\projects\\\\ProjectList.js\",\n  _s = $RefreshSig$();\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName(''); setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(() => {\n// //     listProjects().then(setProjects);\n// //   }, []);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName('');\n// //     setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Name\n// //             <input value={name} onChange={e => setName(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Key\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <button className=\"btn\" onClick={create}>\n// //           <FiPlus /> Create\n// //         </button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>\n// //           {projects.map(p => (\n// //             <li key={p.id}>\n// //               <Link to={'/projects/' + p.id}>\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n// //               </Link>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n//  //////////////////////\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n\n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n\n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n\n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [lead, setLead] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLead, setEditLead] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     setProjects(await listProjects());\n//   };\n\n//   const create = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       lead: lead || 'Unassigned',\n//       description: '',\n//       leads: [],\n//       lastUpdated: now\n//     };\n//     await addProject(p);\n//     await loadProjects();\n//     setName('');\n//     setKey('');\n//     setLead('');\n//     setType('Software');\n//   };\n\n//   const remove = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       await loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLead(p.lead || '');\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditName('');\n//     setEditKey('');\n//     setEditLead('');\n//     setEditType('');\n//   };\n\n//   const saveEdit = async (id) => {\n//     const now = new Date().toISOString();\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       lead: editLead,\n//       type: editType,\n//       lastUpdated: now\n//     });\n//     setEditingId(null);\n//     await loadProjects();\n//   };\n\n//   const avatarStyle = {\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '50%',\n//     background: '#0052cc',\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: '600',\n//     marginRight: '8px',\n//     fontSize: '12px'\n//   };\n\n//   const typeBadgeStyle = (t) => {\n//     const colors = {\n//       Software: { bg: '#e3fcef', color: '#006644' },\n//       Business: { bg: '#deebff', color: '#0747a6' },\n//       Service: { bg: '#ffebe6', color: '#de350b' }\n//     };\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\n//     return {\n//       background: c.bg,\n//       color: c.color,\n//       padding: '0.25rem 0.6rem',\n//       borderRadius: '4px',\n//       fontSize: '12px',\n//       fontWeight: 600\n//     };\n//   };\n\n//   const getProjectColor = (id) => {\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\n//     const index = id.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const projectIconStyle = (id) => ({\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '4px',\n//     background: getProjectColor(id),\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: 600,\n//     marginRight: '8px',\n//     fontSize: '12px',\n//     textTransform: 'uppercase'\n//   });\n\n//   // Filtering\n//   const filteredProjects = projects.filter(p =>\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\n//   );\n\n//   // Sorting\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n//     return 0;\n//   });\n\n//   const toggleSort = (key) => {\n//     setSortConfig((prev) =>\n//       prev.key === key\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\n//         : { key, direction: 'asc' }\n//     );\n//   };\n\n//   const sortIcon = (col) => {\n//     if (sortConfig.key !== col) return null;\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\n//   };\n\n//   return (\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\n//       {/* Create Project */}\n//       {/* ... (same as before, keeping form part unchanged) ... */}\n\n//       {/* Project Table */}\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\n\n//         <input\n//           type=\"text\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//           placeholder=\"Search projects...\"\n//           style={{\n//             width: '100%',\n//             padding: '0.6rem',\n//             marginBottom: '1rem',\n//             border: '1px solid #dfe1e6',\n//             borderRadius: '4px'\n//           }}\n//         />\n\n//         {sortedProjects.length === 0 ? (\n//           <p>No projects found.</p>\n//         ) : (\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//             <thead>\n//               <tr>\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Key {sortIcon('key')}\n//                 </th>\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Name {sortIcon('name')}\n//                 </th>\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Type {sortIcon('type')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Lead {sortIcon('lead')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Last Updated {sortIcon('lastUpdated')}\n//                 </th>\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {sortedProjects.map(p => (\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\n//                     {editingId === p.id ? (\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\n//                     ) : (\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\n//                         {p.name}\n//                       </Link>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\n//                     ) : (\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\n//                         {p.lead || 'Unassigned'}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\n//                     {editingId === p.id ? (\n//                       <>\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\n//                         <button onClick={cancelEdit}><FiX /></button>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n//   const cancelEdit = () => { setEditingId(null); setEditName(''); setEditKey(''); setEditLeads([]); setEditType(''); };\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D' };\n//     return { background: c.bg, color: c.color, padding:'0.25rem 0.6rem', borderRadius:'4px', fontSize:'12px', fontWeight:600 };\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display:'flex', alignItems:'center' }}>\n//       {leadsArr.map((l,i) => (\n//         <div key={i} title={l} style={{\n//           width:'28px', height:'28px', borderRadius:'50%', background:leadColor(l), color:'#fff',\n//           display:'flex', alignItems:'center', justifyContent:'center',\n//           fontSize:'12px', fontWeight:600, marginLeft:i>0?-8:0, border:'2px solid #fff'\n//         }}>{l.charAt(0).toUpperCase()}</div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ display:'grid', gridTemplateColumns:'1fr 3fr', gap:'2rem', padding:'2rem', fontFamily:'Arial,sans-serif' }}>\n//       {/* Create Project Form */}\n//       <div style={{ background:'#fff', padding:'1.5rem', borderRadius:'8px', boxShadow:'0 2px 6px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom:'1rem', fontSize:'18px', color:'#172b4d' }}>Create Project</h2>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Name</label><input value={name} onChange={e=>setName(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Key</label><input value={key} onChange={e=>setKey(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Leads (comma separated)</label><input value={leads.join(',')} onChange={e=>setLeads(e.target.value.split(',').map(l=>l.trim()))} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Type</label><select value={type} onChange={e=>setType(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }}><option>Software</option><option>Business</option><option>Service</option></select></div>\n//         <button onClick={createProject} style={{ display:'flex', alignItems:'center', gap:'6px', background:'#0052CC', color:'#fff', border:'none', padding:'10px 16px', borderRadius:'4px', cursor:'pointer' }}><FiPlus /> Create</button>\n//       </div>\n\n//       {/* Jira-style Project Cards */}\n//       <div style={{ display:'grid', gridTemplateColumns:'repeat(auto-fill,minmax(300px,1fr))', gap:'1rem' }}>\n//         {projects.map(p => (\n//           <div key={p.id} style={{\n//             display:'flex', flexDirection:'column', padding:'1rem', borderRadius:'6px',\n//             boxShadow:'0 1px 3px rgba(0,0,0,0.1)', position:'relative',\n//             borderLeft:`6px solid ${leadColor(p.leads[0])}`, transition:'transform 0.2s',\n//           }}\n//           onMouseEnter={e=>e.currentTarget.style.transform='translateY(-3px)'}\n//           onMouseLeave={e=>e.currentTarget.style.transform='translateY(0)'}\n//           >\n//             <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               <div style={{ fontWeight:600, fontSize:'16px', color:'#172b4d' }}>{editingId===p.id?<input value={editName} onChange={e=>setEditName(e.target.value)} />:<span>{p.name}</span>}</div>\n//               <div style={{ display:'flex', gap:'6px', opacity:0.7 }}>\n//                 {editingId===p.id?(<>\n//                   <button onClick={()=>saveEdit(p.id)}><FiCheck /></button>\n//                   <button onClick={cancelEdit}><FiX /></button>\n//                 </>):(<>\n//                   <button onClick={()=>startEdit(p)}><FiEdit2 /></button>\n//                   <button onClick={()=>removeProject(p.id)}><FiTrash2 /></button>\n//                 </>)}\n//               </div>\n//             </div>\n//             <div style={{ margin:'0.5rem 0', color:'#6b778c', fontSize:'13px' }}>{p.key}</div>\n//             <div style={{ margin:'0.5rem 0' }}><span style={typeBadgeStyle(p.type)}>{p.type}</span></div>\n//             <div style={{ marginTop:'auto', display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               {editingId===p.id?<input value={editLeads.join(',')} onChange={e=>setEditLeads(e.target.value.split(',').map(l=>l.trim()))} />:renderLeads(p.leads)}\n//               <div style={{ fontSize:'12px', color:'#6b778c' }}>{p.lastUpdated?formatDistanceToNow(new Date(p.lastUpdated),{addSuffix:true}):'—'}</div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// //deepseek\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => { \n//     setEditingId(null); \n//     setEditName(''); \n//     setEditKey(''); \n//     setEditLeads([]); \n//     setEditType(''); \n//   };\n\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\n//     return c;\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//       <FiUsers size={14} color=\"#6B778C\" />\n//       {leadsArr.map((l, i) => (\n//         <div key={i} title={l} style={{\n//           width: '28px', \n//           height: '28px', \n//           borderRadius: '50%', \n//           background: leadColor(l), \n//           color: '#fff',\n//           display: 'flex', \n//           alignItems: 'center', \n//           justifyContent: 'center',\n//           fontSize: '12px', \n//           fontWeight: 600, \n//           marginLeft: i > 0 ? -8 : 0, \n//           border: '2px solid #fff',\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n//         }}>\n//           {l.charAt(0).toUpperCase()}\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ \n//         display: 'block', \n//         marginBottom: '4px', \n//         fontSize: '14px', \n//         fontWeight: 600, \n//         color: '#172B4D' \n//       }}>\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\n//         {label}\n//       </label>\n//       <input \n//         value={value} \n//         onChange={onChange}\n//         style={{ \n//           width: '100%', \n//           padding: '10px 12px', \n//           borderRadius: '4px', \n//           border: '1px solid #DFE1E6',\n//           fontSize: '14px',\n//           transition: 'all 0.2s'\n//         }}\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\n//         {...props}\n//       />\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ \n//       minHeight: '100vh', \n//       background: '#F4F5F7', \n//       padding: '2rem',\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n//     }}>\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n//         {/* Header */}\n//         <div style={{ marginBottom: '2rem' }}>\n//           <h1 style={{ \n//             fontSize: '24px', \n//             fontWeight: 600, \n//             color: '#172B4D',\n//             marginBottom: '4px'\n//           }}>\n//             Projects\n//           </h1>\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\n//             Manage your team's projects and settings\n//           </p>\n//         </div>\n\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\n//           {/* Create Project Form */}\n//           <div style={{ \n//             background: '#fff', \n//             padding: '1.5rem', \n//             borderRadius: '8px', \n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//             border: '1px solid #DFE1E6',\n//             height: 'fit-content',\n//             position: 'sticky',\n//             top: '2rem'\n//           }}>\n//             <h2 style={{ \n//               marginBottom: '1.5rem', \n//               fontSize: '16px', \n//               fontWeight: 600,\n//               color: '#172B4D',\n//               display: 'flex',\n//               alignItems: 'center',\n//               gap: '8px'\n//             }}>\n//               <FiPlus size={18} /> Create New Project\n//             </h2>\n\n//             <InputField \n//               label=\"Project Name\" \n//               value={name} \n//               onChange={e => setName(e.target.value)}\n//               icon={FiLayers}\n//               placeholder=\"Enter project name\"\n//             />\n\n//             <InputField \n//               label=\"Project Key\" \n//               value={key} \n//               onChange={e => setKey(e.target.value)}\n//               icon={FiKey}\n//               placeholder=\"PRJ\"\n//               style={{ textTransform: 'uppercase' }}\n//             />\n\n//             <InputField \n//               label=\"Leads (comma separated)\" \n//               value={leads.join(',')} \n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()))}\n//               icon={FiUsers}\n//               placeholder=\"John Doe, Jane Smith\"\n//             />\n\n//             <div style={{ marginBottom: '1.5rem' }}>\n//               <label style={{ \n//                 display: 'block', \n//                 marginBottom: '4px', \n//                 fontSize: '14px', \n//                 fontWeight: 600, \n//                 color: '#172B4D' \n//               }}>\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\n//                 Type\n//               </label>\n//               <select \n//                 value={type} \n//                 onChange={e => setType(e.target.value)} \n//                 style={{ \n//                   width: '100%', \n//                   padding: '10px 12px', \n//                   borderRadius: '4px', \n//                   border: '1px solid #DFE1E6',\n//                   fontSize: '14px',\n//                   background: '#fff'\n//                 }}\n//               >\n//                 <option value=\"Software\">💻 Software</option>\n//                 <option value=\"Business\">📊 Business</option>\n//                 <option value=\"Service\">🔧 Service</option>\n//               </select>\n//             </div>\n\n//             <button \n//               onClick={createProject} \n//               style={{ \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center',\n//                 gap: '8px', \n//                 background: '#0052CC', \n//                 color: '#fff', \n//                 border: 'none', \n//                 padding: '12px 20px', \n//                 borderRadius: '4px', \n//                 cursor: 'pointer',\n//                 fontSize: '14px',\n//                 fontWeight: 600,\n//                 width: '100%',\n//                 transition: 'all 0.2s'\n//               }}\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\n//             >\n//               <FiPlus size={16} /> Create Project\n//             </button>\n//           </div>\n\n//           {/* Project Grid */}\n//           <div>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               alignItems: 'center',\n//               marginBottom: '1rem'\n//             }}>\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\n//                 All Projects ({projects.length})\n//               </h3>\n//             </div>\n\n//             <div style={{ \n//               display: 'grid', \n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \n//               gap: '1rem' \n//             }}>\n//               {projects.map(p => (\n//                 <div key={p.id} style={{\n//                   display: 'flex', \n//                   flexDirection: 'column', \n//                   padding: '1.25rem',\n//                   borderRadius: '8px',\n//                   background: '#fff',\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \n//                   border: '1px solid #DFE1E6',\n//                   transition: 'all 0.2s ease',\n//                   position: 'relative',\n//                   overflow: 'hidden'\n//                 }}\n//                 onMouseEnter={e => {\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n//                 }}\n//                 onMouseLeave={e => {\n//                   e.currentTarget.style.transform = 'translateY(0)';\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n//                 }}\n//                 >\n//                   {/* Project Key Badge */}\n//                   <div style={{ \n//                     position: 'absolute',\n//                     top: '0',\n//                     right: '0',\n//                     background: '#DFE1E6',\n//                     color: '#172B4D',\n//                     padding: '4px 8px',\n//                     fontSize: '12px',\n//                     fontWeight: 600,\n//                     borderBottomLeftRadius: '4px'\n//                   }}>\n//                     {p.key}\n//                   </div>\n\n//                   {/* Project Header */}\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\n//                       {editingId === p.id ? (\n//                         <input \n//                           value={editName} \n//                           onChange={e => setEditName(e.target.value)}\n//                           style={{ \n//                             width: '100%', \n//                             padding: '6px 8px', \n//                             border: '1px solid #DFE1E6',\n//                             borderRadius: '4px',\n//                             fontSize: '14px'\n//                           }}\n//                         />\n//                       ) : (\n//                         <h4 style={{ \n//                           fontWeight: 600, \n//                           fontSize: '16px', \n//                           color: '#172B4D',\n//                           margin: 0,\n//                           lineHeight: 1.3\n//                         }}>\n//                           {p.name}\n//                         </h4>\n//                       )}\n//                     </div>\n\n//                     <div style={{ display: 'flex', gap: '4px' }}>\n//                       {editingId === p.id ? (\n//                         <>\n//                           <button \n//                             onClick={() => saveEdit(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#36B37E',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiCheck size={14} />\n//                           </button>\n//                           <button \n//                             onClick={cancelEdit}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#FF5630',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiX size={14} />\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <>\n//                           <button \n//                             onClick={() => startEdit(p)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#EBECF0';\n//                               e.target.style.color = '#172B4D';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiEdit2 size={14} />\n//                           </button>\n//                           <button \n//                             onClick={() => removeProject(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#FFEBE6';\n//                               e.target.style.color = '#DE350B';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiTrash2 size={14} />\n//                           </button>\n//                         </>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   {/* Project Type */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     <span style={{ \n//                       background: typeBadgeStyle(p.type).bg, \n//                       color: typeBadgeStyle(p.type).color, \n//                       padding: '4px 8px', \n//                       borderRadius: '4px', \n//                       fontSize: '12px', \n//                       fontWeight: 600,\n//                       display: 'inline-flex',\n//                       alignItems: 'center',\n//                       gap: '4px'\n//                     }}>\n//                       {typeBadgeStyle(p.type).icon} {p.type}\n//                     </span>\n//                   </div>\n\n//                   {/* Project Leads */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input \n//                         value={editLeads.join(',')} \n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()))}\n//                         style={{ \n//                           width: '100%', \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                         placeholder=\"Enter leads separated by commas\"\n//                       />\n//                     ) : renderLeads(p.leads)}\n//                   </div>\n\n//                   {/* Last Updated */}\n//                   <div style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     gap: '6px',\n//                     fontSize: '12px', \n//                     color: '#6B778C',\n//                     marginTop: 'auto',\n//                     paddingTop: '0.75rem',\n//                     borderTop: '1px solid #F4F5F7'\n//                   }}>\n//                     <FiCalendar size={12} />\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProjectList() {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [leads, setLeads] = useState(''); // Changed to string\n  const [type, setType] = useState('Software');\n  const [editingId, setEditingId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editKey, setEditKey] = useState('');\n  const [editLeads, setEditLeads] = useState(''); // Changed to string\n  const [editType, setEditType] = useState('');\n  useEffect(() => {\n    loadProjects();\n  }, []);\n  const loadProjects = async () => setProjects(await listProjects());\n  const createProject = async () => {\n    if (!name.trim()) return;\n    const now = new Date().toISOString();\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      type,\n      leads: leads.trim() ? leads.split(',').map(l => l.trim()) : ['Unassigned'],\n      // Convert to array here\n      description: '',\n      lastUpdated: now,\n      createdAt: now\n    };\n    await addProject(p);\n    setName('');\n    setKey('');\n    setLeads('');\n    setType('Software'); // Reset to empty string\n    loadProjects();\n  };\n  const removeProject = async id => {\n    if (window.confirm(\"Are you sure you want to delete this project?\")) {\n      await deleteProject(id);\n      loadProjects();\n    }\n  };\n  const startEdit = p => {\n    setEditingId(p.id);\n    setEditName(p.name);\n    setEditKey(p.key);\n    setEditLeads(p.leads.join(',')); // Convert array to string for editing\n    setEditType(p.type || 'Software');\n  };\n  const cancelEdit = () => {\n    setEditingId(null);\n    setEditName('');\n    setEditKey('');\n    setEditLeads('');\n    setEditType('');\n  };\n  const saveEdit = async id => {\n    await updateProject(id, {\n      name: editName,\n      key: editKey.toUpperCase(),\n      leads: editLeads.trim() ? editLeads.split(',').map(l => l.trim()) : ['Unassigned'],\n      // Convert to array here\n      type: editType,\n      lastUpdated: new Date().toISOString()\n    });\n    cancelEdit();\n    loadProjects();\n  };\n  const leadColor = name => {\n    const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n    if (!name) return '#6B778C';\n    const index = name.charCodeAt(0) % colors.length;\n    return colors[index];\n  };\n  const typeBadgeStyle = t => {\n    const colors = {\n      Software: {\n        bg: '#E3FCF7',\n        color: '#006644',\n        icon: '💻'\n      },\n      Business: {\n        bg: '#DEEBFF',\n        color: '#0747A6',\n        icon: '📊'\n      },\n      Service: {\n        bg: '#FFEBE6',\n        color: '#DE350B',\n        icon: '🔧'\n      }\n    };\n    const c = colors[t] || {\n      bg: '#F4F5F7',\n      color: '#172B4D',\n      icon: '📁'\n    };\n    return c;\n  };\n  const renderLeads = leadsArr => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '4px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FiUsers, {\n      size: 14,\n      color: \"#6B778C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1205,\n      columnNumber: 7\n    }, this), leadsArr.map((l, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      title: l,\n      style: {\n        width: '28px',\n        height: '28px',\n        borderRadius: '50%',\n        background: leadColor(l),\n        color: '#fff',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '12px',\n        fontWeight: 600,\n        marginLeft: i > 0 ? -8 : 0,\n        border: '2px solid #fff',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n      },\n      children: l.charAt(0).toUpperCase()\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1207,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1204,\n    columnNumber: 5\n  }, this);\n  const InputField = ({\n    label,\n    value,\n    onChange,\n    icon: Icon,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        display: 'block',\n        marginBottom: '4px',\n        fontSize: '14px',\n        fontWeight: 600,\n        color: '#172B4D'\n      },\n      children: [Icon && /*#__PURE__*/_jsxDEV(Icon, {\n        size: 14,\n        style: {\n          marginRight: '6px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1237,\n        columnNumber: 18\n      }, this), label]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: value,\n      onChange: onChange,\n      style: {\n        width: '100%',\n        padding: '10px 12px',\n        borderRadius: '4px',\n        border: '1px solid #DFE1E6',\n        fontSize: '14px',\n        transition: 'all 0.2s'\n      },\n      onFocus: e => e.target.style.borderColor = '#0052CC',\n      onBlur: e => e.target.style.borderColor = '#DFE1E6',\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1229,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      minHeight: '100vh',\n      background: '#F4F5F7',\n      padding: '2rem',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: '1400px',\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: '24px',\n            fontWeight: 600,\n            color: '#172B4D',\n            marginBottom: '4px'\n          },\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#6B778C',\n            fontSize: '14px'\n          },\n          children: \"Manage your team's projects and settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1276,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'grid',\n          gridTemplateColumns: '320px 1fr',\n          gap: '2rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#fff',\n            padding: '1.5rem',\n            borderRadius: '8px',\n            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n            border: '1px solid #DFE1E6',\n            height: 'fit-content',\n            position: 'sticky',\n            top: '2rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginBottom: '1.5rem',\n              fontSize: '16px',\n              fontWeight: 600,\n              color: '#172B4D',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1302,\n              columnNumber: 15\n            }, this), \" Create New Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Project Name\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            icon: FiLayers,\n            placeholder: \"Enter project name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Project Key\",\n            value: key,\n            onChange: e => setKey(e.target.value),\n            icon: FiKey,\n            placeholder: \"PRJ\",\n            style: {\n              textTransform: 'uppercase'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Leads (comma separated)\",\n            value: leads // Now using string directly\n            ,\n            onChange: e => setLeads(e.target.value) // Set as string, not array\n            ,\n            icon: FiUsers,\n            placeholder: \"John Doe, Jane Smith\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '1.5rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'block',\n                marginBottom: '4px',\n                fontSize: '14px',\n                fontWeight: 600,\n                color: '#172B4D'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FiLayers, {\n                size: 14,\n                style: {\n                  marginRight: '6px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1338,\n                columnNumber: 17\n              }, this), \"Type\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: type,\n              onChange: e => setType(e.target.value),\n              style: {\n                width: '100%',\n                padding: '10px 12px',\n                borderRadius: '4px',\n                border: '1px solid #DFE1E6',\n                fontSize: '14px',\n                background: '#fff'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Software\",\n                children: \"\\uD83D\\uDCBB Software\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1353,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Business\",\n                children: \"\\uD83D\\uDCCA Business\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Service\",\n                children: \"\\uD83D\\uDD27 Service\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1330,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: createProject,\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              gap: '8px',\n              background: '#0052CC',\n              color: '#fff',\n              border: 'none',\n              padding: '12px 20px',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '14px',\n              fontWeight: 600,\n              width: '100%',\n              transition: 'all 0.2s'\n            },\n            onMouseEnter: e => e.target.style.background = '#0747A6',\n            onMouseLeave: e => e.target.style.background = '#0052CC',\n            children: [/*#__PURE__*/_jsxDEV(FiPlus, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1380,\n              columnNumber: 15\n            }, this), \" Create Project\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '1rem'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '16px',\n                fontWeight: 600,\n                color: '#172B4D'\n              },\n              children: [\"All Projects (\", projects.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1392,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))',\n              gap: '1rem'\n            },\n            children: projects.map(p => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                padding: '1.25rem',\n                borderRadius: '8px',\n                background: '#fff',\n                boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n                border: '1px solid #DFE1E6',\n                transition: 'all 0.2s ease',\n                position: 'relative',\n                overflow: 'hidden'\n              },\n              onMouseEnter: e => {\n                e.currentTarget.style.transform = 'translateY(-2px)';\n                e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n              },\n              onMouseLeave: e => {\n                e.currentTarget.style.transform = 'translateY(0)';\n                e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '0',\n                  right: '0',\n                  background: '#DFE1E6',\n                  color: '#172B4D',\n                  padding: '4px 8px',\n                  fontSize: '12px',\n                  fontWeight: 600,\n                  borderBottomLeftRadius: '4px'\n                },\n                children: p.key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1425,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  alignItems: 'flex-start',\n                  marginBottom: '0.75rem'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    flex: 1,\n                    marginRight: '1rem'\n                  },\n                  children: editingId === p.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                    value: editName,\n                    onChange: e => setEditName(e.target.value),\n                    style: {\n                      width: '100%',\n                      padding: '6px 8px',\n                      border: '1px solid #DFE1E6',\n                      borderRadius: '4px',\n                      fontSize: '14px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1443,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n                    style: {\n                      fontWeight: 600,\n                      fontSize: '16px',\n                      color: '#172B4D',\n                      margin: 0,\n                      lineHeight: 1.3\n                    },\n                    children: p.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1455,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1441,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    gap: '4px'\n                  },\n                  children: editingId === p.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => saveEdit(p.id),\n                      style: {\n                        padding: '6px',\n                        border: 'none',\n                        background: '#36B37E',\n                        color: 'white',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FiCheck, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1481,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1470,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: cancelEdit,\n                      style: {\n                        padding: '6px',\n                        border: 'none',\n                        background: '#FF5630',\n                        color: 'white',\n                        borderRadius: '4px',\n                        cursor: 'pointer'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FiX, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1494,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1483,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => startEdit(p),\n                      style: {\n                        padding: '6px',\n                        border: 'none',\n                        background: 'transparent',\n                        color: '#6B778C',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        transition: 'all 0.2s'\n                      },\n                      onMouseEnter: e => {\n                        e.target.style.background = '#EBECF0';\n                        e.target.style.color = '#172B4D';\n                      },\n                      onMouseLeave: e => {\n                        e.target.style.background = 'transparent';\n                        e.target.style.color = '#6B778C';\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FiEdit2, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1519,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1499,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => removeProject(p.id),\n                      style: {\n                        padding: '6px',\n                        border: 'none',\n                        background: 'transparent',\n                        color: '#6B778C',\n                        borderRadius: '4px',\n                        cursor: 'pointer',\n                        transition: 'all 0.2s'\n                      },\n                      onMouseEnter: e => {\n                        e.target.style.background = '#FFEBE6';\n                        e.target.style.color = '#DE350B';\n                      },\n                      onMouseLeave: e => {\n                        e.target.style.background = 'transparent';\n                        e.target.style.color = '#6B778C';\n                      },\n                      children: /*#__PURE__*/_jsxDEV(FiTrash2, {\n                        size: 14\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1541,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1521,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1467,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1440,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    background: typeBadgeStyle(p.type).bg,\n                    color: typeBadgeStyle(p.type).color,\n                    padding: '4px 8px',\n                    borderRadius: '4px',\n                    fontSize: '12px',\n                    fontWeight: 600,\n                    display: 'inline-flex',\n                    alignItems: 'center',\n                    gap: '4px'\n                  },\n                  children: [typeBadgeStyle(p.type).icon, \" \", p.type]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1550,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1549,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginBottom: '1rem'\n                },\n                children: editingId === p.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  value: editLeads // Now using string directly\n                  ,\n                  onChange: e => setEditLeads(e.target.value) // Set as string, not array\n                  ,\n                  style: {\n                    width: '100%',\n                    padding: '6px 8px',\n                    border: '1px solid #DFE1E6',\n                    borderRadius: '4px',\n                    fontSize: '14px'\n                  },\n                  placeholder: \"Enter leads separated by commas\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1568,\n                  columnNumber: 23\n                }, this) : renderLeads(p.leads)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1566,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  gap: '6px',\n                  fontSize: '12px',\n                  color: '#6B778C',\n                  marginTop: 'auto',\n                  paddingTop: '0.75rem',\n                  borderTop: '1px solid #F4F5F7'\n                },\n                children: [/*#__PURE__*/_jsxDEV(FiCalendar, {\n                  size: 12\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1594,\n                  columnNumber: 21\n                }, this), \"Updated \", p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), {\n                  addSuffix: true\n                }) : '—']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1584,\n                columnNumber: 19\n              }, this)]\n            }, p.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1403,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1397,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1259,\n    columnNumber: 5\n  }, this);\n}\n_s(ProjectList, \"17m98oOzAzqzhywHlOY590qmdgw=\");\n_c = ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","listProjects","addProject","deleteProject","updateProject","v4","uuidv4","FiPlus","FiTrash2","FiEdit2","FiCheck","FiX","FiUsers","FiLayers","FiKey","FiCalendar","formatDistanceToNow","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectList","_s","projects","setProjects","name","setName","key","setKey","leads","setLeads","type","setType","editingId","setEditingId","editName","setEditName","editKey","setEditKey","editLeads","setEditLeads","editType","setEditType","loadProjects","createProject","trim","now","Date","toISOString","p","id","toUpperCase","split","map","l","description","lastUpdated","createdAt","removeProject","window","confirm","startEdit","join","cancelEdit","saveEdit","leadColor","colors","index","charCodeAt","length","typeBadgeStyle","t","Software","bg","color","icon","Business","Service","c","renderLeads","leadsArr","style","display","alignItems","gap","children","size","fileName","_jsxFileName","lineNumber","columnNumber","i","title","width","height","borderRadius","background","justifyContent","fontSize","fontWeight","marginLeft","border","boxShadow","charAt","InputField","label","value","onChange","Icon","props","marginBottom","marginRight","padding","transition","onFocus","e","target","borderColor","onBlur","minHeight","fontFamily","maxWidth","margin","gridTemplateColumns","position","top","placeholder","textTransform","onClick","cursor","onMouseEnter","onMouseLeave","flexDirection","overflow","currentTarget","transform","right","borderBottomLeftRadius","flex","lineHeight","marginTop","paddingTop","borderTop","addSuffix","_c","$RefreshReg$"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/components/projects/ProjectList.js"],"sourcesContent":["\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n\n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n\n// //   useEffect(()=>{ listProjects().then(setProjects); },[]);\n\n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase()||'PRJ', name, description:'', leads:[] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName(''); setKey('');\n// //   };\n\n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\"><label>Project Name<input value={name} onChange={e=>setName(e.target.value)} /></label></div>\n// //         <div className=\"form-row\"><label>Project Key<input value={key} onChange={e=>setKey(e.target.value)} /></label></div>\n// //         <button className=\"btn\" onClick={create}><FiPlus /> Create</button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>{projects.map(p=>(<li key={p.id}><Link to={'/projects/'+p.id}><strong>{p.name}</strong> <span className=\"small\">({p.key})</span></Link></li>))}</ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n\n\n// // import React, { useEffect, useState } from 'react';\n// // import { listProjects, addProject } from '../../services/mockApi';\n// // import { Link } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n// // import { FiPlus } from 'react-icons/fi';\n \n// // export default function ProjectList() {\n// //   const [projects, setProjects] = useState([]);\n// //   const [name, setName] = useState('');\n// //   const [key, setKey] = useState('');\n \n// //   useEffect(() => {\n// //     listProjects().then(setProjects);\n// //   }, []);\n \n// //   const create = async () => {\n// //     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n// //     await addProject(p);\n// //     setProjects(await listProjects());\n// //     setName('');\n// //     setKey('');\n// //   };\n \n// //   return (\n// //     <div className=\"grid\">\n// //       <div className=\"card\" aria-labelledby=\"proj-create\">\n// //         <h2 id=\"proj-create\">Create Project</h2>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Name\n// //             <input value={name} onChange={e => setName(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <div className=\"form-row\">\n// //           <label>\n// //             Project Key\n// //             <input value={key} onChange={e => setKey(e.target.value)} />\n// //           </label>\n// //         </div>\n// //         <button className=\"btn\" onClick={create}>\n// //           <FiPlus /> Create\n// //         </button>\n// //       </div>\n// //       <div className=\"card\" aria-labelledby=\"proj-list\">\n// //         <h2 id=\"proj-list\">Projects</h2>\n// //         <ul>\n// //           {projects.map(p => (\n// //             <li key={p.id}>\n// //               <Link to={'/projects/' + p.id}>\n// //                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n// //               </Link>\n// //             </li>\n// //           ))}\n// //         </ul>\n// //       </div>\n// //     </div>\n// //   );\n// // }\n \n//  //////////////////////\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus } from 'react-icons/fi';\n \n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n \n//   useEffect(() => {\n//     listProjects().then(setProjects);\n//   }, []);\n \n//   const create = async () => {\n//     const p = { id: uuidv4(), key: key.toUpperCase() || 'PRJ', name, description: '', leads: [] };\n//     await addProject(p);\n//     setProjects(await listProjects());\n//     setName('');\n//     setKey('');\n//   };\n \n//   return (\n//     <div className=\"grid\">\n//       <div className=\"card\" aria-labelledby=\"proj-create\">\n//         <h2 id=\"proj-create\">Create Project</h2>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Name\n//             <input value={name} onChange={e => setName(e.target.value)} />\n//           </label>\n//         </div>\n//         <div className=\"form-row\">\n//           <label>\n//             Project Key\n//             <input value={key} onChange={e => setKey(e.target.value)} />\n//           </label>\n//         </div>\n//         <button className=\"btn\" onClick={create}>\n//           <FiPlus /> Create\n//         </button>\n//       </div>\n//       <div className=\"card\" aria-labelledby=\"proj-list\">\n//         <h2 id=\"proj-list\">Projects</h2>\n//         <ul>\n//           {projects.map(p => (\n//             <li key={p.id}>\n//               <Link to={'/projects/' + p.id}>\n//                 <strong>{p.name}</strong> <span className=\"small\">({p.key})</span>\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { Link } from 'react-router-dom';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiChevronUp, FiChevronDown } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [lead, setLead] = useState('');\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLead, setEditLead] = useState('');\n//   const [editType, setEditType] = useState('');\n//   const [search, setSearch] = useState('');\n//   const [sortConfig, setSortConfig] = useState({ key: 'name', direction: 'asc' });\n\n//   useEffect(() => {\n//     loadProjects();\n//   }, []);\n\n//   const loadProjects = async () => {\n//     setProjects(await listProjects());\n//   };\n\n//   const create = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       lead: lead || 'Unassigned',\n//       description: '',\n//       leads: [],\n//       lastUpdated: now\n//     };\n//     await addProject(p);\n//     await loadProjects();\n//     setName('');\n//     setKey('');\n//     setLead('');\n//     setType('Software');\n//   };\n\n//   const remove = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       await loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLead(p.lead || '');\n//     setEditType(p.type || 'Software');\n//   };\n\n//   const cancelEdit = () => {\n//     setEditingId(null);\n//     setEditName('');\n//     setEditKey('');\n//     setEditLead('');\n//     setEditType('');\n//   };\n\n//   const saveEdit = async (id) => {\n//     const now = new Date().toISOString();\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       lead: editLead,\n//       type: editType,\n//       lastUpdated: now\n//     });\n//     setEditingId(null);\n//     await loadProjects();\n//   };\n\n//   const avatarStyle = {\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '50%',\n//     background: '#0052cc',\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: '600',\n//     marginRight: '8px',\n//     fontSize: '12px'\n//   };\n\n//   const typeBadgeStyle = (t) => {\n//     const colors = {\n//       Software: { bg: '#e3fcef', color: '#006644' },\n//       Business: { bg: '#deebff', color: '#0747a6' },\n//       Service: { bg: '#ffebe6', color: '#de350b' }\n//     };\n//     const c = colors[t] || { bg: '#f4f5f7', color: '#172b4d' };\n//     return {\n//       background: c.bg,\n//       color: c.color,\n//       padding: '0.25rem 0.6rem',\n//       borderRadius: '4px',\n//       fontSize: '12px',\n//       fontWeight: 600\n//     };\n//   };\n\n//   const getProjectColor = (id) => {\n//     const colors = ['#0052cc', '#2684ff', '#00a3bf', '#36b37e', '#ff991f', '#de350b', '#6554c0'];\n//     const index = id.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const projectIconStyle = (id) => ({\n//     width: '28px',\n//     height: '28px',\n//     borderRadius: '4px',\n//     background: getProjectColor(id),\n//     color: 'white',\n//     display: 'inline-flex',\n//     alignItems: 'center',\n//     justifyContent: 'center',\n//     fontWeight: 600,\n//     marginRight: '8px',\n//     fontSize: '12px',\n//     textTransform: 'uppercase'\n//   });\n\n//   // Filtering\n//   const filteredProjects = projects.filter(p =>\n//     p.name.toLowerCase().includes(search.toLowerCase()) ||\n//     p.key.toLowerCase().includes(search.toLowerCase()) ||\n//     (p.lead && p.lead.toLowerCase().includes(search.toLowerCase())) ||\n//     (p.type && p.type.toLowerCase().includes(search.toLowerCase()))\n//   );\n\n//   // Sorting\n//   const sortedProjects = [...filteredProjects].sort((a, b) => {\n//     const aVal = a[sortConfig.key]?.toString().toLowerCase() || '';\n//     const bVal = b[sortConfig.key]?.toString().toLowerCase() || '';\n//     if (aVal < bVal) return sortConfig.direction === 'asc' ? -1 : 1;\n//     if (aVal > bVal) return sortConfig.direction === 'asc' ? 1 : -1;\n//     return 0;\n//   });\n\n//   const toggleSort = (key) => {\n//     setSortConfig((prev) =>\n//       prev.key === key\n//         ? { key, direction: prev.direction === 'asc' ? 'desc' : 'asc' }\n//         : { key, direction: 'asc' }\n//     );\n//   };\n\n//   const sortIcon = (col) => {\n//     if (sortConfig.key !== col) return null;\n//     return sortConfig.direction === 'asc' ? <FiChevronUp /> : <FiChevronDown />;\n//   };\n\n//   return (\n//     <div style={{ display: 'grid', gridTemplateColumns: '1fr 3fr', gap: '2rem' }}>\n//       {/* Create Project */}\n//       {/* ... (same as before, keeping form part unchanged) ... */}\n\n//       {/* Project Table */}\n//       <div style={{ background: '#fff', borderRadius: '6px', padding: '1.5rem', boxShadow: '0 1px 4px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom: '1rem' }}>Projects</h2>\n\n//         <input\n//           type=\"text\"\n//           value={search}\n//           onChange={e => setSearch(e.target.value)}\n//           placeholder=\"Search projects...\"\n//           style={{\n//             width: '100%',\n//             padding: '0.6rem',\n//             marginBottom: '1rem',\n//             border: '1px solid #dfe1e6',\n//             borderRadius: '4px'\n//           }}\n//         />\n\n//         {sortedProjects.length === 0 ? (\n//           <p>No projects found.</p>\n//         ) : (\n//           <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n//             <thead>\n//               <tr>\n//                 <th onClick={() => toggleSort('key')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Key {sortIcon('key')}\n//                 </th>\n//                 <th onClick={() => toggleSort('name')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Name {sortIcon('name')}\n//                 </th>\n//                 <th onClick={() => toggleSort('type')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Type {sortIcon('type')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lead')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Lead {sortIcon('lead')}\n//                 </th>\n//                 <th onClick={() => toggleSort('lastUpdated')} style={{ cursor: 'pointer', padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7' }}>\n//                   Last Updated {sortIcon('lastUpdated')}\n//                 </th>\n//                 <th style={{ padding: '0.75rem 1rem', borderBottom: '1px solid #f0f0f0', background: '#f4f5f7', textAlign: 'right' }}>\n//                   Actions\n//                 </th>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {sortedProjects.map(p => (\n//                 <tr key={p.id} style={{ borderBottom: '1px solid #f0f0f0' }}>\n//                   <td style={{ padding: '0.75rem 1rem' }}>{p.key}</td>\n//                   <td style={{ padding: '0.75rem 1rem', display: 'flex', alignItems: 'center' }}>\n//                     <span style={projectIconStyle(p.id)}>{p.key.slice(0, 2)}</span>\n//                     {editingId === p.id ? (\n//                       <input value={editName} onChange={e => setEditName(e.target.value)} />\n//                     ) : (\n//                       <Link to={'/projects/' + p.id} style={{ fontWeight: 600, color: '#0052cc', textDecoration: 'none' }}>\n//                         {p.name}\n//                       </Link>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <select value={editType} onChange={e => setEditType(e.target.value)}>\n//                         <option value=\"Software\">Software</option>\n//                         <option value=\"Business\">Business</option>\n//                         <option value=\"Service\">Service</option>\n//                       </select>\n//                     ) : (\n//                       <span style={typeBadgeStyle(p.type)}>{p.type}</span>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input value={editLead} onChange={e => setEditLead(e.target.value)} />\n//                     ) : (\n//                       <div style={{ display: 'flex', alignItems: 'center' }}>\n//                         <span style={avatarStyle}>{p.lead ? p.lead.charAt(0).toUpperCase() : '?'}</span>\n//                         {p.lead || 'Unassigned'}\n//                       </div>\n//                     )}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', color: '#6b778c' }}>\n//                     {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </td>\n//                   <td style={{ padding: '0.75rem 1rem', textAlign: 'right' }}>\n//                     {editingId === p.id ? (\n//                       <>\n//                         <button onClick={() => saveEdit(p.id)}><FiCheck /></button>\n//                         <button onClick={cancelEdit}><FiX /></button>\n//                       </>\n//                     ) : (\n//                       <>\n//                         <button onClick={() => startEdit(p)}><FiEdit2 /></button>\n//                         <button onClick={() => remove(p.id)}><FiTrash2 /></button>\n//                       </>\n//                     )}\n//                   </td>\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </table>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n//   const cancelEdit = () => { setEditingId(null); setEditName(''); setEditKey(''); setEditLeads([]); setEditType(''); };\n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D' };\n//     return { background: c.bg, color: c.color, padding:'0.25rem 0.6rem', borderRadius:'4px', fontSize:'12px', fontWeight:600 };\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display:'flex', alignItems:'center' }}>\n//       {leadsArr.map((l,i) => (\n//         <div key={i} title={l} style={{\n//           width:'28px', height:'28px', borderRadius:'50%', background:leadColor(l), color:'#fff',\n//           display:'flex', alignItems:'center', justifyContent:'center',\n//           fontSize:'12px', fontWeight:600, marginLeft:i>0?-8:0, border:'2px solid #fff'\n//         }}>{l.charAt(0).toUpperCase()}</div>\n//       ))}\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ display:'grid', gridTemplateColumns:'1fr 3fr', gap:'2rem', padding:'2rem', fontFamily:'Arial,sans-serif' }}>\n//       {/* Create Project Form */}\n//       <div style={{ background:'#fff', padding:'1.5rem', borderRadius:'8px', boxShadow:'0 2px 6px rgba(0,0,0,0.1)' }}>\n//         <h2 style={{ marginBottom:'1rem', fontSize:'18px', color:'#172b4d' }}>Create Project</h2>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Name</label><input value={name} onChange={e=>setName(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Project Key</label><input value={key} onChange={e=>setKey(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Leads (comma separated)</label><input value={leads.join(',')} onChange={e=>setLeads(e.target.value.split(',').map(l=>l.trim()))} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }} /></div>\n//         <div style={{ marginBottom:'1rem' }}><label>Type</label><select value={type} onChange={e=>setType(e.target.value)} style={{ width:'100%', padding:'8px', borderRadius:'4px', border:'1px solid #ccc' }}><option>Software</option><option>Business</option><option>Service</option></select></div>\n//         <button onClick={createProject} style={{ display:'flex', alignItems:'center', gap:'6px', background:'#0052CC', color:'#fff', border:'none', padding:'10px 16px', borderRadius:'4px', cursor:'pointer' }}><FiPlus /> Create</button>\n//       </div>\n\n//       {/* Jira-style Project Cards */}\n//       <div style={{ display:'grid', gridTemplateColumns:'repeat(auto-fill,minmax(300px,1fr))', gap:'1rem' }}>\n//         {projects.map(p => (\n//           <div key={p.id} style={{\n//             display:'flex', flexDirection:'column', padding:'1rem', borderRadius:'6px',\n//             boxShadow:'0 1px 3px rgba(0,0,0,0.1)', position:'relative',\n//             borderLeft:`6px solid ${leadColor(p.leads[0])}`, transition:'transform 0.2s',\n//           }}\n//           onMouseEnter={e=>e.currentTarget.style.transform='translateY(-3px)'}\n//           onMouseLeave={e=>e.currentTarget.style.transform='translateY(0)'}\n//           >\n//             <div style={{ display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               <div style={{ fontWeight:600, fontSize:'16px', color:'#172b4d' }}>{editingId===p.id?<input value={editName} onChange={e=>setEditName(e.target.value)} />:<span>{p.name}</span>}</div>\n//               <div style={{ display:'flex', gap:'6px', opacity:0.7 }}>\n//                 {editingId===p.id?(<>\n//                   <button onClick={()=>saveEdit(p.id)}><FiCheck /></button>\n//                   <button onClick={cancelEdit}><FiX /></button>\n//                 </>):(<>\n//                   <button onClick={()=>startEdit(p)}><FiEdit2 /></button>\n//                   <button onClick={()=>removeProject(p.id)}><FiTrash2 /></button>\n//                 </>)}\n//               </div>\n//             </div>\n//             <div style={{ margin:'0.5rem 0', color:'#6b778c', fontSize:'13px' }}>{p.key}</div>\n//             <div style={{ margin:'0.5rem 0' }}><span style={typeBadgeStyle(p.type)}>{p.type}</span></div>\n//             <div style={{ marginTop:'auto', display:'flex', justifyContent:'space-between', alignItems:'center' }}>\n//               {editingId===p.id?<input value={editLeads.join(',')} onChange={e=>setEditLeads(e.target.value.split(',').map(l=>l.trim()))} />:renderLeads(p.leads)}\n//               <div style={{ fontSize:'12px', color:'#6b778c' }}>{p.lastUpdated?formatDistanceToNow(new Date(p.lastUpdated),{addSuffix:true}):'—'}</div>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n// //deepseek\n\n// import React, { useEffect, useState } from 'react';\n// import { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\n// import { v4 as uuidv4 } from 'uuid';\n// import { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\n// import { formatDistanceToNow } from 'date-fns';\n\n// export default function ProjectList() {\n//   const [projects, setProjects] = useState([]);\n//   const [name, setName] = useState('');\n//   const [key, setKey] = useState('');\n//   const [leads, setLeads] = useState([]);\n//   const [type, setType] = useState('Software');\n//   const [editingId, setEditingId] = useState(null);\n//   const [editName, setEditName] = useState('');\n//   const [editKey, setEditKey] = useState('');\n//   const [editLeads, setEditLeads] = useState([]);\n//   const [editType, setEditType] = useState('');\n\n//   useEffect(() => { loadProjects(); }, []);\n//   const loadProjects = async () => setProjects(await listProjects());\n\n//   const createProject = async () => {\n//     if (!name.trim()) return;\n//     const now = new Date().toISOString();\n//     const p = {\n//       id: uuidv4(),\n//       key: key.toUpperCase() || 'PRJ',\n//       name,\n//       type,\n//       leads: leads.length ? leads : ['Unassigned'],\n//       description: '',\n//       lastUpdated: now,\n//       createdAt: now\n//     };\n//     await addProject(p);\n//     setName(''); setKey(''); setLeads([]); setType('Software');\n//     loadProjects();\n//   };\n\n//   const removeProject = async (id) => {\n//     if (window.confirm(\"Are you sure you want to delete this project?\")) {\n//       await deleteProject(id);\n//       loadProjects();\n//     }\n//   };\n\n//   const startEdit = (p) => {\n//     setEditingId(p.id);\n//     setEditName(p.name);\n//     setEditKey(p.key);\n//     setEditLeads(p.leads || []);\n//     setEditType(p.type || 'Software');\n//   };\n  \n//   const cancelEdit = () => { \n//     setEditingId(null); \n//     setEditName(''); \n//     setEditKey(''); \n//     setEditLeads([]); \n//     setEditType(''); \n//   };\n  \n//   const saveEdit = async (id) => {\n//     await updateProject(id, {\n//       name: editName,\n//       key: editKey.toUpperCase(),\n//       leads: editLeads.length ? editLeads : ['Unassigned'],\n//       type: editType,\n//       lastUpdated: new Date().toISOString()\n//     });\n//     cancelEdit();\n//     loadProjects();\n//   };\n\n//   const leadColor = (name) => {\n//     const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n//     if (!name) return '#6B778C';\n//     const index = name.charCodeAt(0) % colors.length;\n//     return colors[index];\n//   };\n\n//   const typeBadgeStyle = t => {\n//     const colors = {\n//       Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\n//       Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\n//       Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\n//     };\n//     const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\n//     return c;\n//   };\n\n//   const renderLeads = (leadsArr) => (\n//     <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n//       <FiUsers size={14} color=\"#6B778C\" />\n//       {leadsArr.map((l, i) => (\n//         <div key={i} title={l} style={{\n//           width: '28px', \n//           height: '28px', \n//           borderRadius: '50%', \n//           background: leadColor(l), \n//           color: '#fff',\n//           display: 'flex', \n//           alignItems: 'center', \n//           justifyContent: 'center',\n//           fontSize: '12px', \n//           fontWeight: 600, \n//           marginLeft: i > 0 ? -8 : 0, \n//           border: '2px solid #fff',\n//           boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n//         }}>\n//           {l.charAt(0).toUpperCase()}\n//         </div>\n//       ))}\n//     </div>\n//   );\n\n//   const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\n//     <div style={{ marginBottom: '1rem' }}>\n//       <label style={{ \n//         display: 'block', \n//         marginBottom: '4px', \n//         fontSize: '14px', \n//         fontWeight: 600, \n//         color: '#172B4D' \n//       }}>\n//         {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\n//         {label}\n//       </label>\n//       <input \n//         value={value} \n//         onChange={onChange}\n//         style={{ \n//           width: '100%', \n//           padding: '10px 12px', \n//           borderRadius: '4px', \n//           border: '1px solid #DFE1E6',\n//           fontSize: '14px',\n//           transition: 'all 0.2s'\n//         }}\n//         onFocus={(e) => e.target.style.borderColor = '#0052CC'}\n//         onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\n//         {...props}\n//       />\n//     </div>\n//   );\n\n//   return (\n//     <div style={{ \n//       minHeight: '100vh', \n//       background: '#F4F5F7', \n//       padding: '2rem',\n//       fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n//     }}>\n//       <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n//         {/* Header */}\n//         <div style={{ marginBottom: '2rem' }}>\n//           <h1 style={{ \n//             fontSize: '24px', \n//             fontWeight: 600, \n//             color: '#172B4D',\n//             marginBottom: '4px'\n//           }}>\n//             Projects\n//           </h1>\n//           <p style={{ color: '#6B778C', fontSize: '14px' }}>\n//             Manage your team's projects and settings\n//           </p>\n//         </div>\n\n//         <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\n//           {/* Create Project Form */}\n//           <div style={{ \n//             background: '#fff', \n//             padding: '1.5rem', \n//             borderRadius: '8px', \n//             boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n//             border: '1px solid #DFE1E6',\n//             height: 'fit-content',\n//             position: 'sticky',\n//             top: '2rem'\n//           }}>\n//             <h2 style={{ \n//               marginBottom: '1.5rem', \n//               fontSize: '16px', \n//               fontWeight: 600,\n//               color: '#172B4D',\n//               display: 'flex',\n//               alignItems: 'center',\n//               gap: '8px'\n//             }}>\n//               <FiPlus size={18} /> Create New Project\n//             </h2>\n            \n//             <InputField \n//               label=\"Project Name\" \n//               value={name} \n//               onChange={e => setName(e.target.value)}\n//               icon={FiLayers}\n//               placeholder=\"Enter project name\"\n//             />\n            \n//             <InputField \n//               label=\"Project Key\" \n//               value={key} \n//               onChange={e => setKey(e.target.value)}\n//               icon={FiKey}\n//               placeholder=\"PRJ\"\n//               style={{ textTransform: 'uppercase' }}\n//             />\n            \n//             <InputField \n//               label=\"Leads (comma separated)\" \n//               value={leads.join(',')} \n//               onChange={e => setLeads(e.target.value.split(',').map(l => l.trim()))}\n//               icon={FiUsers}\n//               placeholder=\"John Doe, Jane Smith\"\n//             />\n            \n//             <div style={{ marginBottom: '1.5rem' }}>\n//               <label style={{ \n//                 display: 'block', \n//                 marginBottom: '4px', \n//                 fontSize: '14px', \n//                 fontWeight: 600, \n//                 color: '#172B4D' \n//               }}>\n//                 <FiLayers size={14} style={{ marginRight: '6px' }} />\n//                 Type\n//               </label>\n//               <select \n//                 value={type} \n//                 onChange={e => setType(e.target.value)} \n//                 style={{ \n//                   width: '100%', \n//                   padding: '10px 12px', \n//                   borderRadius: '4px', \n//                   border: '1px solid #DFE1E6',\n//                   fontSize: '14px',\n//                   background: '#fff'\n//                 }}\n//               >\n//                 <option value=\"Software\">💻 Software</option>\n//                 <option value=\"Business\">📊 Business</option>\n//                 <option value=\"Service\">🔧 Service</option>\n//               </select>\n//             </div>\n            \n//             <button \n//               onClick={createProject} \n//               style={{ \n//                 display: 'flex', \n//                 alignItems: 'center', \n//                 justifyContent: 'center',\n//                 gap: '8px', \n//                 background: '#0052CC', \n//                 color: '#fff', \n//                 border: 'none', \n//                 padding: '12px 20px', \n//                 borderRadius: '4px', \n//                 cursor: 'pointer',\n//                 fontSize: '14px',\n//                 fontWeight: 600,\n//                 width: '100%',\n//                 transition: 'all 0.2s'\n//               }}\n//               onMouseEnter={(e) => e.target.style.background = '#0747A6'}\n//               onMouseLeave={(e) => e.target.style.background = '#0052CC'}\n//             >\n//               <FiPlus size={16} /> Create Project\n//             </button>\n//           </div>\n\n//           {/* Project Grid */}\n//           <div>\n//             <div style={{ \n//               display: 'flex', \n//               justifyContent: 'space-between', \n//               alignItems: 'center',\n//               marginBottom: '1rem'\n//             }}>\n//               <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\n//                 All Projects ({projects.length})\n//               </h3>\n//             </div>\n            \n//             <div style={{ \n//               display: 'grid', \n//               gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \n//               gap: '1rem' \n//             }}>\n//               {projects.map(p => (\n//                 <div key={p.id} style={{\n//                   display: 'flex', \n//                   flexDirection: 'column', \n//                   padding: '1.25rem',\n//                   borderRadius: '8px',\n//                   background: '#fff',\n//                   boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \n//                   border: '1px solid #DFE1E6',\n//                   transition: 'all 0.2s ease',\n//                   position: 'relative',\n//                   overflow: 'hidden'\n//                 }}\n//                 onMouseEnter={e => {\n//                   e.currentTarget.style.transform = 'translateY(-2px)';\n//                   e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n//                 }}\n//                 onMouseLeave={e => {\n//                   e.currentTarget.style.transform = 'translateY(0)';\n//                   e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n//                 }}\n//                 >\n//                   {/* Project Key Badge */}\n//                   <div style={{ \n//                     position: 'absolute',\n//                     top: '0',\n//                     right: '0',\n//                     background: '#DFE1E6',\n//                     color: '#172B4D',\n//                     padding: '4px 8px',\n//                     fontSize: '12px',\n//                     fontWeight: 600,\n//                     borderBottomLeftRadius: '4px'\n//                   }}>\n//                     {p.key}\n//                   </div>\n\n//                   {/* Project Header */}\n//                   <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\n//                     <div style={{ flex: 1, marginRight: '1rem' }}>\n//                       {editingId === p.id ? (\n//                         <input \n//                           value={editName} \n//                           onChange={e => setEditName(e.target.value)}\n//                           style={{ \n//                             width: '100%', \n//                             padding: '6px 8px', \n//                             border: '1px solid #DFE1E6',\n//                             borderRadius: '4px',\n//                             fontSize: '14px'\n//                           }}\n//                         />\n//                       ) : (\n//                         <h4 style={{ \n//                           fontWeight: 600, \n//                           fontSize: '16px', \n//                           color: '#172B4D',\n//                           margin: 0,\n//                           lineHeight: 1.3\n//                         }}>\n//                           {p.name}\n//                         </h4>\n//                       )}\n//                     </div>\n                    \n//                     <div style={{ display: 'flex', gap: '4px' }}>\n//                       {editingId === p.id ? (\n//                         <>\n//                           <button \n//                             onClick={() => saveEdit(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#36B37E',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiCheck size={14} />\n//                           </button>\n//                           <button \n//                             onClick={cancelEdit}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: '#FF5630',\n//                               color: 'white',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer'\n//                             }}\n//                           >\n//                             <FiX size={14} />\n//                           </button>\n//                         </>\n//                       ) : (\n//                         <>\n//                           <button \n//                             onClick={() => startEdit(p)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#EBECF0';\n//                               e.target.style.color = '#172B4D';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiEdit2 size={14} />\n//                           </button>\n//                           <button \n//                             onClick={() => removeProject(p.id)}\n//                             style={{\n//                               padding: '6px',\n//                               border: 'none',\n//                               background: 'transparent',\n//                               color: '#6B778C',\n//                               borderRadius: '4px',\n//                               cursor: 'pointer',\n//                               transition: 'all 0.2s'\n//                             }}\n//                             onMouseEnter={(e) => {\n//                               e.target.style.background = '#FFEBE6';\n//                               e.target.style.color = '#DE350B';\n//                             }}\n//                             onMouseLeave={(e) => {\n//                               e.target.style.background = 'transparent';\n//                               e.target.style.color = '#6B778C';\n//                             }}\n//                           >\n//                             <FiTrash2 size={14} />\n//                           </button>\n//                         </>\n//                       )}\n//                     </div>\n//                   </div>\n\n//                   {/* Project Type */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     <span style={{ \n//                       background: typeBadgeStyle(p.type).bg, \n//                       color: typeBadgeStyle(p.type).color, \n//                       padding: '4px 8px', \n//                       borderRadius: '4px', \n//                       fontSize: '12px', \n//                       fontWeight: 600,\n//                       display: 'inline-flex',\n//                       alignItems: 'center',\n//                       gap: '4px'\n//                     }}>\n//                       {typeBadgeStyle(p.type).icon} {p.type}\n//                     </span>\n//                   </div>\n\n//                   {/* Project Leads */}\n//                   <div style={{ marginBottom: '1rem' }}>\n//                     {editingId === p.id ? (\n//                       <input \n//                         value={editLeads.join(',')} \n//                         onChange={e => setEditLeads(e.target.value.split(',').map(l => l.trim()))}\n//                         style={{ \n//                           width: '100%', \n//                           padding: '6px 8px', \n//                           border: '1px solid #DFE1E6',\n//                           borderRadius: '4px',\n//                           fontSize: '14px'\n//                         }}\n//                         placeholder=\"Enter leads separated by commas\"\n//                       />\n//                     ) : renderLeads(p.leads)}\n//                   </div>\n\n//                   {/* Last Updated */}\n//                   <div style={{ \n//                     display: 'flex', \n//                     alignItems: 'center', \n//                     gap: '6px',\n//                     fontSize: '12px', \n//                     color: '#6B778C',\n//                     marginTop: 'auto',\n//                     paddingTop: '0.75rem',\n//                     borderTop: '1px solid #F4F5F7'\n//                   }}>\n//                     <FiCalendar size={12} />\n//                     Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { listProjects, addProject, deleteProject, updateProject } from '../../services/mockApi';\nimport { v4 as uuidv4 } from 'uuid';\nimport { FiPlus, FiTrash2, FiEdit2, FiCheck, FiX, FiUsers, FiLayers, FiKey, FiCalendar } from 'react-icons/fi';\nimport { formatDistanceToNow } from 'date-fns';\n\nexport default function ProjectList() {\n  const [projects, setProjects] = useState([]);\n  const [name, setName] = useState('');\n  const [key, setKey] = useState('');\n  const [leads, setLeads] = useState(''); // Changed to string\n  const [type, setType] = useState('Software');\n  const [editingId, setEditingId] = useState(null);\n  const [editName, setEditName] = useState('');\n  const [editKey, setEditKey] = useState('');\n  const [editLeads, setEditLeads] = useState(''); // Changed to string\n  const [editType, setEditType] = useState('');\n\n  useEffect(() => { loadProjects(); }, []);\n  const loadProjects = async () => setProjects(await listProjects());\n\n  const createProject = async () => {\n    if (!name.trim()) return;\n    const now = new Date().toISOString();\n    const p = {\n      id: uuidv4(),\n      key: key.toUpperCase() || 'PRJ',\n      name,\n      type,\n      leads: leads.trim() ? leads.split(',').map(l => l.trim()) : ['Unassigned'], // Convert to array here\n      description: '',\n      lastUpdated: now,\n      createdAt: now\n    };\n    await addProject(p);\n    setName(''); setKey(''); setLeads(''); setType('Software'); // Reset to empty string\n    loadProjects();\n  };\n\n  const removeProject = async (id) => {\n    if (window.confirm(\"Are you sure you want to delete this project?\")) {\n      await deleteProject(id);\n      loadProjects();\n    }\n  };\n\n  const startEdit = (p) => {\n    setEditingId(p.id);\n    setEditName(p.name);\n    setEditKey(p.key);\n    setEditLeads(p.leads.join(',')); // Convert array to string for editing\n    setEditType(p.type || 'Software');\n  };\n  \n  const cancelEdit = () => { \n    setEditingId(null); \n    setEditName(''); \n    setEditKey(''); \n    setEditLeads(''); \n    setEditType(''); \n  };\n  \n  const saveEdit = async (id) => {\n    await updateProject(id, {\n      name: editName,\n      key: editKey.toUpperCase(),\n      leads: editLeads.trim() ? editLeads.split(',').map(l => l.trim()) : ['Unassigned'], // Convert to array here\n      type: editType,\n      lastUpdated: new Date().toISOString()\n    });\n    cancelEdit();\n    loadProjects();\n  };\n\n  const leadColor = (name) => {\n    const colors = ['#0052CC', '#36B37E', '#FF5630', '#FFAB00', '#6554C0', '#00A3BF'];\n    if (!name) return '#6B778C';\n    const index = name.charCodeAt(0) % colors.length;\n    return colors[index];\n  };\n\n  const typeBadgeStyle = t => {\n    const colors = {\n      Software: { bg: '#E3FCF7', color: '#006644', icon: '💻' },\n      Business: { bg: '#DEEBFF', color: '#0747A6', icon: '📊' },\n      Service: { bg: '#FFEBE6', color: '#DE350B', icon: '🔧' }\n    };\n    const c = colors[t] || { bg: '#F4F5F7', color: '#172B4D', icon: '📁' };\n    return c;\n  };\n\n  const renderLeads = (leadsArr) => (\n    <div style={{ display: 'flex', alignItems: 'center', gap: '4px' }}>\n      <FiUsers size={14} color=\"#6B778C\" />\n      {leadsArr.map((l, i) => (\n        <div key={i} title={l} style={{\n          width: '28px', \n          height: '28px', \n          borderRadius: '50%', \n          background: leadColor(l), \n          color: '#fff',\n          display: 'flex', \n          alignItems: 'center', \n          justifyContent: 'center',\n          fontSize: '12px', \n          fontWeight: 600, \n          marginLeft: i > 0 ? -8 : 0, \n          border: '2px solid #fff',\n          boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n        }}>\n          {l.charAt(0).toUpperCase()}\n        </div>\n      ))}\n    </div>\n  );\n\n  const InputField = ({ label, value, onChange, icon: Icon, ...props }) => (\n    <div style={{ marginBottom: '1rem' }}>\n      <label style={{ \n        display: 'block', \n        marginBottom: '4px', \n        fontSize: '14px', \n        fontWeight: 600, \n        color: '#172B4D' \n      }}>\n        {Icon && <Icon size={14} style={{ marginRight: '6px' }} />}\n        {label}\n      </label>\n      <input \n        value={value} \n        onChange={onChange}\n        style={{ \n          width: '100%', \n          padding: '10px 12px', \n          borderRadius: '4px', \n          border: '1px solid #DFE1E6',\n          fontSize: '14px',\n          transition: 'all 0.2s'\n        }}\n        onFocus={(e) => e.target.style.borderColor = '#0052CC'}\n        onBlur={(e) => e.target.style.borderColor = '#DFE1E6'}\n        {...props}\n      />\n    </div>\n  );\n\n  return (\n    <div style={{ \n      minHeight: '100vh', \n      background: '#F4F5F7', \n      padding: '2rem',\n      fontFamily: '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", sans-serif'\n    }}>\n      <div style={{ maxWidth: '1400px', margin: '0 auto' }}>\n        {/* Header */}\n        <div style={{ marginBottom: '2rem' }}>\n          <h1 style={{ \n            fontSize: '24px', \n            fontWeight: 600, \n            color: '#172B4D',\n            marginBottom: '4px'\n          }}>\n            Projects\n          </h1>\n          <p style={{ color: '#6B778C', fontSize: '14px' }}>\n            Manage your team's projects and settings\n          </p>\n        </div>\n\n        <div style={{ display: 'grid', gridTemplateColumns: '320px 1fr', gap: '2rem' }}>\n          {/* Create Project Form */}\n          <div style={{ \n            background: '#fff', \n            padding: '1.5rem', \n            borderRadius: '8px', \n            boxShadow: '0 2px 8px rgba(0,0,0,0.1)',\n            border: '1px solid #DFE1E6',\n            height: 'fit-content',\n            position: 'sticky',\n            top: '2rem'\n          }}>\n            <h2 style={{ \n              marginBottom: '1.5rem', \n              fontSize: '16px', \n              fontWeight: 600,\n              color: '#172B4D',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px'\n            }}>\n              <FiPlus size={18} /> Create New Project\n            </h2>\n            \n            <InputField \n              label=\"Project Name\" \n              value={name} \n              onChange={e => setName(e.target.value)}\n              icon={FiLayers}\n              placeholder=\"Enter project name\"\n            />\n            \n            <InputField \n              label=\"Project Key\" \n              value={key} \n              onChange={e => setKey(e.target.value)}\n              icon={FiKey}\n              placeholder=\"PRJ\"\n              style={{ textTransform: 'uppercase' }}\n            />\n            \n            <InputField \n              label=\"Leads (comma separated)\" \n              value={leads} // Now using string directly\n              onChange={e => setLeads(e.target.value)} // Set as string, not array\n              icon={FiUsers}\n              placeholder=\"John Doe, Jane Smith\"\n            />\n            \n            <div style={{ marginBottom: '1.5rem' }}>\n              <label style={{ \n                display: 'block', \n                marginBottom: '4px', \n                fontSize: '14px', \n                fontWeight: 600, \n                color: '#172B4D' \n              }}>\n                <FiLayers size={14} style={{ marginRight: '6px' }} />\n                Type\n              </label>\n              <select \n                value={type} \n                onChange={e => setType(e.target.value)} \n                style={{ \n                  width: '100%', \n                  padding: '10px 12px', \n                  borderRadius: '4px', \n                  border: '1px solid #DFE1E6',\n                  fontSize: '14px',\n                  background: '#fff'\n                }}\n              >\n                <option value=\"Software\">💻 Software</option>\n                <option value=\"Business\">📊 Business</option>\n                <option value=\"Service\">🔧 Service</option>\n              </select>\n            </div>\n            \n            <button \n              onClick={createProject} \n              style={{ \n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                gap: '8px', \n                background: '#0052CC', \n                color: '#fff', \n                border: 'none', \n                padding: '12px 20px', \n                borderRadius: '4px', \n                cursor: 'pointer',\n                fontSize: '14px',\n                fontWeight: 600,\n                width: '100%',\n                transition: 'all 0.2s'\n              }}\n              onMouseEnter={(e) => e.target.style.background = '#0747A6'}\n              onMouseLeave={(e) => e.target.style.background = '#0052CC'}\n            >\n              <FiPlus size={16} /> Create Project\n            </button>\n          </div>\n\n          {/* Project Grid */}\n          <div>\n            <div style={{ \n              display: 'flex', \n              justifyContent: 'space-between', \n              alignItems: 'center',\n              marginBottom: '1rem'\n            }}>\n              <h3 style={{ fontSize: '16px', fontWeight: 600, color: '#172B4D' }}>\n                All Projects ({projects.length})\n              </h3>\n            </div>\n            \n            <div style={{ \n              display: 'grid', \n              gridTemplateColumns: 'repeat(auto-fill, minmax(320px, 1fr))', \n              gap: '1rem' \n            }}>\n              {projects.map(p => (\n                <div key={p.id} style={{\n                  display: 'flex', \n                  flexDirection: 'column', \n                  padding: '1.25rem',\n                  borderRadius: '8px',\n                  background: '#fff',\n                  boxShadow: '0 2px 4px rgba(0,0,0,0.1)', \n                  border: '1px solid #DFE1E6',\n                  transition: 'all 0.2s ease',\n                  position: 'relative',\n                  overflow: 'hidden'\n                }}\n                onMouseEnter={e => {\n                  e.currentTarget.style.transform = 'translateY(-2px)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0,0,0,0.15)';\n                }}\n                onMouseLeave={e => {\n                  e.currentTarget.style.transform = 'translateY(0)';\n                  e.currentTarget.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n                }}\n                >\n                  {/* Project Key Badge */}\n                  <div style={{ \n                    position: 'absolute',\n                    top: '0',\n                    right: '0',\n                    background: '#DFE1E6',\n                    color: '#172B4D',\n                    padding: '4px 8px',\n                    fontSize: '12px',\n                    fontWeight: 600,\n                    borderBottomLeftRadius: '4px'\n                  }}>\n                    {p.key}\n                  </div>\n\n                  {/* Project Header */}\n                  <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '0.75rem' }}>\n                    <div style={{ flex: 1, marginRight: '1rem' }}>\n                      {editingId === p.id ? (\n                        <input \n                          value={editName} \n                          onChange={e => setEditName(e.target.value)}\n                          style={{ \n                            width: '100%', \n                            padding: '6px 8px', \n                            border: '1px solid #DFE1E6',\n                            borderRadius: '4px',\n                            fontSize: '14px'\n                          }}\n                        />\n                      ) : (\n                        <h4 style={{ \n                          fontWeight: 600, \n                          fontSize: '16px', \n                          color: '#172B4D',\n                          margin: 0,\n                          lineHeight: 1.3\n                        }}>\n                          {p.name}\n                        </h4>\n                      )}\n                    </div>\n                    \n                    <div style={{ display: 'flex', gap: '4px' }}>\n                      {editingId === p.id ? (\n                        <>\n                          <button \n                            onClick={() => saveEdit(p.id)}\n                            style={{\n                              padding: '6px',\n                              border: 'none',\n                              background: '#36B37E',\n                              color: 'white',\n                              borderRadius: '4px',\n                              cursor: 'pointer'\n                            }}\n                          >\n                            <FiCheck size={14} />\n                          </button>\n                          <button \n                            onClick={cancelEdit}\n                            style={{\n                              padding: '6px',\n                              border: 'none',\n                              background: '#FF5630',\n                              color: 'white',\n                              borderRadius: '4px',\n                              cursor: 'pointer'\n                            }}\n                          >\n                            <FiX size={14} />\n                          </button>\n                        </>\n                      ) : (\n                        <>\n                          <button \n                            onClick={() => startEdit(p)}\n                            style={{\n                              padding: '6px',\n                              border: 'none',\n                              background: 'transparent',\n                              color: '#6B778C',\n                              borderRadius: '4px',\n                              cursor: 'pointer',\n                              transition: 'all 0.2s'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.target.style.background = '#EBECF0';\n                              e.target.style.color = '#172B4D';\n                            }}\n                            onMouseLeave={(e) => {\n                              e.target.style.background = 'transparent';\n                              e.target.style.color = '#6B778C';\n                            }}\n                          >\n                            <FiEdit2 size={14} />\n                          </button>\n                          <button \n                            onClick={() => removeProject(p.id)}\n                            style={{\n                              padding: '6px',\n                              border: 'none',\n                              background: 'transparent',\n                              color: '#6B778C',\n                              borderRadius: '4px',\n                              cursor: 'pointer',\n                              transition: 'all 0.2s'\n                            }}\n                            onMouseEnter={(e) => {\n                              e.target.style.background = '#FFEBE6';\n                              e.target.style.color = '#DE350B';\n                            }}\n                            onMouseLeave={(e) => {\n                              e.target.style.background = 'transparent';\n                              e.target.style.color = '#6B778C';\n                            }}\n                          >\n                            <FiTrash2 size={14} />\n                          </button>\n                        </>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Project Type */}\n                  <div style={{ marginBottom: '1rem' }}>\n                    <span style={{ \n                      background: typeBadgeStyle(p.type).bg, \n                      color: typeBadgeStyle(p.type).color, \n                      padding: '4px 8px', \n                      borderRadius: '4px', \n                      fontSize: '12px', \n                      fontWeight: 600,\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      gap: '4px'\n                    }}>\n                      {typeBadgeStyle(p.type).icon} {p.type}\n                    </span>\n                  </div>\n\n                  {/* Project Leads */}\n                  <div style={{ marginBottom: '1rem' }}>\n                    {editingId === p.id ? (\n                      <input \n                        value={editLeads} // Now using string directly\n                        onChange={e => setEditLeads(e.target.value)} // Set as string, not array\n                        style={{ \n                          width: '100%', \n                          padding: '6px 8px', \n                          border: '1px solid #DFE1E6',\n                          borderRadius: '4px',\n                          fontSize: '14px'\n                        }}\n                        placeholder=\"Enter leads separated by commas\"\n                      />\n                    ) : renderLeads(p.leads)}\n                  </div>\n\n                  {/* Last Updated */}\n                  <div style={{ \n                    display: 'flex', \n                    alignItems: 'center', \n                    gap: '6px',\n                    fontSize: '12px', \n                    color: '#6B778C',\n                    marginTop: 'auto',\n                    paddingTop: '0.75rem',\n                    borderTop: '1px solid #F4F5F7'\n                  }}>\n                    <FiCalendar size={12} />\n                    Updated {p.lastUpdated ? formatDistanceToNow(new Date(p.lastUpdated), { addSuffix: true }) : '—'}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAWA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}