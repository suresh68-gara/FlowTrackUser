{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n// import { useAuth } from \"../../context/AuthContext\";\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n\n//   const { user: authUser } = useAuth();\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 15 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs\n//     const newOrbs = Array.from({ length: 6 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 120 + 40,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler\n//     const handleMouseMove = (e) => {\n//       setMousePosition({\n//         x: (e.clientX / window.innerWidth) * 100,\n//         y: (e.clientY / window.innerHeight) * 100,\n//       });\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n//   }, []);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n\n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // Use auth user data if available\n//         if (authUser) {\n//           setUser(authUser);\n//         } else {\n//           setUser({ name: \"\" });\n//         }\n\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [authUser]);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\n//       `,\n//       transition: \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: 0.4,\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1400px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"3rem\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.8)\",\n//       fontSize: \"1.2rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       // backgroundColor: \"rgba(15, 15, 25, 0.7)\",\n//       // backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n//       backdropFilter: \"blur(25px)\",\n//       padding: \"2.5rem\",\n//       borderRadius: \"24px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       position: \"relative\",\n//       animation: \"slideUp 1.4s ease-out\",\n//       overflow: \"hidden\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: \"24px 24px 0 0\",\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"2rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"1rem\"\n//     },\n//     boardItem: {\n//       padding: \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.05)\",\n//       borderRadius: \"16px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(10px)\",\n//     },\n//     boardItemHover: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\n//       transform: \"translateY(-2px)\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\n//     },\n//     boardTitle: {\n//       fontSize: \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#F1F5F9\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.75rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.85rem\",\n//     },\n//     teamBadge: {\n//       padding: \"0.3rem 0.75rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       color: \"#60A5FA\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//     },\n//     itemsCount: {\n//       padding: \"0.3rem 0.75rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(168, 85, 247, 0.2)\",\n//       color: \"#A855F7\",\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: \"20px\",\n//       borderRadius: \"2px\",\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"rgba(255, 255, 255, 0.6)\",\n//       padding: \"3rem 1rem\",\n//       fontSize: \"1rem\",\n//       fontStyle: \"italic\",\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"5rem\",\n//       color: \"#FFFFFF\",\n//       position: \"relative\",\n//       zIndex: 10,\n//     },\n//     spinner: {\n//       width: \"50px\",\n//       height: \"50px\",\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\n//       borderTop: \"3px solid #60A5FA\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//     },\n//     viewAllButton: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//       color: \"#60A5FA\",\n//       padding: \"0.5rem 1rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.9rem\",\n//       fontWeight: \"600\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     viewAllButtonHover: {\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       transform: \"translateY(-1px)\",\n//     },\n//   };\n\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.backgroundOverlay} />\n//         <div style={styles.meshGradient} />\n\n//         <div style={styles.particlesContainer}>\n//           {orbs.map((orb) => (\n//             <div\n//               key={`orb-${orb.id}`}\n//               style={{\n//                 ...styles.orb,\n//                 width: `${orb.size}px`,\n//                 height: `${orb.size}px`,\n//                 left: `${orb.left}%`,\n//                 top: `${orb.top}%`,\n//                 background:\n//                   orb.id % 3 === 0\n//                     ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                     : orb.id % 3 === 1\n//                     ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                     : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//                 animationDelay: `${orb.animationDelay}s`,\n//                 animationDuration: `${orb.duration}s`,\n//               }}\n//             />\n//           ))}\n//         </div>\n\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n\n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           👋 Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🕒 Recently Viewed</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }} \n//                     onMouseEnter={() => setHoveredBoard(board.id)}\n//                     onMouseLeave={() => setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Viewed {board.lastViewed || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🗂️ Your Boards</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }}\n//                     onMouseEnter={() => setHoveredBoard(board.id)}\n//                     onMouseLeave={() => setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Updated {board.updated || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-1px) !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n//responsiveness\n// import React, { useEffect, useState } from 'react';\n// import { useAuth } from \"../../context/AuthContext\";\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   const { user: authUser } = useAuth();\n\n//   useEffect(() => {\n//     // Check if mobile on mount and resize\n//     const checkMobile = () => {\n//       setIsMobile(window.innerWidth < 768);\n//     };\n\n//     checkMobile();\n//     window.addEventListener('resize', checkMobile);\n\n//     // Create floating particles (fewer on mobile)\n//     const particleCount = window.innerWidth < 768 ? 8 : 15;\n//     const newParticles = Array.from({ length: particleCount }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs (fewer and smaller on mobile)\n//     const orbCount = window.innerWidth < 768 ? 3 : 6;\n//     const orbSize = window.innerWidth < 768 ? \n//       Math.random() * 60 + 20 : \n//       Math.random() * 120 + 40;\n\n//     const newOrbs = Array.from({ length: orbCount }, (_, i) => ({\n//       id: i,\n//       size: orbSize,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler (desktop only)\n//     const handleMouseMove = (e) => {\n//       if (window.innerWidth >= 768) {\n//         setMousePosition({\n//           x: (e.clientX / window.innerWidth) * 100,\n//           y: (e.clientY / window.innerHeight) * 100,\n//         });\n//       }\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => {\n//       window.removeEventListener(\"mousemove\", handleMouseMove);\n//       window.removeEventListener('resize', checkMobile);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n\n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n\n//         // Use auth user data if available\n//         if (authUser) {\n//           setUser(authUser);\n//         } else {\n//           setUser({ name: \"\" });\n//         }\n\n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [authUser]);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: isMobile ? \"1rem\" : \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: isMobile \n//         ? \"radial-gradient(circle at 50% 50%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\"\n//         : `radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)`,\n//       transition: isMobile ? \"none\" : \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: isMobile ? 0.3 : 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: isMobile ? \"blur(20px)\" : \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: isMobile ? 0.2 : 0.4,\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1400px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: isMobile ? \"2rem\" : \"3rem\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//       lineHeight: isMobile ? \"1.2\" : \"1.3\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.8)\",\n//       fontSize: isMobile ? \"1rem\" : \"1.2rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 2rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: isMobile ? \"1fr\" : \"1fr 1fr\",\n//       gap: isMobile ? \"1rem\" : \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       backdropFilter: \"blur(25px)\",\n//       padding: isMobile ? \"1.5rem\" : \"2.5rem\",\n//       borderRadius: isMobile ? \"16px\" : \"24px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       position: \"relative\",\n//       animation: \"slideUp 1.4s ease-out\",\n//       overflow: \"hidden\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: isMobile ? \"16px 16px 0 0\" : \"24px 24px 0 0\",\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\",\n//       marginBottom: isMobile ? \"1.5rem\" : \"2rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"1rem\" : \"0\"\n//     },\n//     cardTitle: {\n//       fontSize: isMobile ? \"1.25rem\" : \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: isMobile ? \"0.75rem\" : \"1rem\"\n//     },\n//     boardItem: {\n//       padding: isMobile ? \"1rem\" : \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.05)\",\n//       borderRadius: isMobile ? \"12px\" : \"16px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(10px)\",\n//     },\n//     boardItemHover: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-2px)\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\n//     },\n//     boardTitle: {\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#F1F5F9\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.75rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: isMobile ? \"0.75rem\" : \"0.85rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"0.5rem\" : \"0\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\"\n//     },\n//     teamBadge: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       color: \"#60A5FA\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//     },\n//     itemsCount: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(168, 85, 247, 0.2)\",\n//       color: \"#A855F7\",\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: isMobile ? \"16px\" : \"20px\",\n//       borderRadius: \"2px\",\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"rgba(255, 255, 255, 0.6)\",\n//       padding: isMobile ? \"2rem 1rem\" : \"3rem 1rem\",\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontStyle: \"italic\",\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: isMobile ? \"3rem\" : \"5rem\",\n//       color: \"#FFFFFF\",\n//       position: \"relative\",\n//       zIndex: 10,\n//     },\n//     spinner: {\n//       width: isMobile ? \"40px\" : \"50px\",\n//       height: isMobile ? \"40px\" : \"50px\",\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\n//       borderTop: \"3px solid #60A5FA\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//     },\n//     viewAllButton: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//       color: \"#60A5FA\",\n//       padding: isMobile ? \"0.4rem 0.8rem\" : \"0.5rem 1rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.8rem\" : \"0.9rem\",\n//       fontWeight: \"600\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//       width: isMobile ? \"100%\" : \"auto\",\n//       textAlign: \"center\",\n//     },\n//     viewAllButtonHover: {\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-1px)\",\n//     },\n//   };\n\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.backgroundOverlay} />\n//         <div style={styles.meshGradient} />\n\n//         <div style={styles.particlesContainer}>\n//           {orbs.map((orb) => (\n//             <div\n//               key={`orb-${orb.id}`}\n//               style={{\n//                 ...styles.orb,\n//                 width: `${orb.size}px`,\n//                 height: `${orb.size}px`,\n//                 left: `${orb.left}%`,\n//                 top: `${orb.top}%`,\n//                 background:\n//                   orb.id % 3 === 0\n//                     ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                     : orb.id % 3 === 1\n//                     ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                     : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//                 animationDelay: `${orb.animationDelay}s`,\n//                 animationDuration: `${orb.duration}s`,\n//               }}\n//             />\n//           ))}\n//         </div>\n\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n\n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           👋 Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Responsive Grid Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🕒 Recently Viewed</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }} \n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Viewed {board.lastViewed || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🗂️ Your Boards</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }}\n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Updated {board.updated || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: ${isMobile ? 'scale(1.02)' : 'translateY(-1px)'} !important;\n//           }\n\n//           /* Mobile-specific optimizations */\n//           @media (max-width: 768px) {\n//             body {\n//               -webkit-tap-highlight-color: transparent;\n//             }\n\n//             button:active {\n//               transform: scale(0.98) !important;\n//             }\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/vmoun/OneDrive/Desktop/forusers/userspage/src/components/dashboard/ForYou.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n// import { useAuth } from \"../../context/AuthContext\";\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n\n//   const { user: authUser } = useAuth();\n\n//   useEffect(() => {\n//     // Create floating particles\n//     const newParticles = Array.from({ length: 15 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs\n//     const newOrbs = Array.from({ length: 6 }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 120 + 40,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler\n//     const handleMouseMove = (e) => {\n//       setMousePosition({\n//         x: (e.clientX / window.innerWidth) * 100,\n//         y: (e.clientY / window.innerHeight) * 100,\n//       });\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => window.removeEventListener(\"mousemove\", handleMouseMove);\n//   }, []);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n    \n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n        \n//         // Use auth user data if available\n//         if (authUser) {\n//           setUser(authUser);\n//         } else {\n//           setUser({ name: \"\" });\n//         }\n        \n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n        \n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [authUser]);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\n//       `,\n//       transition: \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: 0.4,\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1400px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: \"3rem\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.8)\",\n//       fontSize: \"1.2rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 3rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\"\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: \"1fr 1fr\",\n//       gap: \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       // backgroundColor: \"rgba(15, 15, 25, 0.7)\",\n//       // backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n//       backdropFilter: \"blur(25px)\",\n//       padding: \"2.5rem\",\n//       borderRadius: \"24px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       position: \"relative\",\n//       animation: \"slideUp 1.4s ease-out\",\n//       overflow: \"hidden\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: \"24px 24px 0 0\",\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       marginBottom: \"2rem\"\n//     },\n//     cardTitle: {\n//       fontSize: \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: \"1rem\"\n//     },\n//     boardItem: {\n//       padding: \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.05)\",\n//       borderRadius: \"16px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(10px)\",\n//     },\n//     boardItemHover: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\n//       transform: \"translateY(-2px)\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\n//     },\n//     boardTitle: {\n//       fontSize: \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#F1F5F9\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.75rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: \"0.85rem\",\n//     },\n//     teamBadge: {\n//       padding: \"0.3rem 0.75rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       color: \"#60A5FA\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//     },\n//     itemsCount: {\n//       padding: \"0.3rem 0.75rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(168, 85, 247, 0.2)\",\n//       color: \"#A855F7\",\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: \"20px\",\n//       borderRadius: \"2px\",\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"rgba(255, 255, 255, 0.6)\",\n//       padding: \"3rem 1rem\",\n//       fontSize: \"1rem\",\n//       fontStyle: \"italic\",\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: \"5rem\",\n//       color: \"#FFFFFF\",\n//       position: \"relative\",\n//       zIndex: 10,\n//     },\n//     spinner: {\n//       width: \"50px\",\n//       height: \"50px\",\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\n//       borderTop: \"3px solid #60A5FA\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//     },\n//     viewAllButton: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//       color: \"#60A5FA\",\n//       padding: \"0.5rem 1rem\",\n//       borderRadius: \"12px\",\n//       fontSize: \"0.9rem\",\n//       fontWeight: \"600\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//     },\n//     viewAllButtonHover: {\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       transform: \"translateY(-1px)\",\n//     },\n//   };\n\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.backgroundOverlay} />\n//         <div style={styles.meshGradient} />\n        \n//         <div style={styles.particlesContainer}>\n//           {orbs.map((orb) => (\n//             <div\n//               key={`orb-${orb.id}`}\n//               style={{\n//                 ...styles.orb,\n//                 width: `${orb.size}px`,\n//                 height: `${orb.size}px`,\n//                 left: `${orb.left}%`,\n//                 top: `${orb.top}%`,\n//                 background:\n//                   orb.id % 3 === 0\n//                     ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                     : orb.id % 3 === 1\n//                     ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                     : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//                 animationDelay: `${orb.animationDelay}s`,\n//                 animationDuration: `${orb.duration}s`,\n//               }}\n//             />\n//           ))}\n//         </div>\n\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n        \n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           👋 Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Two Column Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🕒 Recently Viewed</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }} \n//                     onMouseEnter={() => setHoveredBoard(board.id)}\n//                     onMouseLeave={() => setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Viewed {board.lastViewed || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🗂️ Your Boards</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }}\n//                     onMouseEnter={() => setHoveredBoard(board.id)}\n//                     onMouseLeave={() => setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Updated {board.updated || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: translateY(-1px) !important;\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }\n\n\n\n\n\n\n\n\n//responsiveness\n// import React, { useEffect, useState } from 'react';\n// import { useAuth } from \"../../context/AuthContext\";\n\n// export default function ForYou() {\n//   const [user, setUser] = useState(null);\n//   const [recentlyViewed, setRecentlyViewed] = useState([]);\n//   const [yourBoards, setYourBoards] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n//   const [particles, setParticles] = useState([]);\n//   const [orbs, setOrbs] = useState([]);\n//   const [isMobile, setIsMobile] = useState(false);\n\n//   const { user: authUser } = useAuth();\n\n//   useEffect(() => {\n//     // Check if mobile on mount and resize\n//     const checkMobile = () => {\n//       setIsMobile(window.innerWidth < 768);\n//     };\n\n//     checkMobile();\n//     window.addEventListener('resize', checkMobile);\n\n//     // Create floating particles (fewer on mobile)\n//     const particleCount = window.innerWidth < 768 ? 8 : 15;\n//     const newParticles = Array.from({ length: particleCount }, (_, i) => ({\n//       id: i,\n//       size: Math.random() * 3 + 1,\n//       left: Math.random() * 100,\n//       animationDelay: Math.random() * 20,\n//       duration: Math.random() * 15 + 10,\n//       opacity: Math.random() * 0.6 + 0.2,\n//     }));\n//     setParticles(newParticles);\n\n//     // Create floating orbs (fewer and smaller on mobile)\n//     const orbCount = window.innerWidth < 768 ? 3 : 6;\n//     const orbSize = window.innerWidth < 768 ? \n//       Math.random() * 60 + 20 : \n//       Math.random() * 120 + 40;\n    \n//     const newOrbs = Array.from({ length: orbCount }, (_, i) => ({\n//       id: i,\n//       size: orbSize,\n//       left: Math.random() * 100,\n//       top: Math.random() * 100,\n//       animationDelay: Math.random() * 10,\n//       duration: Math.random() * 20 + 15,\n//     }));\n//     setOrbs(newOrbs);\n\n//     // Mouse move handler (desktop only)\n//     const handleMouseMove = (e) => {\n//       if (window.innerWidth >= 768) {\n//         setMousePosition({\n//           x: (e.clientX / window.innerWidth) * 100,\n//           y: (e.clientY / window.innerHeight) * 100,\n//         });\n//       }\n//     };\n\n//     window.addEventListener(\"mousemove\", handleMouseMove);\n//     return () => {\n//       window.removeEventListener(\"mousemove\", handleMouseMove);\n//       window.removeEventListener('resize', checkMobile);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     // Initialize empty data structures\n//     setRecentlyViewed([]);\n//     setYourBoards([]);\n    \n//     // Simulate API call to backend\n//     const fetchData = async () => {\n//       try {\n//         setLoading(true);\n        \n//         // Use auth user data if available\n//         if (authUser) {\n//           setUser(authUser);\n//         } else {\n//           setUser({ name: \"\" });\n//         }\n        \n//         setTimeout(() => {\n//           setLoading(false);\n//         }, 1000);\n        \n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchData();\n//   }, [authUser]);\n\n//   const styles = {\n//     container: {\n//       minHeight: \"100vh\",\n//       backgroundColor: \"#0a0a0f\",\n//       background: `\n//         radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),\n//         radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%),\n//         linear-gradient(135deg, #0a0a0f 0%, #1a1a2e 25%, #16213e 50%, #0a0a0f 100%)\n//       `,\n//       padding: isMobile ? \"1rem\" : \"2rem\",\n//       fontFamily: \"'Inter', -apple-system, BlinkMacSystemFont, sans-serif\",\n//       position: \"relative\",\n//       overflow: \"hidden\"\n//     },\n//     backgroundOverlay: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: isMobile \n//         ? \"radial-gradient(circle at 50% 50%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)\"\n//         : `radial-gradient(circle at ${mousePosition.x}% ${mousePosition.y}%, rgba(59, 130, 246, 0.1) 0%, transparent 50%)`,\n//       transition: isMobile ? \"none\" : \"background 0.3s ease\",\n//       pointerEvents: \"none\",\n//     },\n//     meshGradient: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       background: `\n//         conic-gradient(from 180deg at 50% 50%, \n//           rgba(59, 130, 246, 0.1) 0deg,\n//           rgba(168, 85, 247, 0.1) 60deg,\n//           rgba(236, 72, 153, 0.1) 120deg,\n//           rgba(59, 130, 246, 0.1) 180deg,\n//           rgba(34, 197, 94, 0.1) 240deg,\n//           rgba(59, 130, 246, 0.1) 360deg\n//         )\n//       `,\n//       animation: \"rotateMesh 30s linear infinite\",\n//       opacity: isMobile ? 0.3 : 0.6,\n//       pointerEvents: \"none\",\n//     },\n//     particlesContainer: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       width: \"100%\",\n//       height: \"100%\",\n//       pointerEvents: \"none\",\n//       zIndex: 1,\n//     },\n//     particle: {\n//       position: \"absolute\",\n//       background: \"linear-gradient(45deg, #60a5fa, #a855f7)\",\n//       borderRadius: \"50%\",\n//       animation: \"floatParticles 20s infinite linear\",\n//       filter: \"blur(1px)\",\n//     },\n//     orb: {\n//       position: \"absolute\",\n//       borderRadius: \"50%\",\n//       filter: isMobile ? \"blur(20px)\" : \"blur(40px)\",\n//       animation: \"floatOrbs 25s infinite ease-in-out alternate\",\n//       opacity: isMobile ? 0.2 : 0.4,\n//     },\n//     content: {\n//       position: \"relative\",\n//       zIndex: 10,\n//       maxWidth: \"1400px\",\n//       margin: \"0 auto\"\n//     },\n//     welcomeTitle: {\n//       fontSize: isMobile ? \"2rem\" : \"3rem\",\n//       fontWeight: \"800\",\n//       background: \"linear-gradient(135deg, #60A5FA 0%, #A855F7 50%, #EC4899 100%)\",\n//       WebkitBackgroundClip: \"text\",\n//       WebkitTextFillColor: \"transparent\",\n//       backgroundClip: \"text\",\n//       margin: \"0 0 0.5rem 0\",\n//       animation: \"fadeInUp 1s ease-out, textShimmer 3s ease-in-out infinite\",\n//       textShadow: \"0 2px 20px rgba(96, 165, 250, 0.3)\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//       lineHeight: isMobile ? \"1.2\" : \"1.3\"\n//     },\n//     subtitle: {\n//       color: \"rgba(255, 255, 255, 0.8)\",\n//       fontSize: isMobile ? \"1rem\" : \"1.2rem\",\n//       fontWeight: \"400\",\n//       margin: \"0 0 2rem 0\",\n//       animation: \"fadeInUp 1.2s ease-out\",\n//       textAlign: isMobile ? \"center\" : \"left\",\n//     },\n//     cardsContainer: {\n//       display: \"grid\",\n//       gridTemplateColumns: isMobile ? \"1fr\" : \"1fr 1fr\",\n//       gap: isMobile ? \"1rem\" : \"2rem\",\n//       marginBottom: \"2rem\"\n//     },\n//     card: {\n//       backdropFilter: \"blur(25px)\",\n//       padding: isMobile ? \"1.5rem\" : \"2.5rem\",\n//       borderRadius: isMobile ? \"16px\" : \"24px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       boxShadow: `\n//         0 32px 64px -12px rgba(0, 0, 0, 0.4),\n//         inset 0 1px 0 rgba(255, 255, 255, 0.1),\n//         0 0 0 1px rgba(255, 255, 255, 0.05)\n//       `,\n//       position: \"relative\",\n//       animation: \"slideUp 1.4s ease-out\",\n//       overflow: \"hidden\",\n//     },\n//     cardGlow: {\n//       position: \"absolute\",\n//       top: 0,\n//       left: 0,\n//       right: 0,\n//       height: \"2px\",\n//       background: \"linear-gradient(90deg, transparent, #60a5fa, #a855f7, transparent)\",\n//       animation: \"cardGlow 4s ease-in-out infinite\",\n//       borderRadius: isMobile ? \"16px 16px 0 0\" : \"24px 24px 0 0\",\n//     },\n//     cardHeader: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\",\n//       marginBottom: isMobile ? \"1.5rem\" : \"2rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"1rem\" : \"0\"\n//     },\n//     cardTitle: {\n//       fontSize: isMobile ? \"1.25rem\" : \"1.5rem\",\n//       fontWeight: \"700\",\n//       color: \"#F1F5F9\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.5rem\"\n//     },\n//     boardList: {\n//       listStyle: \"none\",\n//       padding: \"0\",\n//       margin: \"0\",\n//       display: \"flex\",\n//       flexDirection: \"column\",\n//       gap: isMobile ? \"0.75rem\" : \"1rem\"\n//     },\n//     boardItem: {\n//       padding: isMobile ? \"1rem\" : \"1.25rem\",\n//       background: \"rgba(255, 255, 255, 0.05)\",\n//       borderRadius: isMobile ? \"12px\" : \"16px\",\n//       border: \"1px solid rgba(255, 255, 255, 0.08)\",\n//       transition: \"all 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n//       cursor: \"pointer\",\n//       backdropFilter: \"blur(10px)\",\n//     },\n//     boardItemHover: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       borderColor: \"rgba(96, 165, 250, 0.3)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-2px)\",\n//       boxShadow: \"0 8px 32px rgba(96, 165, 250, 0.2)\",\n//     },\n//     boardTitle: {\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontWeight: \"600\",\n//       color: \"#F1F5F9\",\n//       margin: \"0 0 0.5rem 0\",\n//       display: \"flex\",\n//       alignItems: \"center\",\n//       gap: \"0.75rem\"\n//     },\n//     boardMeta: {\n//       display: \"flex\",\n//       justifyContent: \"space-between\",\n//       alignItems: \"center\",\n//       fontSize: isMobile ? \"0.75rem\" : \"0.85rem\",\n//       flexDirection: isMobile ? \"column\" : \"row\",\n//       gap: isMobile ? \"0.5rem\" : \"0\",\n//       alignItems: isMobile ? \"flex-start\" : \"center\"\n//     },\n//     teamBadge: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       color: \"#60A5FA\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//     },\n//     itemsCount: {\n//       padding: isMobile ? \"0.25rem 0.5rem\" : \"0.3rem 0.75rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.7rem\" : \"0.8rem\",\n//       fontWeight: \"600\",\n//       background: \"rgba(168, 85, 247, 0.2)\",\n//       color: \"#A855F7\",\n//       border: \"1px solid rgba(168, 85, 247, 0.3)\",\n//     },\n//     colorIndicator: {\n//       width: \"4px\",\n//       height: isMobile ? \"16px\" : \"20px\",\n//       borderRadius: \"2px\",\n//       background: \"linear-gradient(135deg, #60A5FA, #A855F7)\",\n//     },\n//     emptyState: {\n//       textAlign: \"center\",\n//       color: \"rgba(255, 255, 255, 0.6)\",\n//       padding: isMobile ? \"2rem 1rem\" : \"3rem 1rem\",\n//       fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n//       fontStyle: \"italic\",\n//     },\n//     loadingSpinner: {\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       padding: isMobile ? \"3rem\" : \"5rem\",\n//       color: \"#FFFFFF\",\n//       position: \"relative\",\n//       zIndex: 10,\n//     },\n//     spinner: {\n//       width: isMobile ? \"40px\" : \"50px\",\n//       height: isMobile ? \"40px\" : \"50px\",\n//       border: \"3px solid rgba(255, 255, 255, 0.3)\",\n//       borderTop: \"3px solid #60A5FA\",\n//       borderRadius: \"50%\",\n//       animation: \"spin 1s linear infinite\",\n//     },\n//     viewAllButton: {\n//       background: \"rgba(96, 165, 250, 0.1)\",\n//       border: \"1px solid rgba(96, 165, 250, 0.3)\",\n//       color: \"#60A5FA\",\n//       padding: isMobile ? \"0.4rem 0.8rem\" : \"0.5rem 1rem\",\n//       borderRadius: isMobile ? \"8px\" : \"12px\",\n//       fontSize: isMobile ? \"0.8rem\" : \"0.9rem\",\n//       fontWeight: \"600\",\n//       cursor: \"pointer\",\n//       transition: \"all 0.3s ease\",\n//       width: isMobile ? \"100%\" : \"auto\",\n//       textAlign: \"center\",\n//     },\n//     viewAllButtonHover: {\n//       background: \"rgba(96, 165, 250, 0.2)\",\n//       transform: isMobile ? \"scale(1.02)\" : \"translateY(-1px)\",\n//     },\n//   };\n\n//   const [hoveredBoard, setHoveredBoard] = useState(null);\n//   const [isViewAllHovered, setIsViewAllHovered] = useState(false);\n\n//   if (loading) {\n//     return (\n//       <div style={styles.container}>\n//         <div style={styles.backgroundOverlay} />\n//         <div style={styles.meshGradient} />\n        \n//         <div style={styles.particlesContainer}>\n//           {orbs.map((orb) => (\n//             <div\n//               key={`orb-${orb.id}`}\n//               style={{\n//                 ...styles.orb,\n//                 width: `${orb.size}px`,\n//                 height: `${orb.size}px`,\n//                 left: `${orb.left}%`,\n//                 top: `${orb.top}%`,\n//                 background:\n//                   orb.id % 3 === 0\n//                     ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                     : orb.id % 3 === 1\n//                     ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                     : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//                 animationDelay: `${orb.animationDelay}s`,\n//                 animationDuration: `${orb.duration}s`,\n//               }}\n//             />\n//           ))}\n//         </div>\n\n//         <div style={styles.loadingSpinner}>\n//           <div style={styles.spinner}></div>\n//         </div>\n        \n//         <style>\n//           {`\n//             @keyframes spin {\n//               0% { transform: rotate(0deg); }\n//               100% { transform: rotate(360deg); }\n//             }\n//           `}\n//         </style>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div style={styles.container}>\n//       {/* Background Effects */}\n//       <div style={styles.backgroundOverlay} />\n//       <div style={styles.meshGradient} />\n\n//       {/* Floating Orbs */}\n//       <div style={styles.particlesContainer}>\n//         {orbs.map((orb) => (\n//           <div\n//             key={`orb-${orb.id}`}\n//             style={{\n//               ...styles.orb,\n//               width: `${orb.size}px`,\n//               height: `${orb.size}px`,\n//               left: `${orb.left}%`,\n//               top: `${orb.top}%`,\n//               background:\n//                 orb.id % 3 === 0\n//                   ? \"radial-gradient(circle, #60a5fa, #3b82f6)\"\n//                   : orb.id % 3 === 1\n//                   ? \"radial-gradient(circle, #a855f7, #8b5cf6)\"\n//                   : \"radial-gradient(circle, #ec4899, #f43f5e)\",\n//               animationDelay: `${orb.animationDelay}s`,\n//               animationDuration: `${orb.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       {/* Animated Particles */}\n//       <div style={styles.particlesContainer}>\n//         {particles.map((particle) => (\n//           <div\n//             key={particle.id}\n//             style={{\n//               ...styles.particle,\n//               width: `${particle.size}px`,\n//               height: `${particle.size}px`,\n//               left: `${particle.left}%`,\n//               top: \"-20px\",\n//               opacity: particle.opacity,\n//               animationDelay: `${particle.animationDelay}s`,\n//               animationDuration: `${particle.duration}s`,\n//             }}\n//           />\n//         ))}\n//       </div>\n\n//       <div style={styles.content}>\n//         {/* Header */}\n//         <h1 style={styles.welcomeTitle}>\n//           👋 Welcome{user?.name ? `, ${user.name}` : ''}\n//         </h1>\n//         <p style={styles.subtitle}>Your workspace at a glance</p>\n\n//         {/* Responsive Grid Layout */}\n//         <div style={styles.cardsContainer}>\n//           {/* Recently Viewed Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🕒 Recently Viewed</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {recentlyViewed.length > 0 ? (\n//                 recentlyViewed.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }} \n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.teamBadge}>{board.team || \"Team\"}</span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Viewed {board.lastViewed || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No recently viewed boards</li>\n//               )}\n//             </ul>\n//           </div>\n\n//           {/* Your Boards Card */}\n//           <div style={styles.card}>\n//             <div style={styles.cardGlow} />\n//             <div style={styles.cardHeader}>\n//               <h2 style={styles.cardTitle}>🗂️ Your Boards</h2>\n//               <button \n//                 style={{\n//                   ...styles.viewAllButton,\n//                   ...(isViewAllHovered ? styles.viewAllButtonHover : {})\n//                 }}\n//                 onMouseEnter={() => setIsViewAllHovered(true)}\n//                 onMouseLeave={() => setIsViewAllHovered(false)}\n//                 onTouchStart={() => setIsViewAllHovered(true)}\n//                 onTouchEnd={() => setIsViewAllHovered(false)}\n//               >\n//                 View All\n//               </button>\n//             </div>\n//             <ul style={styles.boardList}>\n//               {yourBoards.length > 0 ? (\n//                 yourBoards.map((board) => (\n//                   <li \n//                     key={board.id} \n//                     style={{\n//                       ...styles.boardItem,\n//                       ...(hoveredBoard === board.id ? styles.boardItemHover : {})\n//                     }}\n//                     onMouseEnter={() => !isMobile && setHoveredBoard(board.id)}\n//                     onMouseLeave={() => !isMobile && setHoveredBoard(null)}\n//                     onTouchStart={() => isMobile && setHoveredBoard(board.id)}\n//                     onTouchEnd={() => isMobile && setHoveredBoard(null)}\n//                   >\n//                     <div style={styles.boardTitle}>\n//                       <div style={styles.colorIndicator} />\n//                       {board.title}\n//                     </div>\n//                     <div style={styles.boardMeta}>\n//                       <span style={styles.itemsCount}>\n//                         {board.items || 0} items\n//                       </span>\n//                       <span style={{color: \"rgba(255, 255, 255, 0.7)\"}}>\n//                         Updated {board.updated || \"recently\"}\n//                       </span>\n//                     </div>\n//                   </li>\n//                 ))\n//               ) : (\n//                 <li style={styles.emptyState}>No boards created yet</li>\n//               )}\n//             </ul>\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Enhanced CSS Animations */}\n//       <style>\n//         {`\n//           @keyframes floatParticles {\n//             0% {\n//               transform: translateY(0) rotate(0deg);\n//               opacity: 0;\n//             }\n//             10% {\n//               opacity: 1;\n//             }\n//             90% {\n//               opacity: 1;\n//             }\n//             100% {\n//               transform: translateY(100vh) rotate(360deg);\n//               opacity: 0;\n//             }\n//           }\n\n//           @keyframes floatOrbs {\n//             0% {\n//               transform: translateY(0px) translateX(0px) scale(1);\n//             }\n//             50% {\n//               transform: translateY(-50px) translateX(30px) scale(1.1);\n//             }\n//             100% {\n//               transform: translateY(-20px) translateX(-20px) scale(0.9);\n//             }\n//           }\n\n//           @keyframes rotateMesh {\n//             0% {\n//               transform: rotate(0deg);\n//             }\n//             100% {\n//               transform: rotate(360deg);\n//             }\n//           }\n\n//           @keyframes textShimmer {\n//             0%, 100% {\n//               background-position: 0% 50%;\n//             }\n//             50% {\n//               background-position: 100% 50%;\n//             }\n//           }\n\n//           @keyframes cardGlow {\n//             0%, 100% {\n//               opacity: 0.5;\n//               transform: scaleX(0.8);\n//             }\n//             50% {\n//               opacity: 1;\n//               transform: scaleX(1);\n//             }\n//           }\n\n//           @keyframes slideUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(40px) scale(0.95);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0) scale(1);\n//             }\n//           }\n\n//           @keyframes fadeInUp {\n//             0% {\n//               opacity: 0;\n//               transform: translateY(20px);\n//             }\n//             100% {\n//               opacity: 1;\n//               transform: translateY(0);\n//             }\n//           }\n\n//           @keyframes spin {\n//             0% { transform: rotate(0deg); }\n//             100% { transform: rotate(360deg); }\n//           }\n\n//           button:hover:not(:disabled) {\n//             transform: ${isMobile ? 'scale(1.02)' : 'translateY(-1px)'} !important;\n//           }\n\n//           /* Mobile-specific optimizations */\n//           @media (max-width: 768px) {\n//             body {\n//               -webkit-tap-highlight-color: transparent;\n//             }\n            \n//             button:active {\n//               transform: scale(0.98) !important;\n//             }\n//           }\n//         `}\n//       </style>\n//     </div>\n//   );\n// }"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}