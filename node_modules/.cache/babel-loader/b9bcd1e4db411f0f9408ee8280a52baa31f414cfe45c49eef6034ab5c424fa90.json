{"ast":null,"code":"// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n// for mounika\n\nimport { v4 as uuidv4 } from 'uuid';\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [{\n      id: 'u1',\n      name: 'Admin User',\n      email: 'admin@demo.com',\n      role: 'Admin'\n    }, {\n      id: 'u2',\n      name: 'Dev Alice',\n      email: 'alice@demo.com',\n      role: 'Developer'\n    }, {\n      id: 'u3',\n      name: 'Manager Bob',\n      email: 'bob@demo.com',\n      role: 'Manager'\n    }];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [{\n      id: 'p1',\n      key: 'ALPHA',\n      name: 'Alpha',\n      description: 'Alpha project',\n      leads: ['u3'],\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }, {\n      id: 'p2',\n      key: 'BETA',\n      name: 'Beta',\n      description: 'Beta project',\n      leads: ['u2'],\n      createdAt: Date.now(),\n      lastUpdated: Date.now()\n    }];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [{\n      id: 'i1',\n      projectId: 'p1',\n      title: 'Setup repo',\n      status: 'todo',\n      priority: 'P2',\n      assignee: 'u2',\n      type: 'Task',\n      storyPoints: 3,\n      createdAt: Date.now()\n    }, {\n      id: 'i2',\n      projectId: 'p1',\n      title: 'Login bug',\n      status: 'inprogress',\n      priority: 'P1',\n      assignee: 'u2',\n      type: 'Bug',\n      storyPoints: 1,\n      createdAt: Date.now()\n    }, {\n      id: 'i3',\n      projectId: 'p2',\n      title: 'OAuth',\n      status: 'done',\n      priority: 'P3',\n      assignee: 'u3',\n      type: 'Story',\n      storyPoints: 5,\n      createdAt: Date.now()\n    }];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{\n      id: 'a1',\n      name: 'Dev Laptop',\n      type: 'Laptop',\n      owner: 'u2',\n      status: 'active'\n    }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{\n      id: uuidv4(),\n      userId: 'u2',\n      text: 'Assigned i1',\n      read: false,\n      ts: Date.now()\n    }]));\n  }\n}\nexport function mockLogin(email, password) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\nexport function updateUser(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const idx = arr.findIndex(u => u.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('User not found');\n}\nexport function deleteUser(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const filtered = arr.filter(u => u.id !== id);\n  localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\nexport function getProject(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n}\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const now = Date.now();\n  p.createdAt = now;\n  p.lastUpdated = now;\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\nexport function updateProject(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch,\n      lastUpdated: Date.now()\n    };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Project not found');\n}\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\nexport function getIssue(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n}\nexport function createIssue(data) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = {\n    ...data,\n    id,\n    createdAt: Date.now()\n  };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = {\n      ...arr[idx],\n      ...patch\n    };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Issue not found');\n}\nexport function moveIssue(id, status) {\n  return updateIssue(id, {\n    status\n  });\n}\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}","map":{"version":3,"names":["v4","uuidv4","KEY","USER","USERS","PROJECTS","ISSUES","ASSETS","NOTIFS","ensure","localStorage","getItem","users","id","name","email","role","setItem","JSON","stringify","projects","key","description","leads","createdAt","Date","now","lastUpdated","issues","projectId","title","status","priority","assignee","type","storyPoints","owner","userId","text","read","ts","mockLogin","password","parse","user","find","u","Promise","resolve","logout","removeItem","getCurrentUser","s","listUsers","addUser","arr","push","updateUser","patch","idx","findIndex","reject","deleteUser","filtered","filter","listProjects","getProject","x","addProject","p","deleteProject","updateProject","listIssues","i","getIssue","createIssue","data","Math","floor","random","issue","updateIssue","moveIssue","listAssets","addAsset","a","listNotifs","n","markNotif"],"sources":["C:/Users/vmoun/OneDrive/Desktop/newtieckettool/src/services/mockApi.js"],"sourcesContent":["\n// /*\n//   Same mock API as before but kept compact. Uses localStorage.\n//   Data shapes include accessibility-friendly fields (labels, timestamps).\n// */\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = { USER: 'tf_user_v3', USERS:'tf_users_v3', PROJECTS:'tf_projects_v3', ISSUES:'tf_issues_v3', ASSETS:'tf_assets_v3', NOTIFS:'tf_notifs_v3' };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [{id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},{id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},{id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[{id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3']},{id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2']}];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[{id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},{id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},{id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){ const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]'); arr.push(p); localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr)); return Promise.resolve(p); }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n// import { v4 as uuidv4 } from 'uuid';\n// const KEY = {\n//   USER: 'tf_user_v3',\n//   USERS:'tf_users_v3',\n//   PROJECTS:'tf_projects_v3',\n//   ISSUES:'tf_issues_v3',\n//   ASSETS:'tf_assets_v3',\n//   NOTIFS:'tf_notifs_v3'\n// };\n\n// function ensure(){\n//   if(!localStorage.getItem(KEY.USERS)){\n//     const users = [\n//       {id:'u1',name:'Admin User',email:'admin@demo.com',role:'Admin'},\n//       {id:'u2',name:'Dev Alice',email:'alice@demo.com',role:'Developer'},\n//       {id:'u3',name:'Manager Bob',email:'bob@demo.com',role:'Manager'}\n//     ];\n//     localStorage.setItem(KEY.USERS,JSON.stringify(users));\n//   }\n//   if(!localStorage.getItem(KEY.PROJECTS)){\n//     const projects=[\n//       {id:'p1',key:'ALPHA',name:'Alpha',description:'Alpha project',leads:['u3'], createdAt:Date.now(), lastUpdated:Date.now()},\n//       {id:'p2',key:'BETA',name:'Beta',description:'Beta project',leads:['u2'], createdAt:Date.now(), lastUpdated:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(projects));\n//   }\n//   if(!localStorage.getItem(KEY.ISSUES)){\n//     const issues=[\n//       {id:'i1',projectId:'p1',title:'Setup repo',status:'todo',priority:'P2',assignee:'u2',type:'Task',storyPoints:3,createdAt:Date.now()},\n//       {id:'i2',projectId:'p1',title:'Login bug',status:'inprogress',priority:'P1',assignee:'u2',type:'Bug',storyPoints:1,createdAt:Date.now()},\n//       {id:'i3',projectId:'p2',title:'OAuth',status:'done',priority:'P3',assignee:'u3',type:'Story',storyPoints:5,createdAt:Date.now()}\n//     ];\n//     localStorage.setItem(KEY.ISSUES,JSON.stringify(issues));\n//   }\n//   if(!localStorage.getItem(KEY.ASSETS)){ localStorage.setItem(KEY.ASSETS,JSON.stringify([{id:'a1',name:'Dev Laptop',type:'Laptop',owner:'u2',status:'active'}])); }\n//   if(!localStorage.getItem(KEY.NOTIFS)){ localStorage.setItem(KEY.NOTIFS,JSON.stringify([{id:uuidv4(),userId:'u2',text:'Assigned i1',read:false,ts:Date.now()}])); }\n// }\n\n// export function mockLogin(email,password){ ensure(); const users=JSON.parse(localStorage.getItem(KEY.USERS)); const user=users.find(u=>u.email===email)||users[0]; localStorage.setItem(KEY.USER,JSON.stringify(user)); return Promise.resolve(user); }\n// export function logout(){ localStorage.removeItem(KEY.USER); return Promise.resolve(); }\n// export function getCurrentUser(){ const s=localStorage.getItem(KEY.USER); return s?JSON.parse(s):null; }\n\n// export function listUsers(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS))); }\n// export function addUser(u){ const arr=JSON.parse(localStorage.getItem(KEY.USERS)||'[]'); arr.push(u); localStorage.setItem(KEY.USERS,JSON.stringify(arr)); return Promise.resolve(u); }\n\n// export function listProjects(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS))); }\n// export function getProject(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x=>x.id===id)); }\n// export function addProject(p){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const now = Date.now();\n//   p.createdAt = now;\n//   p.lastUpdated = now;\n//   arr.push(p);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//   return Promise.resolve(p);\n// }\n\n// // ✅ New: delete project\n// export function deleteProject(id){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const filtered = arr.filter(p => p.id !== id);\n//   localStorage.setItem(KEY.PROJECTS,JSON.stringify(filtered));\n//   return Promise.resolve(true);\n// }\n\n// // ✅ New: update project\n// export function updateProject(id, patch){\n//   const arr=JSON.parse(localStorage.getItem(KEY.PROJECTS)||'[]');\n//   const idx=arr.findIndex(p => p.id===id);\n//   if(idx>=0){\n//     arr[idx] = {...arr[idx], ...patch, lastUpdated: Date.now()};\n//     localStorage.setItem(KEY.PROJECTS,JSON.stringify(arr));\n//     return Promise.resolve(arr[idx]);\n//   }\n//   return Promise.reject('Project not found');\n// }\n\n// export function listIssues(projectId){ ensure(); let arr=JSON.parse(localStorage.getItem(KEY.ISSUES)); if(projectId) arr=arr.filter(i=>i.projectId===projectId); return Promise.resolve(arr); }\n// export function getIssue(id){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x=>x.id===id)); }\n// export function createIssue(data){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const id='i'+Math.floor(Math.random()*100000); const issue={...data,id,createdAt:Date.now()}; arr.push(issue); localStorage.setItem(KEY.ISSUES,JSON.stringify(arr)); return Promise.resolve(issue); }\n// export function updateIssue(id,patch){ const arr=JSON.parse(localStorage.getItem(KEY.ISSUES)||'[]'); const idx=arr.findIndex(x=>x.id===id); if(idx>=0){ arr[idx]={...arr[idx],...patch}; localStorage.setItem(KEY.ISSUES,JSON.stringify(arr[idx])); return Promise.resolve(arr[idx]); } return Promise.reject('not found'); }\n// export function moveIssue(id,status){ return updateIssue(id,{status}); }\n\n// export function listAssets(){ ensure(); return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS))); }\n// export function addAsset(a){ const arr=JSON.parse(localStorage.getItem(KEY.ASSETS)||'[]'); arr.push(a); localStorage.setItem(KEY.ASSETS,JSON.stringify(arr)); return Promise.resolve(a); }\n\n// export function listNotifs(userId){ ensure(); const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); return Promise.resolve(userId?arr.filter(n=>n.userId===userId):arr); }\n// export function markNotif(id){ const arr=JSON.parse(localStorage.getItem(KEY.NOTIFS)||'[]'); const idx=arr.findIndex(n=>n.id===id); if(idx>=0){ arr[idx].read=true; localStorage.setItem(KEY.NOTIFS,JSON.stringify(arr)); } return Promise.resolve(); }\n\n\n\n\n\n\n\n\n\n\n\n\n// for mounika\n\nimport { v4 as uuidv4 } from 'uuid';\n\nconst KEY = {\n  USER: 'tf_user_v3',\n  USERS: 'tf_users_v3',\n  PROJECTS: 'tf_projects_v3',\n  ISSUES: 'tf_issues_v3',\n  ASSETS: 'tf_assets_v3',\n  NOTIFS: 'tf_notifs_v3'\n};\n\nfunction ensure() {\n  if (!localStorage.getItem(KEY.USERS)) {\n    const users = [\n      { id: 'u1', name: 'Admin User', email: 'admin@demo.com', role: 'Admin' },\n      { id: 'u2', name: 'Dev Alice', email: 'alice@demo.com', role: 'Developer' },\n      { id: 'u3', name: 'Manager Bob', email: 'bob@demo.com', role: 'Manager' }\n    ];\n    localStorage.setItem(KEY.USERS, JSON.stringify(users));\n  }\n  if (!localStorage.getItem(KEY.PROJECTS)) {\n    const projects = [\n      { id: 'p1', key: 'ALPHA', name: 'Alpha', description: 'Alpha project', leads: ['u3'], createdAt: Date.now(), lastUpdated: Date.now() },\n      { id: 'p2', key: 'BETA', name: 'Beta', description: 'Beta project', leads: ['u2'], createdAt: Date.now(), lastUpdated: Date.now() }\n    ];\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(projects));\n  }\n  if (!localStorage.getItem(KEY.ISSUES)) {\n    const issues = [\n      { id: 'i1', projectId: 'p1', title: 'Setup repo', status: 'todo', priority: 'P2', assignee: 'u2', type: 'Task', storyPoints: 3, createdAt: Date.now() },\n      { id: 'i2', projectId: 'p1', title: 'Login bug', status: 'inprogress', priority: 'P1', assignee: 'u2', type: 'Bug', storyPoints: 1, createdAt: Date.now() },\n      { id: 'i3', projectId: 'p2', title: 'OAuth', status: 'done', priority: 'P3', assignee: 'u3', type: 'Story', storyPoints: 5, createdAt: Date.now() }\n    ];\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(issues));\n  }\n  if (!localStorage.getItem(KEY.ASSETS)) {\n    localStorage.setItem(KEY.ASSETS, JSON.stringify([{ id: 'a1', name: 'Dev Laptop', type: 'Laptop', owner: 'u2', status: 'active' }]));\n  }\n  if (!localStorage.getItem(KEY.NOTIFS)) {\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify([{ id: uuidv4(), userId: 'u2', text: 'Assigned i1', read: false, ts: Date.now() }]));\n  }\n}\n\nexport function mockLogin(email, password) {\n  ensure();\n  const users = JSON.parse(localStorage.getItem(KEY.USERS));\n  const user = users.find(u => u.email === email) || users[0];\n  localStorage.setItem(KEY.USER, JSON.stringify(user));\n  return Promise.resolve(user);\n}\n\nexport function logout() {\n  localStorage.removeItem(KEY.USER);\n  return Promise.resolve();\n}\n\nexport function getCurrentUser() {\n  const s = localStorage.getItem(KEY.USER);\n  return s ? JSON.parse(s) : null;\n}\n\nexport function listUsers() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.USERS)));\n}\n\nexport function addUser(u) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  arr.push(u);\n  localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n  return Promise.resolve(u);\n}\n\nexport function updateUser(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const idx = arr.findIndex(u => u.id === id);\n  if (idx >= 0) {\n    arr[idx] = { ...arr[idx], ...patch };\n    localStorage.setItem(KEY.USERS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('User not found');\n}\n\nexport function deleteUser(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.USERS) || '[]');\n  const filtered = arr.filter(u => u.id !== id);\n  localStorage.setItem(KEY.USERS, JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\n\nexport function listProjects() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)));\n}\n\nexport function getProject(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.PROJECTS)).find(x => x.id === id));\n}\n\nexport function addProject(p) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const now = Date.now();\n  p.createdAt = now;\n  p.lastUpdated = now;\n  arr.push(p);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n  return Promise.resolve(p);\n}\n\nexport function deleteProject(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const filtered = arr.filter(p => p.id !== id);\n  localStorage.setItem(KEY.PROJECTS, JSON.stringify(filtered));\n  return Promise.resolve(true);\n}\n\nexport function updateProject(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.PROJECTS) || '[]');\n  const idx = arr.findIndex(p => p.id === id);\n  if (idx >= 0) {\n    arr[idx] = { ...arr[idx], ...patch, lastUpdated: Date.now() };\n    localStorage.setItem(KEY.PROJECTS, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Project not found');\n}\n\nexport function listIssues(projectId) {\n  ensure();\n  let arr = JSON.parse(localStorage.getItem(KEY.ISSUES));\n  if (projectId) arr = arr.filter(i => i.projectId === projectId);\n  return Promise.resolve(arr);\n}\n\nexport function getIssue(id) {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ISSUES)).find(x => x.id === id));\n}\n\nexport function createIssue(data) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const id = 'i' + Math.floor(Math.random() * 100000);\n  const issue = { ...data, id, createdAt: Date.now() };\n  arr.push(issue);\n  localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n  return Promise.resolve(issue);\n}\n\nexport function updateIssue(id, patch) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ISSUES) || '[]');\n  const idx = arr.findIndex(x => x.id === id);\n  if (idx >= 0) {\n    arr[idx] = { ...arr[idx], ...patch };\n    localStorage.setItem(KEY.ISSUES, JSON.stringify(arr));\n    return Promise.resolve(arr[idx]);\n  }\n  return Promise.reject('Issue not found');\n}\n\nexport function moveIssue(id, status) {\n  return updateIssue(id, { status });\n}\n\nexport function listAssets() {\n  ensure();\n  return Promise.resolve(JSON.parse(localStorage.getItem(KEY.ASSETS)));\n}\n\nexport function addAsset(a) {\n  const arr = JSON.parse(localStorage.getItem(KEY.ASSETS) || '[]');\n  arr.push(a);\n  localStorage.setItem(KEY.ASSETS, JSON.stringify(arr));\n  return Promise.resolve(a);\n}\n\nexport function listNotifs(userId) {\n  ensure();\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  return Promise.resolve(userId ? arr.filter(n => n.userId === userId) : arr);\n}\n\nexport function markNotif(id) {\n  const arr = JSON.parse(localStorage.getItem(KEY.NOTIFS) || '[]');\n  const idx = arr.findIndex(n => n.id === id);\n  if (idx >= 0) {\n    arr[idx].read = true;\n    localStorage.setItem(KEY.NOTIFS, JSON.stringify(arr));\n  }\n  return Promise.resolve();\n}\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAaA;;AAEA,SAASA,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAEnC,MAAMC,GAAG,GAAG;EACVC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,aAAa;EACpBC,QAAQ,EAAE,gBAAgB;EAC1BC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE,cAAc;EACtBC,MAAM,EAAE;AACV,CAAC;AAED,SAASC,MAAMA,CAAA,EAAG;EAChB,IAAI,CAACC,YAAY,CAACC,OAAO,CAACT,GAAG,CAACE,KAAK,CAAC,EAAE;IACpC,MAAMQ,KAAK,GAAG,CACZ;MAAEC,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,YAAY;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAQ,CAAC,EACxE;MAAEH,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,WAAW;MAAEC,KAAK,EAAE,gBAAgB;MAAEC,IAAI,EAAE;IAAY,CAAC,EAC3E;MAAEH,EAAE,EAAE,IAAI;MAAEC,IAAI,EAAE,aAAa;MAAEC,KAAK,EAAE,cAAc;MAAEC,IAAI,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}